@model ERPMVC.Models.Conciliacion

<script>

    //console.log($.fn.jquery);

    function GetConciliacionId() {
        return {
            ConciliacionId: $("#ConciliacionId").val()

        }
    }
    function onsave(e) {
        //   console.log(new Date(e.model.FechaRecepcion).toISOString());
        // e.model.set('FechaRecepcion', new Date(e.model.FechaRecepcion).toISOString());
    }
    /*
   */
    function EditConciliacionLinea() {
       }
    function BackConciliacion() {
        window.location.href = "@Url.Action("Conciliacion", "Conciliacion")";
      }

</script>

<div class="container-fluid">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="modal-header">
                    <button type="button" name="btnprueba" class="close" onclick="BackConciliacion();"><i class="fas fa-arrow-alt-circle-left"></i></button>
                    <h4 class="modal-title">
                        Datos de Conciliacion
                    </h4>
                </div>
                <br />

                <div class="row">
                    <div class="col-md-4 ">
                        <div class="form-group">
                            <label asp-for="ConciliacionId" class="control-label" style="width: 100%;"></label>
                            <input id="ConciliacionId" required class="form-control" style="min-width:100%;" asp-for="ConciliacionId" disabled="disabled" />
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="DateBeginReconciled" class=" control-label" style="width:100%"></label>
                            <kendo-datetimepicker name="DateBeginReconciled"
                                                  style="width: 100%;"
                                                  format="dd/MM/yyyy hh:mm:ss"
                                                  time-format="hh:mm:ss"
                                                  data-val-required="La fecha es requerida"
                                                  for="DateBeginReconciled"></kendo-datetimepicker>
                            <span asp-validation-for="DateBeginReconciled" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="DateEndReconciled" class=" control-label" style="width:100%"></label>
                            <kendo-datetimepicker name="DateEndReconciled"
                                                  style="width: 100%;"
                                                  format="dd/MM/yyyy hh:mm:ss"
                                                  time-format="hh:mm:ss"
                                                  data-val-required="La fecha es requerida"
                                                  for="DateEndReconciled"></kendo-datetimepicker>
                            <span asp-validation-for="DateEndReconciled" class="text-danger"></span>
                        </div>
                    </div>


                </div>

                <div class="row">

                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="BankId" class=" control-label" style="width:100%">Ciudad</label>
                            @* <input type="text" asp-for="City" name="City" class="form-control" autocomplete="off" style="width:100%" />
                            *@<kendo-dropdownlist name="BankId"
                                                  for="@Model.BankId"
                                                  filter="Kendo.Mvc.UI.FilterType.Contains"
                                                  option-label="Seleccionar Banco"
                                                  datatextfield="BankName"
                                                  datavaluefield="BankId"
                                                  style="min-width:100%;"
                                                  readonly="readonly">
                                <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                    <transport>
                                        <read url="@Url.Action("GetBank", "Bank")" />
                                    </transport>
                                </datasource>
                            </kendo-dropdownlist>

                            <span asp-validation-for="BankId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="CheckAccountId" class=" control-label" style="width:100%">Departamento</label>
                            @*<input asp-for="State" name="State" class="form-control" autocomplete="off" style="width:100%" />
                            *@<kendo-dropdownlist name="StateId"
                                                  for="@Model.CheckAccountId"
                                                  filter="Kendo.Mvc.UI.FilterType.Contains"
                                                  option-label="Seleccionar Departamento"
                                                  datatextfield="CheckAccountNo"
                                                  datavaluefield="CheckAccountId"
                                                  style="min-width:100%;"
                                                  readonly="readonly">
                                <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                    <transport>
                                        <read url="@Url.Action("GetCheckAccount", "CheckAccount")" />
                                    </transport>
                                </datasource>
                            </kendo-dropdownlist>

                            <span asp-validation-for="CheckAccountId" class="text-danger k-invalid-msg" data-for="RTN"></span>
                        </div>

                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="FechaConciliacion" class=" control-label" style="width:100%"></label>
                            <kendo-datetimepicker name="FechaConciliacion"
                                                  style="width: 100%;"
                                                  format="dd/MM/yyyy hh:mm:ss"
                                                  time-format="hh:mm:ss"
                                                  data-val-required="La fecha es requerida"
                                                  for="FechaConciliacion"></kendo-datetimepicker>
                            <span asp-validation-for="FechaConciliacion" class="text-danger"></span>
                        </div>
                    </div>

                </div>


                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="NombreArchivo" class="control-label" style="width: 100%;"></label>
                            <input type="text" id="NombreArchivo" required class="form-control" style="min-width:100%;" asp-for="NombreArchivo" readonly="readonly" />

                        </div>
                    </div>



                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="SaldoConciliado" class=" control-label" style="width:100%"></label>
                            <kendo-numerictextbox name="SaldoConciliado"
                                                  format="n2"
                                                  min="0"
                                                  required class="control-label right bold"
                                                  style="min-width: 100%;text-align:right;padding-right: 3px"
                                                  max="999999999"
                                                  step="1"
                                                  disabled="disabled"
                                                  for="SaldoConciliado"></kendo-numerictextbox>

                        </div>
                    </div>


                </div>


            </div>
        </div>
    </div>

</div>
<h3 class="text-themecolor">Lineas de Conciliacion Bancaria</h3>
@(Html.Kendo().Grid<ERPMVC.Models.ConciliacionLinea>
            ()
            .Name("gridConciliacionLinea")
            .Columns(columns =>
            {
                columns.Command(command =>
                {

        //command.Custom("Ver detalles").Text(" ").IconClass("far fa-list-alt").Click("DetallesVendor");
        command.Custom("Editar").Text(" ").IconClass("fa fa-edit").Click("EditConciliacionLinea");

                }).Width(100);

                columns.Bound(p => p.ConciliacionLineaId).Title("Id").Width(1);
                columns.Bound(p => p.ReferenceTrans).Title("Referencia de Transaccion").Width(250);
                columns.Bound(p => p.Debit).Title("Debito").Width(250);
                columns.Bound(p => p.Debit).Title("Credito").Width(250);
                columns.Bound(p => p.Monto).Title("Balance").Width(150);
                columns.Bound(p => p.TransDate).Title("Fecha de Transaccion").Format("{0:dd/MM/yyyy}").Width(200);

            })
            .Filterable(f => f.Operators(o => o.ForString(s => s
            .Clear()
            .Contains("Contiene")
            .DoesNotContain("No contiene")
            .EndsWith("Termina con")
            .IsEqualTo("Es igual a")
            .IsNotEqualTo("No es igual a")
            .IsNull("Es nulo")
            .StartsWith("Inicia con")


            )
            .ForNumber(n => n
            .Clear()
            .IsEqualTo("Es igual a")
            .IsGreaterThan("Es mayor que")
            .IsLessThan("Es menor que")
            .IsNull("Es nulo")
            .IsLessThanOrEqualTo("Es menor o igual que")
            .IsGreaterThanOrEqualTo("Es mayor o igual que")
            )
            .ForDate(d => d
            .Clear()
            .IsEqualTo("Es igual que")
            .IsGreaterThan("Es mayor que")
            .IsLessThan("Es menor que")
            .IsLessThanOrEqualTo("Es menor o igual que")
            .IsGreaterThanOrEqualTo("Es mayor o igual que")
            .IsNotEqualTo("No es igual que")
            )
            ))
            .ToolBar(tools =>
            {
    // tools.Create();
    tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus")
                .HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "AddConciliacionLinea()" });
                tools.Excel().Text("Exportar a excel").HtmlAttributes(new { @class = "toolbar-field" });
                tools.Pdf().Text("Exportar a pdf").HtmlAttributes(new { @class = "toolbar-field" });



            })
            .Editable(e => e.Mode(GridEditMode.PopUp).ConfirmDelete("¿Esta seguro que desea eliminar este registro?"))
            .Sortable()
            .Pageable()
            .Filterable()
            .Scrollable()
            .Pdf(pdf => pdf.FileName("ConciliacionLineaReport" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
            + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
            .ProxyURL(Url.Action("Export", "Home")).AllPages())
            .Excel(excel => excel.FileName("ConciliacionLineaReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
            + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
            .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
            .DataSource(dataSource =>
            dataSource
            .WebApi()

            .ServerOperation(true)
            .Model(model =>
            {
                model.Id(p => p.ConciliacionLineaId);
                model.Field(p => p.ReferenceTrans).Editable(true);
                model.Field(p => p.TransDate);//.DefaultValue(
                                              //ViewData["defaultVendor"] as ERPMVC.Models.VendorType);


})
            //.Events(events => events.Error("error_hadndler"))
            .Read(read => read.Action("GetConciliacionLinea", "ConciliacionLinea").Data("GetConciliacionId" +
            ""))
            .Create(create => create.Action("Insert", "ConciliacionLinea"))
            .Update(update => update.Action("Update", "ConciliacionLinea", new { VendorId = "{0}" }).Type(HttpVerbs.Put))
            //.Destroy(destroy => destroy.Action("Delete", "Vendor", new { VendorId = "{0}" }).Type(HttpVerbs.Delete))

            )
            .Events(e =>
            {
                e.Save("onsave");

            })
)

@*
    <div id="NumConciliacionLinea">
        @await Html.PartialAsync("pvwAddVendor", new ERPMVC.DTO.VendorDTO { VendorId = 0 })
    </div>

*@

