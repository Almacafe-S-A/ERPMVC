@using RazorLight.Extensions
@model ERPMVC.DTO.ConciliacionDTO

@{ 
    Layout = null;
    var messages = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." } };
    var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };

}

<script>
    function BancoSeleccion() {
        return {
            BankId: $("#BankId").val()
        };
    }    

    function CuentaBancoSeleccion() {
        return {
            CuentaId: $("#CheckAccountId").val()
        };
    }

    function IniciarConciliacion(e) {
        //debugger;
        var validador = $("#mdlCuerpo").kendoValidator().data("kendoValidator");
        if (validador.validate()) {
            $("#btnIniciar").data("kendoButton").enable(false);
            $("#btnCancelar").data("kendoButton").enable(true);
            $("#btnGuardar").data("kendoButton").enable(true);
            $("#DateBeginReconciled").data("kendoDatePicker").enable(false);
            $("#DateEndReconciled").data("kendoDatePicker").enable(false);
            $("#BankId").data("kendoDropDownList").enable(false);
            $("#AccountId").data("kendoDropDownList").enable(false);
            $("#CheckAccountId").data("kendoDropDownList").enable(false);
            if (@Model.ConciliacionId !== 0 && @Model.Editar === 1) {
                SaldoLibro(false);
            } else {
                SaldoLibro(true);
            }
            
        }
    }

    function CancelarConciliacion(e) {
        $("#btnIniciar").data("kendoButton").enable(true);
        $("#btnCancelar").data("kendoButton").enable(false);
        $("#DateBeginReconciled").data("kendoDatePicker").enable(true);
        $("#DateEndReconciled").data("kendoDatePicker").enable(true);
        $("#BankId").data("kendoDropDownList").enable(true);
        $("#AccountId").data("kendoDropDownList").enable(true);
        $("#CheckAccountId").data("kendoDropDownList").enable(true);
    }

    function GuardarConciliacion() {
        //debugger;
        var saldoLbro = Number($("#SaldoLibro").val());
        var saldoBnco = Number($("#SaldoBanco").val());
        var saldoConciliado = Number($("#SaldoConciliado").val());
        var now = new Date();
        if (saldoConciliado !== saldoBnco) {
            alert('Conciliacion no esta cuadrada');
        } else {
            var lineas = [];
            var lineasSaldo = $("#grdSaldoLibro").getKendoGrid().dataSource.data();
            //debugger;
            lineasSaldo.forEach(r => {
                var registro = {
                    ConciliacionLineaId: r.ConciliacionLineaId,
                    MotivoId: null,
                    ConciliacionId: @Model.ConciliacionId,
                    Credit: r.Credit,
                    Debit: r.Debit,
                    ReferenciaBancaria: '',
                    CurrencyId: 1,
                    TransDate: r.TransDate,
                    ReferenceTrans: 'ASIENTO CONTABLE',
                    JournalEntryId: r.JournalEntryId,
                    JournalEntryLineId: r.JournalEntryLineId,
                    VoucherTypeId: 0,
                    Reconciled: r.LineaConciliacion !== "" ? 1 : 0,
                    ChecknumberId: 0,
                    MonedaName: 'Lempira',
                    FechaCreacion: now,
                    FechaModificacion: now,
                    UsuarioCreacion: '',
                    UsuarioModificacion: ''
                };
                lineas.push(registro);
            });

            var conciliacion = {
                ConciliacionId: @Model.ConciliacionId,
                BankId: $("#BankId").val(),
                AccountId: $("#AccountId").val(),
                BankName: $("#BankId").data("kendoDropDownList").text(),
                CheckAccountId: $("#CheckAccountId").val(),
                FechaConciliacion: $("#FechaConciliacion").data("kendoDatePicker").value(),
                DateBeginReconciled: $("#DateBeginReconciled").data("kendoDatePicker").value(),
                DateEndReconciled: $("#DateEndReconciled").data("kendoDatePicker").value(),
                SaldoConciliado: $("#SaldoConciliado").val(),
                FechaCreacion: now,
                FechaModificacion: now,
                UsuarioCreacion: '',
                UsuarioModificacion:'',
                SaldoBanco: $("#SaldoBanco").val(),
                SaldoLibro: $("#SaldoLibro").val(),
                ConciliacionLinea: lineas
            };
            //debugger;
            $.ajax({
                url: '@Url.Action("SaveConciliacion", "Conciliacion")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(conciliacion),
                success: function (data) {
                    $.toast({
                        heading: 'Satisfactorio',
                        text: '<br/><br/>Datos guardados correctamente.',
                        position: 'top-right',
                        loaderBg: '#ff6849',
                        icon: 'success',
                        hideAfter: 3000,
                        stack: 6
                    });
                    window.RefreshConciliacion();
                    $("#myModalConciliacionUpload").modal('hide');

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    notification.show({
                        title: "Validacion",
                        message: textStatus + ": " + XMLHttpRequest.responseText
                    }, "error");
                }
            });

        }
    }
</script>

<div id="myModalConciliacionUpload" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeConciliacionBancaria();">&times;</button>
                <h4 class="modal-title">Conciliación bancaria</h4>
            </div>

            <div class="modal-body" kendo-validator="true" name="mdlCuerpo">
                <div class="row">
                    <div class="col">
                        <label for="IdConciliacion">Número Conciliación:</label><br />
                        <input class="form-control" type="text" readonly id="IdConciliacion" name="IdConciliacion" value="@Model.ConciliacionId" style="width: 100%" />
                    </div>
                    <div class="col">
                        <label for="IdBanco">Banco:</label>
                        <kendo-dropdownlist name="IdBanco"
                                            for="@Model.BankId"
                                            filter="Kendo.Mvc.UI.FilterType.Contains"
                                            option-label="Seleccioné un banco"
                                            datatextfield="BankName"
                                            datavaluefield="BankId"
                                            required
                                            validationMessage="Seleccione el Banco"
                                            style="width: 100%">
                            <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                <transport>
                                    <read url="@Url.Action("GetBank","Bank")" />
                                </transport>
                            </datasource>
                        </kendo-dropdownlist>
                    </div>

                    <div class="col">
                        <label for="CheckAccountId">Cuenta Banco:</label>
                        @if (Model.Editar == 1)
                        {
                            <kendo-dropdownlist name="CheckAccountId"
                                                for="@Model.CheckAccountId"
                                                filter="Kendo.Mvc.UI.FilterType.Contains"
                                                option-label="Seleccioné una cuenta de banco"
                                                datatextfield="CodigoNombre"
                                                datavaluefield="AccountManagementId"
                                                cascade-from="BankId"
                                                auto-bind="false"
                                                required
                                                validationMessage="Seleccione la cuenta de Banco"
                                                style="width: 100%">
                                <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                    <transport>
                                        <read url="@Url.Action("GetAccountManagementByBankId","AccountManagement")" data="BancoSeleccion" />
                                    </transport>
                                </datasource>
                            </kendo-dropdownlist>
                        }
                        else
                        {
                            <kendo-dropdownlist name="CheckAccountId"
                                                for="@Model.CheckAccountId"
                                                filter="Kendo.Mvc.UI.FilterType.Contains"
                                                option-label="Seleccioné una cuenta de banco"
                                                datatextfield="CodigoNombre"
                                                datavaluefield="AccountManagementId"
                                                required
                                                validationMessage="Seleccione la cuenta de Banco"
                                                style="width: 100%">
                                <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                    <transport>
                                        <read url="@Url.Action("GetAccountManagementByBankId","AccountManagement")" data="BancoSeleccion" />
                                    </transport>
                                </datasource>
                            </kendo-dropdownlist>
                        }

                    </div>
                    <div class="col">
                        <label for="AccountId">Cuenta Contable:</label>
                        @if (Model.Editar == 1)
                        {
                            <kendo-dropdownlist name="IdCuentaMayor"
                                                for="@Model.AccountId"
                                                filter="Kendo.Mvc.UI.FilterType.Contains"
                                                option-label="Seleccioné una cuenta contable"
                                                datatextfield="CodigoNombre"
                                                datavaluefield="AccountId"
                                                cascade-from="CheckAccountId"
                                                auto-bind="false"
                                                required
                                                validationMessage="Seleccione la cuenta contable"
                                                style="width: 100%">
                                <datasource type="DataSourceTagHelperType.WebApi" server-operation="true" server-filtering="false">
                                    <transport>
                                        <read url="@Url.Action("GetCuentaContableCuentaBanco","Accounting")" data="CuentaBancoSeleccion" />
                                    </transport>
                                </datasource>
                            </kendo-dropdownlist>
                        }
                        else
                        {
                            <kendo-dropdownlist name="IdCuentaMayor"
                                                for="@Model.AccountId"
                                                filter="Kendo.Mvc.UI.FilterType.Contains"
                                                option-label="Seleccioné una cuenta contable"
                                                datatextfield="CodigoNombre"
                                                datavaluefield="AccountId"
                                                required
                                                validationMessage="Seleccione la cuenta contable"
                                                style="width: 100%">
                                <datasource type="DataSourceTagHelperType.WebApi" server-operation="true" server-filtering="false">
                                    <transport>
                                        <read url="@Url.Action("GetCuentaContableCuentaBanco","Accounting")" data="CuentaBancoSeleccion" />
                                    </transport>
                                </datasource>
                            </kendo-dropdownlist>
                        }
                    </div>


                </div>
                <div class="row">
                    <div class="col">
                        <label for="fchConciliacion">Fecha Conciliación:</label>
                        <kendo-datepicker name="fchConciliacion"
                                          format="{0:dd/MM/yyyy}"
                                          value="@Model.FechaConciliacion"
                                          for="@Model.FechaConciliacion"
                                          readonly />
                    </div>
                    <div class="col">
                        <label for="DateBeginReconciled">Desde:</label>
                        <kendo-datepicker name="DateBeginReconciled"
                                          format="{0:dd/MM/yyyy}"
                                          value="@Model.DateBeginReconciled"
                                          for="@Model.DateBeginReconciled"
                                          required
                                          validationMessage="La fecha de inicio es requerida" />
                    </div>
                    <div class="col">
                        <label for="DateEndReconciled">Hasta:</label>
                        <kendo-datepicker name="DateEndReconciled"
                                          format="{0:dd/MM/yyyy}"
                                          value="@Model.DateEndReconciled"
                                          for="@Model.DateEndReconciled"
                                          required
                                          validationMessage="La fecha final es requerida" />
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label for="SaldoBanco">Saldo Banco:</label>
                        <input id="SaldoBanco" class="form-control" name="SaldoBanco" required validationMessage="Ingrese el saldo de Banco" for="@Model.SaldoBanco" value="@Model.SaldoBanco" style="width: 12em;"/>
                    </div>
                    <div class="col">
                        <label for="SaldoLibro">Saldo Libro:</label>
                        <input id="SaldoLibro" class="form-control" name="SaldoLibro" required validationMessage="Ingrese el saldo de Libro" for="@Model.SaldoLibro" value="@Model.SaldoLibro" readonly style="width: 12em;"/>
                    </div>
                    <div class="col">
                        <label for="SaldoConciliado">Saldo Conciliado:</label>
                        <input id="SaldoConciliado" class="form-control" name="SaldoConciliado" value="@Model.SaldoConciliado" readonly style="width: 12em;" />
                    </div>
                    <div class="col">
                        <kendo-button name="btnIniciar" on-click="IniciarConciliacion" style="width: 100%;">Iniciar Conciliación</kendo-button>
                    </div>
                    <div class="col">
                        <kendo-button name="btnCancelar" on-click="CancelarConciliacion" enable="false" style="width: 100%;">Cancelar</kendo-button>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col">
                        <h3>Saldo Libro</h3>

                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="row">
                            <div class="col">
                                <div id="grdSaldoLibro"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <kendo-button name="btnGuardar" on-click="GuardarConciliacion" enable="false" style="width: 100%;">Guardar Conciliación</kendo-button>
                        @*<kendo-button name="btnRefrescar" on-click="InicializarVentana"  style="width: 100%;">Refrescar</kendo-button>*@
                    </div>
                </div>

            </div>

        </div>
    </div>
</div>



<script>

    var montoConciliado = 0;
    var datosLibro = [];
    var linea = 1;
    var lineaBanco = 1;
    var removerPrimeraLineaBanco = true;
    var removerPrimeraLineaFaltaLibro = true;

    $(document).ready(function () {
        linea = 1;
        lineaBanco = 1;
        removerPrimeraLineaBanco = true;
        removerPrimeraLineaFaltaLibro = true;
        InicializarVentana();
    });
    
    

    function SaldoLibro(e) {
        //debugger;
        if (e === true) {
            var codigoCuenta = $("#AccountId").val();
            var desde = kendo.toString(kendo.parseDate($("#DateBeginReconciled").val(), "dd/MM/yyyy"),"yyyy-MM-dd");
            var hasta = kendo.toString(kendo.parseDate($("#DateEndReconciled").val(), "dd/MM/yyyy"), "yyyy-MM-dd");
            $.ajax({
                url: '@Url.Action("GetLineasAsientoContableCuentaRangoFechas", "JournalEntry")?Cuenta='+codigoCuenta+'&Desde='+desde+'&hasta='+hasta,
                method: 'GET',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                success: function (result) {

                    datosLibro = result.map(r => ({
                        LineaId: linea++,
                        TransDate: kendo.parseDate(r.FechaTransaccion, "yyyy-MM-dd'T'HH:mm:ss"),
                        Credit: r.Credit,
                        Debit: r.Debit,
                        TipoDoc: r.TipoDocumento,
                        LineaConciliacion: "",
                        JournalEntryId: r.JournalEntryId,
                        JournalEntryLineId: r.JournalEntryLineId,
                        ConciliacionLineaId: 0
                    }));
                    //debugger;
                    $("#grdSaldoLibro").getKendoGrid().dataSource.data(datosLibro);
                    TotalizarSaldoLibro();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(textStatus + ": " + XMLHttpRequest.responseText);
                }
            });
        } else {
            return datosLibro;
        }
    }

    function InicializarVentana(e) {
        
        $("#grdSaldoLibro").kendoGrid({
            dataSource: {
                data: window.datosLibros,
                schema: {
                    model: {
                        fields: {
                            LineaId: { name: "LineaId", type: "number" , editable:false },
                            TransDate: { name: "TransDate", type: "date", editable: false },
                            TipoDoc: { name: "TipoDoc", type: "string", editable: false },
                            Credit: { name: "Credit", type: "number", editable: false },
                            Debit: { name: "Debit", type: "number", editable: false },
                            LineaConciliacion: { name: "LineaConciliacion", type: "string", editable: @Model.Editar=== 1 ? true : false },
                            ConciliacionLineaId: { name: "ConciliacionLineaId", type: "number" }
                        }
                    }
                }
            },
            columns: [
                { field: "LineaId", title: "No.", width: 80 },
                { field: "TransDate", title: "Fecha Transacción", width: 200, format: "{0:dd/MM/yyyy HH:mm:ss}" },
                { field: "Credit", title: "Crédito", width: 100 },
                { field: "Debit", title: "Débito", width: 100 },
                { field: "TipoDoc", title: "Tipo Documento", width: 100 },
                { field: "LineaConciliacion", title: "Conciliada", width: 50},
                { field: "ConciliacionLineaId", hidden: true }
            ],
            height: 400,
            scrollable: true,
            editable: true,
            edit: EditadoSaldoLibro
        });

        if (@Model.ConciliacionId !== 0) {
            $("#BankId").val(@Model.BankId);
            $("#AccountId").val(@Model.AccountId);
            $("#CheckAccountId").val(@Model.CheckAccountId);
            if (@Model.Editar === 0) {
                $("#BankId").data("kendoDropDownList").enable(false);
                $("#AccountId").data("kendoDropDownList").enable(false);
                $("#CheckAccountId").data("kendoDropDownList").enable(false);
                $("#DateBeginReconciled").data("kendoDatePicker").readonly();
                $("#DateEndReconciled").data("kendoDatePicker").readonly();
                $("#btnIniciar").data("kendoButton").enable(false);
                $("#btnCancelar").data("kendoButton").enable(false);
                $("#btnGuardar").data("kendoButton").enable(false);
                $("#grdSaldoLibro").getKendoGrid().options.editable = false;
            } else if(@Model.Editar === 1) {
                $("#BankId").data("kendoDropDownList").enable(true);
                $("#AccountId").data("kendoDropDownList").enable(true);
                $("#CheckAccountId").data("kendoDropDownList").enable(true);
                $("#DateBeginReconciled").data("kendoDatePicker").readonly(false);
                $("#DateEndReconciled").data("kendoDatePicker").readonly(false);
                $("#btnIniciar").data("kendoButton").enable(true);
                $("#btnIniciar").text("Continuar Conciliacion");
                $("#btnCancelar").data("kendoButton").enable(false);
                $("#btnGuardar").data("kendoButton").enable(false);
                $("#grdSaldoLibro").getKendoGrid().options.editable = false;
            }

            datosLibro = [];
            
            var lineas = JSON.parse('@Html.Raw(Json.Serialize(@Model.ConciliacionLinea))');
            var motivos = JSON.parse('@Html.Raw(Json.Serialize(@ViewData["motivos"]))');
            
            lineas.forEach(r => {
                if (r.JournalEntryId !== null && r.JournalEntryId !== 0) {                    
                    var regLibro = {
                        LineaId: window.linea++,
                        TransDate: kendo.parseDate(r.TransDate, "yyyy-MM-dd'T'HH:mm:ss"),
                        Credit: r.Credit,
                        Debit: r.Debit,
                        TipoDoc: r.TipoDocumento,
                        LineaConciliacion: r.Reconciled? "X":"",
                        JournalEntryId: r.JournalEntryId,
                        JournalEntryLineId: r.JournalEntryLineId,
                        ConciliacionLineaId: r.ConciliacionLineaId
                    };
                    datosLibro.push(regLibro);
                } 
            });
            $("#grdSaldoLibro").getKendoGrid().dataSource.data(datosLibro);
        }
        
    }

    function closeConciliacionBancaria() {
        window.RefreshConciliacion();
        $("#myModalConciliacionUpload").modal('hide');
    }

    function EditadoSaldoLibro(e) {
        $("[name='LineaConciliacion']", e.container).blur(function () {
            var grid = $("#grdSaldoLibro").getKendoGrid();
            var data = $("#grdSaldoLibro").getKendoGrid().dataSource.data();
            montoConciliado = 0;
            data.forEach(r => montoConciliado = r.LineaConciliacion !== '' ? montoConciliado + Math.abs(r.Credit - r.Debit) : montoConciliado);
            $("#SaldoConciliado").val(montoConciliado);
        });
    }

    function TotalizarSaldoLibro() {
        var data = $("#grdSaldoLibro").getKendoGrid().dataSource.data();
        var creditos = 0;
        var debitos = 0;
        data.forEach(r => {
            creditos = creditos + r.Credit;
            debitos = debitos + r.Debit;
        });
        $("#SaldoLibro").val(Math.abs(creditos-debitos));
    }
    
</script>