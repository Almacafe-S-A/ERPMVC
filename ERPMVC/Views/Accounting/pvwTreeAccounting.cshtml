@{ Layout = null;
    var messages = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." },
// {"required","Valor requerido" }
};

    var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
    var typesAccount = ViewData["TypeAccounts"] as IEnumerable<ERPMVC.Models.TypeAccount>;
}


<script>



       function EditAccount(e) {
          //   e.preventDefault();
           var dataItem = e;//this.dataItem($(e.currentTarget).closest("tr"));
             var dataObject = {
                 AccountId: dataItem.AccountId,
                editar : 0
            };

            $.ajax({
                url: '@Url.Action("pvwAddAccounting", "Accounting")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(dataObject),
                success: function (result) {
                    $("#NumAccounting").html('');
                    $("#NumAccounting").html(result);


                    //$("#btnCAI").hide();
                    $('#ModalAccounting').modal('show');
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(textStatus + ": " + XMLHttpRequest.responseText);
                }
           });

         }



    var TypeAccountId = 0;
    function TypeAccounting(TypeAccountIdv) {
        kendo.ui.progress($("#divClasificacionCuentas"), true);

        TypeAccountId = TypeAccountIdv;

        var treelist = $("#AccountingTreelist").data("kendoTreeList");
        treelist.dataSource.read();


    }
    function RefreshTreeList() {
        kendo.ui.progress($("#divClasificacionCuentas"), true);

        // TypeAccountId = TypeAccountIdv;

        var treelist = $("#AccountingTreelist").data("kendoTreeList");
        treelist.dataSource.read();

    }
    function DataTypeAccounting() {
        return { 'TypeAccountId': TypeAccountId }
    }

    function onBound() {
        kendo.ui.progress($("#divClasificacionCuentas"), false);
    }

</script>

<script id="typeAccount-template" type="text/x-kendo-template">


    @* <div class='TypeAccountId'></div>
        <div class='TypeAccountName'>#: Nombre #</div>

            url='url(@Url.Action("GetTypeAccount", "TypeAccount"));'
            <kendo-dropdownlist name="f.TypeAccountId"
                                for="f.TypeAccountId"
                                filter="Kendo.Mvc.UI.FilterType.Contains"
                                option-label="Seleccionar Tipo"
                                datatextfield="TypeAccountName"
                                datavaluefield="TypeAccountId"
                                style="width: 100%;">
                <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                    <transport>
                        <read url="@Url.Action("GetTypeAccount", "TypeAccount")" />
                    </transport>
                </datasource>
            </kendo-dropdownlist>*@

</script>

        @(Html.Kendo().TreeList<ERPMVC.DTO.AccountingDTO>()
                                                        .Name("AccountingTreelist")
                                                        .Toolbar(toolbar =>
                                                        {
                                                            // toolbar.Create().Text(" update.Action("Update", "Accounting", new { AccountId = "{0}" }).Type(HttpVerbs.Put)");
                                                            //  toolbar.Save().Click(@Url.Action("Update", "Accounting", new { AccountId = "{0}" }));
                                                            // toolbar.Save();
                                                            //toolbar.Cancel();
                                                        }
                                                             )//.Toolbar(toolbar => toolbar.)
                                                              //    .HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "AddAccounting()" })
                                                        .Columns(columns =>
                                                        {

                                                            columns.Add().Field(f => f.AccountName).Width(550);
                                                            columns.Add().Field(f => f.AccountBalance).Width(200).Format("{0:N4}");
                                                            columns.Add().Field(f => f.AccountCode).Width(200);
                                                            columns.Add().Field(f => f.BlockedInJournal).Width(200);
                                                            columns.Add().Field(f => f.IsCash).Width(200);
                                                            columns.Add().Field(f => f.TypeAccountId).Width(200);
                                                            /*.TemplateId("typeAccount-template")*/
                                                            //.TemplateId("#=TypeAccount.TypeAccountName#").Sortable(false).Width(200);
                                                            columns.Add().Field(f => f.ParentAccountId).Width(200);
                                                            /* columns.Add().Width(300).Command(c =>
                                                             {
                                                                 c.CreateChild().Text(" ");
                                                                 //   c.Edit().Text(" ");  //.IconClass("fa fa-edit").Click("EditAccount");

                                                             });
                                                         */
                                                        })
                                            // .HtmlAttributes((new { dblclick = " " });
                                             .Toolbar(toolbar => toolbar.Create().Text("Raiz"))
                                            //tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus")



                                            .Events(e =>
                                            {
                                                e.DataBound("onBound");
                                            })
                                             .Editable(//e => e.Mode("inline")
                                                       // e => e.Mode(TreeListEditMode.InCell).Move(false)
                                             )

                                            // .Editable(/*e => e.Mode(TreeListEditMode.PopUp)*/)
                                            .DataSource(dataSource => dataSource
                                            .Batch(true)

                                                .Create(create => create.Action("SaveAccounting", "Accounting").Type(HttpVerbs.Post))

                                                .Read(read => read.Action("AccountingRes", "Accounting").Data("DataTypeAccounting"))

                                            .Update(update => update.Action("Update", "Accounting", new { AccountId = "{0}" }).Type(HttpVerbs.Put))
                                            .Model(m =>
                                            {
                                                m.Id(f => f.AccountId);
                                                m.ParentId(f => f.ParentAccountId).Editable(false);

                                                m.Field(f => f.BlockedInJournal).Editable(true);
                                                m.Field(f => f.AccountCode).Editable(true);
                                                m.Field(f => f.IsCash).Editable(true);

                                                m.Field(f => f.TypeAccountId).Editable(true);
                                                //.DefaultValue(
                                                //                                          ViewData["defaultTypeAccount"] as ERPMVC.Models.TypeAccount).Editable(true);

                                                //.Editable(true);
                                                m.Field(f => f.AccountName).Editable(true);
                                                m.Field(f => f.AccountBalance).Editable(false);
                                                m.Expanded(true);


                                            })

                                        )
                                        .Selectable(true)
        // .HtmlAttributes(new { dblclick = " "})
        /*.Events(events =>
        {
            events.Edit("onEdit");
        })*/

        )

        <div id="div" class="modal-header">
            <button id="btnAccounting" class="btn waves-effect waves-light btn-lg btn-rounded btn-primary" type="button" onclick="AddAccounting()">Agregar Cuenta </button>

        </div>


        <style>

            #div {
                background-color: #0094ff;
                width: 100%;
                height: 50px;
                line-height: 50px;
                position: absolute;
                top: 0;
                left: 0;
            }
        </style>

        @*@foreach (ERPMVC.Models.TypeAccount Tipo in ViewBag.ListTypeAccount)

    {
    if(Tipo.TypeAccountId == ViewBag.AccountingParameter)
    {
    <div id="@Tipo.TypeAccountId">
        <h4>@Tipo.TypeAccountName</h4>
        @(
                                      Html.Kendo().TreeView()
                                      .Name("TreeViewTemplateBiding")
                                      .TemplateId("TreeViewTemplate")

                                           .BindTo((List<ERPMVC.Models.NodeViewModel>)ViewBag.Tree, (Kendo.Mvc.UI.Fluent.NavigationBindingFactory<TreeViewItem> mappings) =>
                                           {
                                               mappings.For<ERPMVC.Models.NodeViewModel>(binding => binding.ItemDataBound((item, node) =>
                                                   {
                                                       item.Id = node.Id.ToString();
                                                       item.Text = node.Title;
                                                       item.Expanded = node.Expanded;
                                                   })
                                             .Children(node => node.Children));
                                           }).Checkboxes(true)
        )
    </div>
    }
    }*@
    @*
    *@

    <script type="text/javascript">
    var padre;

    var validar = false;

    $(window).scroll(function () {
        $("#div").stop().animate({ "marginTop": ($(window).scrollTop()) + "px", "marginLeft": ($(window).scrollLeft()) + "px" }, "slow");
    });


    debugger;
    $('document').ready(function () {



          $("#AccountingTreelist").click(function () {
               // alert('Jquery Tutorial');
               var treelist = $("#AccountingTreelist").data("kendoTreeList");
               var row = treelist.select();
               if (row.length > 0) {
                   /// EditAccount(row);
                   var data = treelist.dataItem(row);
                  // alert("Seleccionaste: " + data.AccountId);
                   validar = true;
                   padre = data.AccountId;
                   // console.log(data.AccountId);
               };

           });
        $("#AccountingTreelist").dblclick(function () {
            // alert('Jquery Tutorial');
            var treelist = $("#AccountingTreelist").data("kendoTreeList");

            var row = treelist.select();


            //row.e
            if (row.length > 0) {
                /// EditAccount(row);
                var data = treelist.dataItem(row);
               // alert("Seleccionaste: doble click" + data.AccountId);
               // validar = true;
                padre = data.AccountId;
                //  var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
                //this.dataItem($(e.currentTarget).editar("tr"));
                EditAccount(data);
                $("#AccountingTreelist").data("kendoTreeList").clearSelection();

                //console.log(data);
               // console.log(JSON.stringify(data));

            };

        });

        $(".clearSelection").click(function () {
            $("#AccountingTreelist").data("kendoTreeList").clearSelection();


            /*var selectRow = function (e) {
                if (e.type != "keypress" || kendo.keys.ENTER == e.keyCode) {
                    var treelist = $("#AccountingTreelist").data("kendoTreeList"),
                        rowIndex = treelist.select(), //$("#selectRow").val(),
                        row = treelist.content.find("tr:visible").eq(rowIndex);
                    padre = row.AccountId;
                    validar = true;
                    // alert("Seleccionaste: " + row.AccountId);


                    // treelist.select(row);
                }
            };*/
            // alert("Seleccionaste: " + selectRow.data.dataItem().AccountId;
            //".toggleGroup").click(toggleGroup);
            /* treelist.items().each(function (i, el) {
                 $(el).on("dblclick", function (event) {
                     alert($(this).text());
                 });*/
        });

    });



    function AddAccounting() {









        debugger;
        $('document').ready(function () {



              $("#AccountingTreelist").click(function () {
                   // alert('Jquery Tutorial');
                   var treelist = $("#AccountingTreelist").data("kendoTreeList");
                   var row = treelist.select();
                   if (row.length > 0) {
                       /// EditAccount(row);
                       var data = treelist.dataItem(row);
                       validar = true;

                      // alert("Seleccionaste: " + data.AccountId);
                       // console.log(data.AccountId);
                   };

               });
            $(".clearSelection").click(function () {
                $("#AccountingTreelist").data("kendoTreeList").clearSelection();


                var selectRow = function (e) {
                    if (e.type != "keypress" || kendo.keys.ENTER == e.keyCode) {
                        var treelist = $("#AccountingTreelist").data("kendoTreeList"),
                            rowIndex = treelist.select(), //$("#selectRow").val(),
                            row = treelist.content.find("tr:visible").eq(rowIndex);
                        padre = row.AccountId;
                        validar = true;
                        // alert("Seleccionaste: " + row.AccountId);


                        // treelist.select(row);
                    }
                };
                // alert("Seleccionaste: " + selectRow.data.dataItem().AccountId;
                //".toggleGroup").click(toggleGroup);
                /* treelist.items().each(function (i, el) {
                     $(el).on("dblclick", function (event) {
                         alert($(this).text());
                     });*/
            });

        });
        if (validar === true) {
            validar = false;
            debugger;
           // alert("Seleccionaste: " + padre);
             $('#ModalAccounting').find(':input').not(':submit').val('');

            // $('#ModalAccounting').modal('show');
            $("#AccountId").val('0');
            var dataObject = {
                AccountId: 0,
                ParentAccountId:padre,
                editar: 1
            };
             $.ajax({
                url: '@Url.Action("pvwAddAccounting", "Accounting")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(dataObject),
                success: function (result) {
                    $("#NumAccounting").html('');
                    $("#NumAccounting").html(result);
                    //$("#btnCAI").hide();
                    $('#ModalAccounting').modal('show');
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(textStatus + ": " + XMLHttpRequest.responseText);
                }
            });
            $("#AccountingTreelist").data("kendoTreeList").clearSelection();

        }
        else {
            alert("No ha seleeccionado una cuenta contable padre.");


        }

    }
    </script>
