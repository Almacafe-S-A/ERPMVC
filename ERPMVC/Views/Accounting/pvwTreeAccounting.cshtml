@{ Layout = null;
    var messages = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." },
// {"required","Valor requerido" }
};
    
    var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
    var typesAccount = ViewData["TypeAccounts"] as IEnumerable<ERPMVC.Models.TypeAccount>;
}


<script>
    function AddAccounting() {



        $('#ModalAccounting').find(':input').not(':submit').val('');

        $('#ModalAccounting').modal('show');
        $("#AccountId").val('0');





    }


    @*   function EditAccount(e) {
             e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
             var dataObject = {
                 AccountId: dataItem.AccountId,
                editar : 0
            };

            $.ajax({
                url: '@Url.Action("pvwAddAccounting", "Accounting")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(dataObject),
                success: function (result) {
                    $("#NumAccounting").html('');
                    $("#NumAccounting").html(result);


                    //$("#btnCAI").hide();
                    $('#ModalAccounting').modal('show');
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(textStatus + ": " + XMLHttpRequest.responseText);
                }
            });
         }
        *@


    var TypeAccountId = 0;
    function TypeAccounting(TypeAccountIdv) {
        kendo.ui.progress($("#divClasificacionCuentas"), true);

        TypeAccountId = TypeAccountIdv;

        var treelist = $("#AccountingTreelist").data("kendoTreeList");
        treelist.dataSource.read();


    }

    function DataTypeAccounting() {
        return { 'TypeAccountId': TypeAccountId }
    }

    function onBound() {
        kendo.ui.progress($("#divClasificacionCuentas"), false);
    }
    function onEdit(arg) {
        var model = arg.model;
        alert("Seleccionaste: " + model.AccountId + "  " + model.TypeAccounting);

        // kendoConsole.log("TreeList edit: " + model.FirstName + " " + model.LastName);
    }

</script>

@(Html.Kendo().TreeList<ERPMVC.DTO.AccountingDTO>()
                            .Name("AccountingTreelist")
                            .Toolbar(toolbar=>
                            { toolbar.Create().Text("Padre");
                                toolbar.Save();
                                toolbar.Cancel();
                            }
                             )
                            //.Toolbar(toolbar => toolbar.)
                            //    .HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "AddAccounting()" })
                            .Columns(columns =>
                            {
                                //columns.Add().Field(f => f.AccountId).Width(0);
                                columns.Add().Field(f => f.AccountName).Width(550);
                                columns.Add().Field(f => f.AccountBalance).Width(200);
                                columns.Add().Field(f => f.AccountCode).Width(200);
                                columns.Add().Field(f => f.BlockedInJournal).Width(200);
                                columns.Add().Field(f => f.IsCash).Width(200);
                                columns.Add().Field(f => f.TypeAccountId).Width(200);//.TemplateId("#=TypeAccount.TypeAccountName#").Sortable(false).Width(200);
                                columns.Add().Field(f => f.ParentAccountId).Width(200);
                                columns.Add().Width(300).Command(c =>
                                {
                                    c.CreateChild().Text(" ");
                                    //   c.Edit().Text(" ");  //.IconClass("fa fa-edit").Click("EditAccount");

                                });

                            })

                            //.Toolbar(toolbar => toolbar.Create())

                            //tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus")



                            .Events(e =>
                            {
                                e.DataBound("onBound");
                            })

                        .Editable(e => e.Mode("inline")/*e => e.Mode(TreeListEditMode.InCell).Move(false)*/)
                        .DataSource(dataSource => dataSource
                        .Batch(true)
                            .Create(create => create.Action("SaveAccounting", "Accounting").Type(HttpVerbs.Post))
                        .Read(read => read.Action("AccountingRes", "Accounting").Data("DataTypeAccounting"))
                        .Update(update => update.Action("Update", "Accounting", new { AccountId = "{0}" }).Type(HttpVerbs.Put))

                        .Model(m =>
                        {
                            m.Id(f => f.AccountId);

                            m.ParentId(f => f.ParentAccountId).Editable(false);
                            m.Field(f => f.AccountId).Editable(false);
                            m.Field(f => f.BlockedInJournal).Editable(true);
                            m.Field(f => f.AccountCode).Editable(true);
                            m.Field(f => f.IsCash).Editable(true);

                            m.Field(f => f.TypeAccountId).Editable(true);
                            //.DefaultValue(
                            //                                          ViewData["defaultTypeAccount"] as ERPMVC.Models.TypeAccount).Editable(true);

                            //.Editable(true);
                            m.Field(f => f.AccountName).Editable(true);
                            m.Field(f => f.AccountBalance).Editable(false);
                            m.Expanded(true);


                        })

                    ).Height(540)
                     .Selectable(true)
                     .Events(events =>
                     {
                         events.Edit("onEdit");
                     })
)


@*@foreach (ERPMVC.Models.TypeAccount Tipo in ViewBag.ListTypeAccount)

    {
        if(Tipo.TypeAccountId == ViewBag.AccountingParameter)
        {
        <div id="@Tipo.TypeAccountId" >
        <h4>@Tipo.TypeAccountName</h4>
        @(
                              Html.Kendo().TreeView()
                              .Name("TreeViewTemplateBiding")
                              .TemplateId("TreeViewTemplate")

                                   .BindTo((List<ERPMVC.Models.NodeViewModel>)ViewBag.Tree, (Kendo.Mvc.UI.Fluent.NavigationBindingFactory<TreeViewItem> mappings) =>
                                   {
                                       mappings.For<ERPMVC.Models.NodeViewModel>(binding => binding.ItemDataBound((item, node) =>
                                           {
                                               item.Id = node.Id.ToString();
                                               item.Text = node.Title;
                                               item.Expanded = node.Expanded;
                                           })
                                     .Children(node => node.Children));
                                   }).Checkboxes(true)
        )
        </div>
        }
    }*@
@*
*@

<script type="text/javascript">


    debugger;
    $('document').ready(function () {


        $("#AccountingTreelist").click(function () {
           // alert('Jquery Tutorial');
            var treelist = $("#AccountingTreelist").data("kendoTreeList");
            var row = treelist.select();
            if (row.length > 0) {
               /// EditAccount(row);
                var data = treelist.dataItem(row);
                alert("Seleccionaste: " + data.AccountId);
               // console.log(data.AccountId);
            };
            
        });
       
        $(".clearSelection").click(function () {
            $("#AccountingTreelist").data("kendoTreeList").clearSelection();
        });
        var selectRow = function (e) {
            if (e.type != "keypress" || kendo.keys.ENTER == e.keyCode) {
                var treelist = $("#AccountingTreelist").data("kendoTreeList"),
                    rowIndex = treelist.select(), //$("#selectRow").val(),
                    row = treelist.content.find("tr:visible").eq(rowIndex);
                alert("Seleccionaste: " + row.AccountId);

               // treelist.select(row);
            }
        };
       // alert("Seleccionaste: " + selectRow.data.dataItem().AccountId;
       //".toggleGroup").click(toggleGroup);
        /* treelist.items().each(function (i, el) {
             $(el).on("dblclick", function (event) {
                 alert($(this).text());
             });*/
    });
</script>