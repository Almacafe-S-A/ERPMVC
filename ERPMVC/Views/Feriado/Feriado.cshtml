@model ERPMVC.Models.Feriado
@using System.Security.Claims
@{
    ViewData["Title"] = "Feriado";
    ClaimsPrincipal permisos = (ClaimsPrincipal)ViewData["permisos"];
}
<div class="row">
    <div class="col-md-3">
        <div class="form-group">
            <label asp-for="Periodo" class="control-label" style="width:100%">Periodo</label>
            <kendo-dropdownlist name="Periodo" filter="Kendo.Mvc.UI.FilterType.Contains"
                                id="Periodo"
                                option-label="Seleccione el periodo"
                                for="Id"
                                on-data-bound="RefreshFeriado"
                                on-change="RefreshFeriado"
                                value="@ERPMVC.Helpers.Utils.Periodo.Id"
                                datatextfield="Anio"
                                datavaluefield="Id"
                                auto-bind="true"
                                style="width: 100%;">
                <datasource type="DataSourceTagHelperType.WebApi">
                    <transport>
                        <read url="@Url.Action("Get", "Periodo")" />
                    </transport>
                </datasource>

            </kendo-dropdownlist>
            <span asp-validation-for="Periodo" class="text-danger"></span>
        </div>
    </div>
</div>

<script type="text/javascript">

    function DeleteFeriado(e) {
        if (confirm('¿Esta seguro que desea eliminar este Feriado?')) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            var dataObject = {
                Id: dataItem.Id,
                editar: 0
            };

            $.ajax({
                url: '@Url.Action("Delete", "Feriado")',
                method: 'POST',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(dataObject),
                success: function (result) {
                    RefreshFeriado()
                    console.log('success', result)

                    $("#numFeriado").html('');
                    $("#numFeriado").html(result);


                    //$("#btnCAI").hide();
                    $('#ModalFeriado').modal('show');
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    //alert(textStatus + ": " + XMLHttpRequest.responseText);
                    MostrarMensaje(textStatus + ": " + XMLHttpRequest.responseText, "Error", "Error", 6000);
                }
            });
        }
    }

    function GetPeriodo(){
        var periodo = $("#Periodo").val();
        return {
            PeriodoId : periodo,
        }
    }

    function RefreshFeriado(){

        var grid = $("#gridFeriado").getKendoGrid();

        var idPeriodo = $("#Periodo").val();
        if(idPeriodo == ""){
            $(".k-grid-add", "#gridFeriado").hide();
        }else{
            $(".k-grid-add", "#gridFeriado").show();
        }
        grid.dataSource.read();
    }

    function AddFeriado() {
        $("#btnFeriado").show();
        $("#btnFeriado").prop("disabled", false);

        $('#ModalFeriado').find(':input').not(':submit').val('');
        $('#ModalFeriado').modal('show');
        $("#Id").val('0');
        $("#IdEstado").data("kendoDropDownList").value(0);
        $("#")
        var validator = $("#frmFeriado").data("kendoValidator");
    }
    function EditFeriado(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var dataObject = {
            Id: dataItem.Id,
            editar: 0
        };

        $.ajax({
            url: '@Url.Action("pvwAddFeriado", "Feriado")',
            method: 'POST',
            datatype: "json",
            contentType: 'application/json',
            async: false,
            data: JSON.stringify(dataObject),
            success: function (result) {
                console.log('success', result)

                $("#numFeriado").html('');
                $("#numFeriado").html(result);


                //$("#btnCAI").hide();
                $('#ModalFeriado').modal('show');
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                //alert(textStatus + ": " + XMLHttpRequest.responseText);
                MostrarMensaje(textStatus + ": " + XMLHttpRequest.responseText, "Error", "Error", 6000);
            }
        });
    }

    $('.decimales').on('input', function decimals(e) {
        this.value = this.value.replace(/[^0-9,.]/g, '').replace(/,/g, '.');
    });
</script>

		
@(
Html.Kendo().Grid<ERPMVC.Models.Feriado>
            ()
            .Name("gridFeriado")
            .Columns(columns =>
            {
                if (User.HasClaim("RRHH.Parametros.Feriados.Editar", "true"))
                {
                    columns.Command(command =>
                    {
                        command.Custom("Editar").Text(" ").IconClass("fa fa-edit").Click("EditFeriado");
                        command.Custom("Eliminar").Text(" ").Click("DeleteFeriado").IconClass("fa fa-trash-alt");

                    }).Width(120).Title("Acciones");
                }
                columns.Bound(p => p.Id).Width(100).Visible(false);

                columns.Bound(p => p.Nombre).Title("Feriado").Width(200);
                columns.Bound(d => d.FechaInicio).Title("Fecha Inicio").Width(200).Format("{0:dd/MM/yyyy HH:mm}");
                columns.Bound(d => d.FechaFin).Title("Fecha Fin").Width(200).Format("{0:dd/MM/yyyy HH:mm}");
                columns.Bound(p => p.IdEstado).Title("Estado").Width(200)
                .ClientTemplate("#=IdEstado == 1 ? 'Activo':'Inactivo'#");
            })
            .Filterable(f => f.Operators(o => o.ForString(s => s
            .Clear()
            .Contains("Contiene")
            .DoesNotContain("No contiene")
            .EndsWith("Termina con")
            .IsEqualTo("Es igual a")
            .IsNotEqualTo("No es igual a")
            .IsNull("Es nulo")
            .StartsWith("Inicia con")
            )
            .ForNumber(n => n
            .Clear()
            .IsEqualTo("Es igual a")
            .IsGreaterThan("Es mayor que")
            .IsLessThan("Es menor que")
            .IsNull("Es nulo")
            .IsLessThanOrEqualTo("Es menor o igual que")
            .IsGreaterThanOrEqualTo("Es mayor o igual que")
            )
            .ForDate(d => d
            .Clear()
            .IsEqualTo("Es igual que")
            .IsGreaterThan("Es mayor que")
            .IsLessThan("Es menor que")
            .IsLessThanOrEqualTo("Es menor o igual que")
            .IsGreaterThanOrEqualTo("Es mayor o igual que")
            .IsNotEqualTo("No es igual que")
            )).Extra(false))
            .ToolBar(tools =>
            {
                if (User.HasClaim("RRHH.Parametros.Feriados.Editar", "true"))
                {
                    tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus").HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "AddFeriado()" });
                    tools.Custom().Text("Exportar a PDF").IconClass("k-icon k-i-pdf").HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "exportToPDF()" });
                }
                tools.Excel().Text("Exportar a excel").HtmlAttributes(new { @class = "toolbar-field" }).Text("Exportar a excel");
               // tools.Pdf().Text("Exportar a pdf").HtmlAttributes(new { @class = "toolbar-field" }).Text("Exportar a pdf");


            })

            .Editable(e => e.Mode(GridEditMode.PopUp))
            .Events(e => e.Save("Guardar"))
            .Sortable()
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true))
            .Scrollable()
            .Pdf(pdf => pdf
            .FileName("UsuariosReport" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
            + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
            .ProxyURL(Url.Action("Export", "Home"))
            .AllPages()
            .AvoidLinks()
            .PaperSize("A4")
            .Scale(0.8)
            .Margin("2cm", "1cm", "1cm", "1cm")
            .Landscape()
            .TemplateId("page-template")
            .RepeatHeaders())
            .Excel(excel => excel.FileName("UsuariosReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
            + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
            .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
            .DataSource(dataSource =>
            dataSource
            .WebApi()
            .ServerOperation(true)
.Model(model =>
{
    model.Id(p => p.Id);
    model.Field(p => p.Id).Editable(false);
    model.Field(p => p.Nombre).Editable(true);
    model.Field(p => p.FechaInicio).Editable(true);
    model.Field(p => p.FechaFin).Editable(true);
    model.Field(p => p.IdEstado).Editable(true);
})

            .Events(events =>
            {
                events.Error("error_handler");
                events.RequestEnd("checkResult");
            })
            .Read(read => read.Action("GetFeriadosByPeriodo", "Feriado").Data("GetPeriodo"))
            .Create(create => create.Action("SaveFeriado", "Feriado"))
            .Update(update => update.Action("Update", "Feriado", new { id = "{0}" }).Type(HttpVerbs.Post))
            .Destroy(update => update.Action("Delete", "Feriado", new { id = "{0}" }).Type(HttpVerbs.Post))
            ).Resizable(resize => resize.Columns(true))
            )

<script>
    function exportToPDF() {
        debugger;
        var grid = $("#gridFeriado").data("kendoGrid");
        // Ocultar las columnas que no se desean exportar
        grid.hideColumn(0);
        // Exportar a PDF
        grid.saveAsPDF();
        // Restaurar la visibilidad de la columna después de un pequeño retraso para asegurarse de que se haya generado el PDF
        setTimeout(function () {
            grid.showColumn(0)
        }, 800);
    }

    function checkResult(e) {
        if ((e.type == "create" && e.response.Errors == null)) {
            $.toast({
                heading: 'Éxito',
                text: '¡Datos guardados correctamente!',
                position: 'top-right',
                loaderBg: '#00ff00',
                icon: 'success',
                hideAfter: 30000,
                stack: 6
            });
            RefreshFeriado();
        }
        else if ((e.type == "update" && e.response.Errors == null)){
            $.toast({
                heading: 'Éxito',
                text: '¡Datos actualizados correctamente!',
                position: 'top-right',
                loaderBg: '#00ff00',
                icon: 'success',
                hideAfter: 30000,
                stack: 6
            });
            RefreshFeriado();
        }
        else if ((e.type == "destroy" && e.response.Errors == null)) {
            $.toast({
                heading: 'Éxito',
                text: '¡Datos eliminados correctamente!',
                position: 'top-right',
                loaderBg: '#00ff00',
                icon: 'success',
                hideAfter: 30000,
                stack: 6
            });
            RefreshFeriado();
        }
    }

    function error_handler(e) {
        $.toast({
            heading: 'Error',
            text: e.xhr.responseText,
            position: 'top-right',
            loaderBg: '#ff6849',
            icon: 'error',
            hideAfter: 30000,
            stack: 6

        });
    }



    function setToolbarTooltip(btn_cl, btn_tooltip) {
        $("#gridFeriado").kendoTooltip({
            filter: btn_cl,
            content: btn_tooltip
        });
    }

    function setRowButtonTooltip(btn_cl, btn_tooltip) {
        $("#gridFeriado").kendoTooltip({
            filter: btn_cl,
            content: btn_tooltip
        });
    }
  
    function Guardar(e) {
        debugger;
        var pres = e.model;
        var idPeriodo = $("#Periodo").val();
        pres.set("PeriodoId", idPeriodo);
    }

    function CancelEdit(e) {
        var pres = e.model;
        var idPeriodo = $("#Periodo").val();
        pres.set("PeriodoId", idPeriodo);
    }

    setToolbarTooltip(".k-grid-toolbar a.k-grid-add", "Agregar Feriado");
    setRowButtonTooltip(".k-grid-edit", "Editar Feriado");
    setRowButtonTooltip(".k-grid-delete", "Eliminar Feriado");
    setRowButtonTooltip(".k-grid-update", "Guardar");
    setRowButtonTooltip(".k-grid-cancel", "Cancelar");
	
</script>
<div id="numFeriado">
    @{
        var feriadoDto = new ERPMVC.DTO.FeriadoDTO { Id = 0 };
    }

    @await Html.PartialAsync("pvwAddFeriado", feriadoDto)
</div>
<style>
    .k-checkbox + .k-checkbox-label {
        border-color: #ff6358;
        color: #fff;
        background-color: #fff;
        margin-left: 50px;
    }
</style>
