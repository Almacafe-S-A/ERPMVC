@model ERPMVC.DTO.ConciliacionLineaDTO

@{ Layout = null;
    //var messages = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." },
    // {"required","Valor requerido" }
 //   var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
//}

};

<script>

    function customFunction(input) {

        if (input.attr('name') === "BranchId" && input.val() === "0") {
            return false;
        }

    }

    //$('#btnprueba').val("");
</script>



<div id="ModalConciliacionLinea" class="modal fade" role="dialog">
    <!-- Modal content-->
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" name="btnprueba" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Linea de Conciliacion</h4>
            </div>
            <div class="modal-body">
                <div class="row" id="validation">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-body">
                                <form id="frmConciliacionLinea" kendo-validator="true"
                                      data-ajax="true"
                                      data-ajax-method="post"
                                      data-ajax-begin="SaveConciliacionLinea"
                                      class="validation-wizard wizard-circle">
                                    <div class="form-body">
                                        <h3 class="card-title">Conciliacion Linea</h3>
                                        <hr>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label asp-for="ConciliacionLineaId" class=" control-label" style="width:100%"></label>
                                                    <input type="text" asp-for="ConciliacionLineaId" name="ConciliacionLineaId" class="form-control" disabled="disabled" style="min-width:100%" />
                                                    <span asp-validation-for="ConciliacionLineaId" class="text-danger"></span>
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label asp-for="JournalEntryId" class=" control-label" style="width:100%"></label>
                                                    <input type="text" asp-for="JournalEntryId" name="JournalEntryId" disabled="disabled" class="form-control" autocomplete="off" style="min-width:100%" onkeypress="return SoloLetras(event)" />
                                                    <span asp-validation-for="JournalEntryId" class="text-danger"></span>
                                                </div>
                                            </div>


                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label asp-for="JournalEntryLineId" class=" control-label" style="width:100%"></label>
                                                    <input type="text" asp-for="JournalEntryLineId" name="JournalEntryLineId"  disabled="disabled" class="form-control" autocomplete="off" style="min-width:100%" onkeypress="return SoloLetras(event)" />
                                                    <span asp-validation-for="JournalEntryLineId" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label asp-for="VoucherTypeId" class=" control-label" style="width:100%"></label>
                                                    <input type="text" asp-for="VoucherTypeId" name="VoucherTypeId" class="form-control" disabled="disabled" autocomplete="off" style="min-width:100%" onkeypress="return SoloNumeros(event)" />
                                                    <span asp-validation-for="VoucherTypeId" class="text-danger"></span>
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label asp-for="CheknumberId" class="control-label"></label>
                                                    <input type="text" asp-for="CheknumberId" name="CheknumberId" class="form-control" disabled="disabled" autocomplete="off" style="min-width:100%" onkeypress="return SoloNumeros(event)" />

                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label asp-for="Reconciled" class=" control-label" style="width:100%"></label>

                                                    @(Html.Kendo().SwitchFor(m => m.Reconciled)
                                                    )

                                                </div>

                                            </div>


                                        </div>
                                        <div class="row">

                                            @(Html.Kendo().Grid<ERPMVC.Models.JournalEntryLine>
                                                    ()
                                                    .Name("gridJournalEntryLineCB")
                                                    .Columns(columns =>
                                                    {
                                                        columns.Command(command =>
                                            {
                                                     //   command.Custom("Editar").Text(" ").IconClass("fa fa-edit").Click("EditConciliacion");
                                            // command.Custom("Descargar").Text(" ").IconClass("fa fa-download").Click("Descargar");
                                            // command.Custom("Imprimir").Text(" ").IconClass("fa fa-print").Click("ImprimirDocumento");
                                            //command.Custom("Ver Detalles").Text(" ").IconClass("far fa-list-alt").Click("DetallesConciliacion");
                                            // command.Edit(); command.Destroy();
                                        }).Width(170);
                                                        columns.Bound(p => p.JournalEntryLineId).Width(100).Visible(false);

                                                        columns.Bound(p => p.JournalEntryLineId).Format("{0:dd/MM/yyyy}").Width(100);
                                                        columns.Bound(p => p.Debit).Width(200);
                                                        columns.Bound(p => p.Credit).Width(200);
                                                        //columns.Bound(p => p.DateBeginReconciled).Format("{0:dd/MM/yyyy}").Width(200);
                                                        //columns.Bound(p => p.DateEndReconciled).Format("{0:dd/MM/yyyy}").Width(200);
                                                    })
                                                    .Filterable(f => f.Operators(o => o.ForString(s => s
                                                    .Clear()
                                                    .Contains("Contiene")
                                                    .DoesNotContain("No contiene")
                                                    .EndsWith("Termina con")
                                                    .IsEqualTo("Es igual a")
                                                    .IsNotEqualTo("No es igual a")
                                                    .IsNull("Es nulo")
                                                    .StartsWith("Inicia con")


                                                    )
                                                    .ForNumber(n => n
                                                    .Clear()
                                                    .IsEqualTo("Es igual a")
                                                    .IsGreaterThan("Es mayor que")
                                                    .IsLessThan("Es menor que")
                                                    .IsNull("Es nulo")
                                                    .IsLessThanOrEqualTo("Es menor o igual que")
                                                    .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                    )
                                                    .ForDate(d => d
                                                    .Clear()
                                                    .IsEqualTo("Es igual que")
                                                    .IsGreaterThan("Es mayor que")
                                                    .IsLessThan("Es menor que")
                                                    .IsLessThanOrEqualTo("Es menor o igual que")
                                                    .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                    .IsNotEqualTo("No es igual que")
                                                    )
                                                    ))
                                                    .ToolBar(tools =>
                                                    {
                                            //tools.Create();
                                           // tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus")
                                            //.HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "AddConciliacion();" });

                                                        tools.Excel().Text("Exportar a excel").HtmlAttributes(new { @class = "toolbar-field" });
                                                        tools.Pdf().Text("Exportar a pdf").HtmlAttributes(new { @class = "toolbar-field" });


                                                    })
                                                    .Editable(e => e.Mode(GridEditMode.PopUp).ConfirmDelete("¿Esta seguro que desea eliminar este registro?"))
                                                    .Sortable()
                                                    .Pageable()
                                                    .Filterable()
                                                    .Scrollable()
                                                    .Pdf(pdf => pdf.FileName("JournalEntryLineReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                                    + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
                                                    .ProxyURL(Url.Action("Export", "Home")).AllPages())
                                                    .Excel(excel => excel.FileName("JournalEntryLineReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                                    + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
                                                    .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
                                                    .DataSource(dataSource =>
                                                    dataSource
                                                    .WebApi()
                                                    .ServerOperation(true)
                                                    .Model(model =>
                                                    {
                                                        model.Id(p => p.JournalEntryId);
                                                        model.Field(p => p.JournalEntryLineId).Editable(false);
                                                    })
                                                    .Events(events => events.Error("error_handler"))
                                                    //.Read(read => read.Action("GetConciliacionLineaByJournalEntryLine", "ConciliacionLinea"))
                                                    // .Create(create => create.Action("Insert", "Conciliacion"))
                                                    // .Update(update => update.Action("Update", "Conciliacion", new { id = "{0}" }))
                                                    //.Destroy(destroy => destroy.Action("Delete", "Conciliacion", new { id = "{0}" }))
                                                    )
                                                    .Events(e =>
                                                    {
                                            //e.Save("onsave");
                                        })
                                            )


                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <button id="btnConciliacionLinea" class="form-control btn-miboton" type="submit"> Guardar </button>
                                            </div>
                                        </div>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>


    //Validaciones
    function SoloLetras(e) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = " áéíóúabcdefghijklmnñopqrstuvwxyz";
        especiales = "8-37-39-46";

        tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }

        if (letras.indexOf(tecla) == -1 && !tecla_especial) {
            return false;
        }
    }


    function SoloNumeros(e) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = "1234567890";
        especiales = "8-37-39-46";

        tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }

        if (letras.indexOf(tecla) == -1 && !tecla_especial) {
            return false;
        }
    }
    function SaveConciliacionLinea(e) {

            var notification = $("#notification").data("kendoNotification");
           // e.preventDefault();
        $("#btnConciliacionLinea").hide();
        $("#btnConciliacionLinea").prop("disabled", true);

           // var displayedData = $("#gridCountry").data().kendoGrid.dataSource.view();

            var dataObject = {
                'ConciliacionLineaId': $("#ConciliacionLineaId").val() === "" ? "0" : $("#ConciliacionLineaId").val(),
                'SortName': $("#SortName").val(),
                'Name': $("#Name").val(),
                'PhoneCode': $("#PhoneCode").val(),
                'IdEstado': $("#IdEstado").val(),
                'Estado': $("#IdEstado").data("kendoDropDownList").text(),
                // '_Country': displayedData
            };

           // console.log(JSON.stringify(dataObject));
            //var form = $("#frmNumeracion");
            // form.validate();

        var validator = $("#frmConciliacionLinea").data("kendoValidator");
                 var status = $(".status");

                if (validator.validate()) {

                    $.ajax({
                        url: '@Url.Action("SaveConciliacionLinea", "ConciliacionLinea")',
                        method: 'POST',
                        datatype: "json",
                        contentType: 'application/json',
                        async: false,
                        data: JSON.stringify(dataObject),
                        success: function (data) {

                            //notification.show({
                            //    message: "Guardado correctamente!"
                            //}, "upload-success");
                            $.toast({
                                heading: 'Satisfactorio',
                                text: 'Datos guardados correctamente.',
                                position: 'top-right',
                                loaderBg: '#ff6849',
                                icon: 'success',
                                hideAfter: 30000,
                                stack: 6
                            });

                            RefrescarGrid();

                            $('#ModalConciliacionLinea').modal('hide');





                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {

                            notification.show({
                                title: "Validación",
                                message: textStatus + ": " + XMLHttpRequest.responseText
                            }, "error");

                        }
                    });

                }
                else {
                    status.text("Oops! There is invalid data in the form.")
                        .removeClass("valid")
                        .addClass("invalid");
                }


        $("#btnConciliacionLinea").show();
        $("#btnConciliacionLinea").prop("disabled", false);
    }
</script>
