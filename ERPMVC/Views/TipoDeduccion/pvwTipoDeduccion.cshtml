@model ERPMVC.Models.Deduccion
@{
    var editable = (int)ViewData["Editar"] != 1;
    var permisoEditar = User.HasClaim("RRHH.Tipo de Deduccion.Editar", "true");
    var currentNoValue = 1;
}

<script>
    function GetDeductionId(){
        debugger;
        var deduccionId = $("#DeductionId").val();
        var dataObject = {
            DeductionId: deduccionId,
        }
        return dataObject
    }
    </script>
    <style>
    .hidden {
        display: none;
    }
    </style>
<div id="ModalTipoDeduccionUpload" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">

        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Tipo de Deducción</h4>
                <button type="button" class="close" onclick="CerrarTipoDeduccion();">&times;</button>
            </div>
            <form id="frmTipoDeduccion" asp-action="GuardarDeduccion" asp-controller="TipoDeduccion" kendo-validator="true" method="post" onsubmit="Guardar(event)">
                <div class="modal-body" kendo-validator="true" name="mdlCuerpo">
                    <div class="row">
                        <div class="col-md-3">
                            <label asp-for="DeductionId"></label><br />
                            <input style="min-width:100%" class="k-textbox" asp-for="DeductionId" readonly="readonly" />
                        </div>
                        <div class="col-md-4">
                            <label asp-for="Description"></label><br />
                            <input style="min-width:100%" class="k-textbox" asp-for="Description" required data-required-msg="La descripción es requerida."
                                   readonly="@editable" />
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-4">
                            <label for="Fortnight">Deducir en Quincena</label><br />
                            <select id="Fortnight" name="Fortnight" disabled="@editable" asp-for="Fortnight">
                                <option value="1" selected>1era</option>
                                <option value="2">2da</option>
                                <option value="3">Ambas</option>
                                <option value="4">Mas de Una</option>
                            </select>
                        </div>

                        <div class="col-md-4">
                            <label for="DeductionTypeId">Tipo </label><br />
                            <select id="DeductionTypeId" name="DeductionTypeId" disabled="@editable" asp-for="DeductionTypeId">
                                <option value="1" selected>Por Ley</option>
                                <option value="2">Eventual</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label asp-for="IdEstado" class="control-label">Estado</label>
                                <kendo-dropdownlist name="IdEstado"
                                                    for="@Model.IdEstado"
                                                    filter="Kendo.Mvc.UI.FilterType.Contains"
                                                    option-label="Seleccionar Estado"
                                                    datatextfield="NombreEstado"
                                                    required data-required-msg="El estado es requerido."
                                                    datavaluefield="IdEstado"
                                                    style="width: 100%;">
                                    <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                        <transport>
                                            <read url="@Url.Action("GetGrupoEstadoUno", "Estados")" />
                                        </transport>
                                    </datasource>
                                </kendo-dropdownlist>
                                <span asp-validation-for="IdEstado" class="text-danger"></span>
                            </div>

                        </div>
                    </div>
                    @if (!editable)
                    {
                        <br />
                        <div class="row">
                            <hr />
                            <button class="form-control btn-miboton" type="submit">Guardar</button>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-md-12" id="gridDeduct">
                        @(Html.Kendo().Grid<ERPMVC.Models.DeductionQty>()
                            
                            .Name("gridDeductionQty")

                            .Columns(columns =>
                            {
                                if (permisoEditar)
                                {
                                    
                                }
                                columns.Command(command =>
                                    {
                                        //command.Custom("Ver detalles").Click("Detalles");
                                        command.Edit().Text(" ").IconClass("fa fa-edit");
                                    command.Destroy().Text(" ").IconClass("fa fa-trash");
                                    }).Width(100).Title("Acciones");

                                columns.Bound(p => p.Id).Width(150).Visible(false);
                                columns.Bound(p => p.No).Width(200).Title("No");
                                columns.Bound(p => p.Fortnight).Width(200).Title("Quincena");
                                columns.Bound(p => p.Porcentaje).Width(190);

                            })



                            .ToolBar(tools =>
                            {
                                tools.Create().Text("Agregar").IconClass("k-icon k-i-plus");

                            })
                            .Editable(e => e.Mode(GridEditMode.InCell))
                            .Sortable()
                            .Pageable()
                            .Filterable()
                            .Scrollable()
                            .DataSource(dataSource =>
                            dataSource
                            .WebApi()

                            .ServerOperation(false)
                            .Model(model =>
                            {
                                model.Id(p => p.Id);
                                model.Field(p => p.Fortnight).Editable(true);
                                model.Field(p => p.No).Editable(false);
                                model.Field(p => p.Porcentaje).Editable(true);

                            })
                            .Events(events => events.Error("error_handler"))
                            .Read(read => read.Action("GetDeductionQtiesById", "TipoDeduccion").Data("GetDeductionId"))
                            )
                            )
                    </div>
                </div>    
                
            </form>
               
        </div>

    </div>
</div>
<span id="notificacion"></span>
<script>
        var grid = $("#gridDeductionQty").data("kendoGrid");
        grid.bind("dataBound", function (e) {
            var dataItems = grid.dataSource.view();

            for (var i = 0; i < dataItems.length; i++) {
                dataItems[i].No = i + 1;
            }
            grid.refresh();
        });
    $(document).ready(function () {
        var fortnightInput = $("#Fortnight");
        var displayedData = $("#gridDeduct");
        fortnightInput.on("change", function () {
            if (fortnightInput.val() === "4") {
                displayedData.show();
            } else {
                displayedData.hide();
            }
        });

        function checkFortnightValue() {
            if (fortnightInput.val() === "4") {
                displayedData.show();
            } else {
                displayedData.hide();
            }
        }
        checkFortnightValue();
    });

    function RefrescarGrid() {
        var grid = $("#grdTipos").getKendoGrid();
        grid.dataSource.read();
    }
        

    function CerrarTipoDeduccion() {
        window.RefreshTipoDeduccion();
        $("#ModalTipoDeduccionUpload").modal('hide');
    }

    function Guardar(e) {
        e.preventDefault();
        debugger;

        var displayedData = $("#gridDeductionQty").data().kendoGrid.dataSource.view();
        var deduccion = {
            DeductionId: Number($("#DeductionId").val()),
            Description: $("#Description").val(),
            DeductionTypeId: Number($("#DeductionTypeId").val()),
            DeductionType: $("#DeductionTypeId option:selected").text(), // Obtener el nombre del valor seleccionado
            Fortnight: Number($("#Fortnight").val()),
            IdEstado: $("#IdEstado").val(),
            DeductionQties: displayedData,
            //Estado: $("#IdEstado").data("kendoDropDownList").value()
        };
        var validator = $("#frmTipoDeduccion").data("kendoValidator");
        var notificacion = $("#notificacion").kendoNotification().data("kendoNotification");

        if (validator.validate()) {
            $.ajax({
                url: '@Url.Action("GuardarDeduccion", "TipoDeduccion")',
                method: 'POST',
                dataType: "json", // Corregido dataType
                contentType: 'application/json',
                async: false,
                data: JSON.stringify(deduccion),
                success: function (data) {
                    $.toast({
                        heading: 'Satisfactorio',
                        text: 'Datos guardados correctamente.',
                        position: 'top-right',
                        loaderBg: '#ff6849',
                        icon: 'success',
                        hideAfter: 3000,
                        stack: 6
                    });

                    RefrescarGrid();
                    CerrarTipoDeduccion();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    debugger;
                    window.RefreshTipoDeduccion();
                    $.toast({
                        heading: 'Error',
                        text: 'El nombre está duplicado. Introduce un nombre diferente.',
                        position: 'top-right',
                        loaderBg: '#ff6849',
                        icon: 'error',
                        hideAfter: 3000,
                        stack: 6
                    });
                }
            });
        }
        return false;
    }
</script>