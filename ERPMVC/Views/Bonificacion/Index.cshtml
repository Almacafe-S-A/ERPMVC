@{
    ViewData["Title"] = "Bonificación";
    var today = DateTime.Today;
    var periodo = (int) (TempData.ContainsKey("Periodo")? TempData["Periodo"] : today.Year);
    var mes = (int) (TempData.ContainsKey("Mes") ? TempData["Mes"] : today.Month);
    var inactivo = (bool)(TempData.ContainsKey("Inactivo")? TempData["Inactivo"] : false);
    var meses = new[] {"Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"};
}
<h3 class="text-themecolor">Bonificaciones</h3>
<div class="container-fluid">
    <div class="row">
        <div class="col">
            <h4>Filtro de Bonificaciones</h4>
        </div>
    </div>
    <form id="frmFiltroBono" kendo-validator="true" method="post" action="@Url.Action("PostFiltro", "Bonificacion")">
        <div class="row">
            <div class="col-md-3 col-sm-12">
                <label for="Periodo">Año:</label>
                <input id="Periodo" name="Periodo" value="@periodo" />
            </div>
            <div class="col-md-3 col-sm-12">
                <label for="Mes">Mes:</label>
                <input id="Mes" name="Mes" value="@mes" />
            </div>
            <div class="col-md-3 col-sm-12">
                <label for="Inactivo">Inactivos:</label>
                <input id="Inactivo" name="Inactivo"/>
            </div>
            <div class="col-md-3 col-sm-12">
                <input type="submit" value="Filtrar" />
            </div>
        </div>
    </form>
    
    <div class="row">
        <div class="col">
            <h4>Bonificaciones de @meses[mes - 1] de @periodo </h4>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="row">
                <div id="grdConfiguracion"></div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        CrearGrid();

        $("#Inactivo").kendoSwitch({
            checked: @inactivo.ToString().ToLower(),
            messages: {
                checked: "si",
                unchecked: "no"
            }
        });

        $("#Periodo").kendoNumericTextBox({ spinners: false, decimals:0, restrictDecimals:true, format:"0000" });
        $("#Mes").kendoNumericTextBox({ spinners: false, decimals: 0, restrictDecimals: true, format:"00", min:1, max:12 });
    });

    function Validar(e) {
        debugger;
        if (e.model.Monto <= 0) {
            $.toast({
                heading: 'Error',
                text: '<br/><br/> Error: El monto debe ser mayor a 0',
                position: 'top-right',
                loaderBg: '#ff6849',
                icon: 'error',
                hideAfter: 2000,
                stack: 6
            });
            e.preventDefault();
            return false;
        }
        if (e.model.FechaBono.getMonth()+1 !== @mes || e.model.FechaBono.getFullYear() !== @periodo) {
            $.toast({
                heading: 'Error',
                text: '<br/><br/> Error: La fecha de la bonificación no es valida',
                position: 'top-right',
                loaderBg: '#ff6849',
                icon: 'error',
                hideAfter: 2000,
                stack: 6
            });
            e.preventDefault();
            return false;
        }

        //if (e.model.Nombre === '') {
        //    $.toast({
        //        heading: 'Error',
        //        text: '<br/><br/> Error: Nombre no puede estar en blanco',
        //        position: 'top-right',
        //        loaderBg: '#ff6849',
        //        icon: 'error',
        //        hideAfter: 2000,
        //        stack: 6
        //    });
        //    e.preventDefault();
        //}
    }

    function CrearGrid() {
        $("#grdConfiguracion").kendoGrid({
            dataSource: {
                transport: {
                    read: {
                        url: "@Url.Action("GetBonificacionesMesPeriodo", "Bonificacion")",
                        data: {
                            Periodo: @periodo,
                            Mes:@mes,
                            inactivos: @inactivo.ToString().ToLower()
                        }
                    },
                    update: { url: "@Url.Action("Guardar", "Bonificacion")", type:"POST"},
                    create: { url: "@Url.Action("Guardar", "Bonificacion")", type:"POST"},
                    parameterMap: function (datos, tipo) {
                        if (tipo !== 'read') {
                            //debugger;
                            datos.EstadoId = datos.Estado.IdEstado;
                            datos.EmpleadoId = datos.Empleado.IdEmpleado;
                            datos.TipoId = datos.Tipo.Id;
                            datos.FechaBono = kendo.toString(kendo.parseDate(datos.FechaBono, "dd/MM/yyyy"), "yyyy-MM-dd");
                            //debugger;
                        }
                        return datos;
                    }
                },
                schema: {
                    model: {
                        id:"Id",
                        fields: {
                            Id: { type: "number", editable: true },
                            EmpleadoId: { type: "number", editable: true },
                            Empleado: { defaultValue: { IdEmpleado: 0, NombreEmpleado: "" }, editable: true },
                            TipoId: { type: "number", editable: true },
                            Tipo: { defaultValue: {Id:0, Nombre:""}, editable:true},
                            Monto: { type: "number", editable: true },
                            FechaBono: { type: "date", editable: true, format: "{0:dd/MM/yyyy}" },
                            EstadoId: { type: "number", editable: true },
                            Estado: { defaultValue: {IdEstado:90,NombreEstado:"Activo"}, editable: true }
                        }
                    }
                },
                requestEnd: function (e) {
                    debugger;
                    if (e.type !== "read") {
                        $("#grdConfiguracion").data("kendoGrid").dataSource.read();
                    }
                },
                error: errorGrid
            },
            toolbar: [
                { name: "create", text: "Nueva Bonificación" }
            ],
            columns: [
                {
                    command: [
                        { name: "edit", text: { edit: "", update: "", cancel: "" }}
                    ],
                    width:60
                },
                { field: "Id", title: "Id. ", width: 80, hidden: true },
                { field: "Empleado", title: "Empleado", width: 200, editor: editorEmpleado, template: "#= Empleado.NombreEmpleado #" },
                { field: "Tipo", title: "Tipo Bonificación", width: 200, editor: editorTipo, template: "#= Tipo.Nombre #" },
                { field: "FechaBono", title: "Fecha", width: 100, template: '#= kendo.toString(FechaBono,"dd/MM/yyyy")#' },
                { field: "Monto", title: "Monto", width: 100, editor: editorNumerico, format: "{0:#,##0.00}" },
                { field: "Estado", title: "Estado", width: 100, editor: editorEstado, template: "#= Estado.NombreEstado #"}
            ],
            noRecords: {
                template:"No hay Tipos de Bonificaciones"
            },
            //height: 400,
            scrollable: true,
            editable: "inline",
            save:Validar
        });

        function editorEstado(contenedor, opciones) {
            $('<input data-bind="value:' + opciones.field + '"/>')
                .appendTo(contenedor)
                .kendoDropDownList({
                    index:0,
                    autoBind: true,
                    dataTextField: "NombreEstado",
                    dataValueField: "IdEstado",
                    dataSource: {
                        transport: {
                            read: {
                                type:"GET",
                                url: '@Url.Action("GetEstadoByGrupo2", "Estados")',
                                dataType: "json",
                                data: {
                                    GrupoEstadoId:30
                                }
                            }
                        },
                        schema: {
                            model: {
                                fields: {
                                    IdEstado: { type: "number" },
                                    NombreEstado: {type:"string"}
                                }
                            }
                        }
                    }
                });
        }
    }

    function editorEmpleado(contenedor, opciones) {
        $('<input name="' + opciones.field + '" />')
            .appendTo(contenedor)
            .kendoDropDownList({
                index:0,
                autoBind: true,
                dataTextField: "NombreEmpleado",
                dataValueField: "IdEmpleado",
                dataSource: {
                    transport: {
                        read: {
                            type:"GET",
                            url: '@Url.Action("GetEmployeesV2", "Employees")',
                            dataType: "json"
                        }
                    },
                    schema: {
                        model: {
                            fields: {
                                IdEmpleado: { type: "number" },
                                NombreEmpleado: {type:"string"}
                            }
                        }
                    }
                },
                filter:"contains"
            });
    }

    function editorTipo(contenedor, opciones) {
        $('<input name="' + opciones.field + '" />')
            .appendTo(contenedor)
            .kendoDropDownList({
                index:0,
                autoBind: true,
                dataTextField: "Nombre",
                dataValueField: "Id",
                dataSource: {
                    transport: {
                        read: {
                            type:"GET",
                            url: '@Url.Action("GetTiposBonificaciones", "TipoBonificacion")',
                            dataType: "json"
                        }
                    },
                    schema: {
                        model: {
                            fields: {
                                Id: { type: "number" },
                                Nombre: {type:"string"}
                            }
                        }
                    }
                },
                filter:"contains"
            });
    }

    function editorNumerico(contenedor, opciones) {
        $('<input data-bind="value:' + opciones.field + '"/>')
            .appendTo(contenedor)
            .kendoNumericTextBox({ spinners: false });
    }

    function errorGrid(e) {
        debugger;
        $.toast({
            heading: 'Error',
            text: '<br/><br/> Error:' + e.status + " " + e.errorThrown + " " + e.xhr.responseText,
            position: 'top-right',
            loaderBg: '#ff6849',
            icon: 'error',
            hideAfter: 2000,
            stack: 6
        });
    }
</script>
