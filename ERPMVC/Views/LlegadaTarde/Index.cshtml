@using Kendo.Mvc.UI
@using System.Security.Claims
@{
    ViewData["Title"] = "Llegadas Tarde";
    DateTime fecha = DateTime.Today;
    bool todo = false;
    if (TempData.ContainsKey("Fecha"))
    {
        fecha = (DateTime)TempData["Fecha"];
    }
    else if (ViewData.ContainsKey("Fecha"))
    {
        fecha = (DateTime)ViewData["Fecha"];
    }
    if (TempData.ContainsKey("Todos"))
    {
        todo = (bool)TempData["Todos"];
    }
    else if (ViewData.ContainsKey("Todos"))
    {
        todo = (bool)TempData["Todos"];
    }
    ClaimsPrincipal permisos = (ClaimsPrincipal)ViewData["permisos"];
}
<h3 class="text-themecolor">Revisión y Aprobación de Llegadas Tarde</h3>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-2">
            <div class="row">
                <form id="frmBiometrico" kendo-validator="true" method="post" action="@Url.Action("PostFecha","LlegadaTarde")">
                    <div class="form-group">
                        <label for="Fecha">Fecha:</label>
                        <div class="input-group">
                            <!-- Agregar una clase input-group -->
                            <input id="Fecha" name="Fecha" value=@fecha.ToString("dd/MM/yyyy") class="form-control" />
                            <div class="input-group-append" style="margin-left: 10px;">
                                <button type="submit" class="btn btn-primary">Cargar</button> <!-- Botón a la derecha de la fecha -->
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
            <div class="row">
                <h4>Llegadas Tarde de @fecha.ToString("dd/MM/yyyy")</h4>
                <div id="grdConfiguracion"></div>
            </div>
    </div>
</div>

<script>


    function CrearGrid() {
        $("#grdConfiguracion").kendoGrid({
            dataSource: {
                transport: {
                    read: {
                        url: "@Url.Action("GetLlegadasTardeDisponibles", "LlegadaTarde")",
                        data: {
                            fecha: '@fecha.ToString("yyyy-MM-dd")',
                            todos: true
                        }
                    }
                },
                schema: {
                    model: {
                        id:"Id",
                        fields: {
                            Id: { type: "number", editable: false },
                            IdEmpleado: { defaultValue: {IdEmpleado: 0}, editable: false },
                            Empleado: { defaultValue: {IdEmpleado:0,NombreEmpleado:''}, editable: false },
                            HoraLlegada: { type: "string", editable: false, defaultValue: ""},
                            Horas: { type: "number", editable: false },
                            Minutos: { type: "number", editable: false },
                            Estado: { defaultValue: {IdEstado:0,NombreEstado:""}, editable: false }
                        }
                    }
                }
            },
            columns: [
                {
                    command: [
                        PermisoAprobar(),
                        PermisoRechazar()
                    ],
                    width:60
                },
                { field: "Id", title: "Id. ", width: 80, hidden: true },
                { field: "IdEmpleado", title: "ID Empleado", width: 80, template: '#= Empleado.IdEmpleado #', attributes: { style: "text-align: center;" } },
                { field: "Empleado", title: "Empleado", width: 300, template: '#= Empleado.NombreEmpleado #' },
                { field: "HoraLlegada", title: "Hora Llegada", width: 100 },
                { field: "Horas", title: "Horas", width: 50},
                { field: "Minutos", title: "Minutos", width: 50},
                { field: "Estado", title: "Estado", width: 100, template: "#= Estado.NombreEstado #"}
            ],
            noRecords: {
                template:"No hay llegadas tarde disponibles"
            },
            //height: 400,
            scrollable: true,
            editable: false
        });
    }

    function EditorFecha() {
        $("#Fecha").kendoDatePicker({ dateInput: true, format: "dd/MM/yyyy" });
    }

    function Aprobar(e) {
        e.preventDefault();
        var registro = this.dataItem($(e.currentTarget).closest('tr'));
        if (confirm("¿Estás seguro de que deseas aprobar esta llegada tarde?")) {
            var parametros = {
                idLlegadaTarde: registro.Id
            };
            debugger;
            $.ajax({
                url: '@Url.Action("AprobarLlegadaTarde", "LlegadaTarde")',
                method: 'POST',
                datatype: "json",
                async: false,
                data: parametros,
                success: function (result) {
                    $.toast({
                        heading: 'Satisfactorio',
                        text: 'Datos guardados correctamente.',
                        position: 'top-right',
                        loaderBg: '#ff6849',
                        icon: 'success',
                        hideAfter: 3000,
                        stack: 6
                    });
                    RefreshGrid();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $.toast({
                        heading: 'Error',
                        text: ' ' + textStatus + ": " + XMLHttpRequest.responseText,
                        position: 'top-right',
                        loaderBg: '#ff6849',
                        icon: 'error',
                        hideAfter: 3000,
                        stack: 6
                    });
                    RefreshGrid();
                }
            });
        }
    }

    function Rechazar(e) {
        e.preventDefault();
        var registro = this.dataItem($(e.currentTarget).closest('tr'));
        if (confirm("¿Estás seguro de que deseas rechazar esta llegada tarde?")) {
                var parametros = {
                    idLlegadaTarde: registro.Id
                };
            debugger;
            $.ajax({
                url: '@Url.Action("RechazarLlegadaTarde", "LlegadaTarde")',
                method: 'POST',
                datatype: "json",
                async: false,
                data: parametros,
                success: function (result) {
                    $.toast({
                        heading: 'Satisfactorio',
                        text: 'Datos guardados correctamente.',
                        position: 'top-right',
                        loaderBg: '#ff6849',
                        icon: 'success',
                        hideAfter: 3000,
                        stack: 6
                    });
                    RefreshGrid();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $.toast({
                        heading: 'Error',
                        text: ' ' + textStatus + ": " + XMLHttpRequest.responseText,
                        position: 'top-right',
                        loaderBg: '#ff6849',
                        icon: 'error',
                        hideAfter: 3000,
                        stack: 6
                    });
                    RefreshGrid();
                }
            });
        }
    }

    function RefreshGrid() {
        $("#grdConfiguracion").getKendoGrid().dataSource.read();
    }

    $(document).ready(function () {
        EditorFecha();
        CrearGrid();
    });
</script>
<script type="text/javascript">
    function PermisoAprobar() {
        var permisos = '@ViewData["permisos"]';
        
        AprobarLlegadasTarde = {
            name: "aprobar", iconClass: "fa fa-thumbs-up", text: "", click: Aprobar, visible: function (dataItem) { return dataItem.Estado.IdEstado === 97 }
        }
            return AprobarLlegadasTarde
        
    }
    function PermisoRechazar() {
        var permisos = '@ViewData["permisos"]';
        RechazarLlegadasTarde = {
            name: "rechazar", iconClass: "fa fa-thumbs-down", text: "", click: Rechazar, visible: function (dataItem) { return dataItem.Estado.IdEstado === 97 }
        }
            return RechazarLlegadasTarde
        
    }
</script>