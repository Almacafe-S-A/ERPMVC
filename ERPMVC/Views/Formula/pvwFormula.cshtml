@model ERPMVC.DTO.FormulaDTO

@{ Layout = null;
    var messages = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." },
   {"required","Valor requerido" }
};
    var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
}

<script>

    function customFunction(input) {

        if (input.attr('name') === "IdFormula" && input.val() === "0") {
            return false;
        }

    }
    function TipoFormula() {
        return { Id: 24 };
    }
    //$('#btnprueba').val("");
</script>



<div id="ModalFormula" class="modal fade" role="dialog">
    <!-- Modal content-->
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" name="btnprueba" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Fórmula</h4>
            </div>
            <div class="modal-body">
                <div class="row" id="validation">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-body">
                                <form id="frmFormula" kendo-validator="true" kendo-messages="messages"
                                      data-ajax="true"
                                      data-ajax-method="post"
                                      data-ajax-begin="SaveFormula"
                                      class="validation-wizard wizard-circle">
                                    <div class="form-body">
                                        <h3 class="card-title">Fórmula</h3>
                                        <hr>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label asp-for="IdFormula" class=" control-label" style="width:100%"></label>
                                                    <input type="text" asp-for="IdFormula" name="IdFormula" class="form-control" disabled="disabled" style="min-width:100%" />
                                                    <span asp-validation-for="IdFormula" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-4">

                                                <div class="form-group">
                                                    <label asp-for="NombreFormula" class=" control-label" style="width:100%"></label>
                                                    <input type="text" asp-for="NombreFormula" name="NombreFormula" class="form-control" autocomplete="off" style="min-width:100%" required maxlength="60" />
                                                    <span asp-validation-for="NombreFormula" class="text-danger"></span>
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label asp-for="CalculoFormula" class=" control-label" style="width:100%"></label>
                                                    <input type="text" asp-for="CalculoFormula" name="TipoFormula" onchange="Validar()" class="form-control" autocomplete="off" style="min-width:100%" required maxlength="60" />
                                                    <span asp-validation-for="CalculoFormula" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label asp-for="IdEstado" class="control-label"></label>
                                                    <kendo-dropdownlist name="IdEstado"
                                                                        for="@Model.IdEstado"
                                                                        filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                        option-label="Seleccionar Estado"
                                                                        datatextfield="NombreEstado"
                                                                        datavaluefield="IdEstado"
                                                                        required
                                                                        style="width: 100%;">
                                                        <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                                            <transport>
                                                                <read url="@Url.Action("GetGrupoEstadoUno", "Estados")" />
                                                            </transport>
                                                        </datasource>
                                                    </kendo-dropdownlist>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label asp-for="IdTipoFormula" class="  control-label" style="width:100%"></label>
                                                    <kendo-dropdownlist name="IdTipoFormula"
                                                                        for="IdTipoFormula"
                                                                        filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                        option-label="Seleccione el Tipo Fórmula"
                                                                        datatextfield="Nombre"
                                                                        datavaluefield="Id"
                                                                        required
                                                                        style="width: 100%;">
                                                        <datasource type="DataSourceTagHelperType.WebApi">
                                                            <transport>
                                                                <read url="@Url.Action("GetElementoByIdConfiguracion", "ElementoConfiguracion")" data="TipoFormula" />
                                                            </transport>
                                                        </datasource>
                                                    </kendo-dropdownlist>
                                                    <span asp-validation-for="IdTipoFormula" class="text-danger"></span>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <button id="btnFormula" class="form-control btn-miboton" type="submit"> Guardar </button>
                                            </div>
                                        </div>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    function SaveFormula(e) {

            var notification = $("#notification").data("kendoNotification");
           // e.preventDefault();
            $("#btnFormula").hide();
            $("#btnFormula").prop("disabled", true);

            var displayedData = $("#gridFormula").data().kendoGrid.dataSource.view();

        var dataObject = {
            'IdFormula': $("#IdFormula").val() === "" ? "0" : $("#IdFormula").val(),
            'NombreFormula': $("#NombreFormula").val(),
            'CalculoFormula': $("#CalculoFormula").val(),
            'IdEstado': $("#IdEstado").val(),
            'NombreEstado': $("#IdEstado").data("kendoDropDownList").text(),
            'IdTipoFormula': $("#IdTipoFormula").val(),
            'NombreTipoFormula': $("#IdTipoFormula").data("kendoDropDownList").text(),
        };


        var validator = $("#frmFormula").data("kendoValidator");
                 var status = $(".status");

                if (validator.validate()) {

                    $.ajax({
                        url: '@Url.Action("SaveFormula", "Formula")',
                        method: 'POST',
                        datatype: "json",
                        contentType: 'application/json',
                        async: false,
                        data: JSON.stringify(dataObject),
                        success: function (data) {

                            //notification.show({
                            //    message: "Guardado correctamente!"
                            //}, "upload-success");
                            $.toast({
                                heading: 'Satisfactorio',
                                text: '<br/><br/>Datos guardados correctamente.',
                                position: 'top-right',
                                loaderBg: '#ff6849',
                                icon: 'success',
                                hideAfter: 3000,
                                stack: 6
                            });

                            RefreshGridFormula();

                            $('#ModalFormula').modal('hide');


                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {

                            notification.show({
                                title: "Validación",
                                message: textStatus + ": " + XMLHttpRequest.responseText
                            }, "error");

                        }
                    });

                }
                else {
                    status.text("Oops! There is invalid data in the form.")
                        .removeClass("valid")
                        .addClass("invalid");
                }


            $("#btnFormula").show();
            $("#btnFormula").prop("disabled", false);
    }
</script>

<script type="text/javascript" language="javascript">

    var _numeros = '0123456789';
    var _operadores = '/*-+^';
    var _cadenas = 'abcdefghijklmnñopqrstuvwxyzABCDEFGHIJKLMNÑOPQRSTUVWXYZ_';

    function _porId(id) {
        return document.getElementById(id);
    }

    function rtrim(s, que) {
        var j = 0;

        // Busca el último caracter segun el especificado
        for (var i = s.length - 1; i > -1; i--)
            if (s.substring(i, i + 1) != que) {
                j = i;
                break;
            }
        return s.substring(0, j + 1);
    }

    function InsEnCursor(idcampo, valor) {
        var campo = document.getElementById(idcampo);
        //IE support
        if (document.selection) {
            campo.focus();
            sel = document.selection.createRange();
            sel.text = valor;
        }
        //MOZILLA/NETSCAPE support
        else if (campo.selectionStart || campo.selectionStart == '0') {
            var startPos = campo.selectionStart;
            var endPos = campo.selectionEnd;
            campo.value = campo.value.substring(0, startPos)
                + valor
                + campo.value.substring(endPos, campo.value.length);
        }
        else {
            campo.value += valor;
        }
    }

    function Seleccionado(idcampo) {
        var campo = document.getElementById(idcampo);
        //IE support
        if (document.selection) {
            campo.focus();
            sel = document.selection.createRange();
            return sel.text;
        }
        //MOZILLA/NETSCAPE support
        else if (campo.selectionStart || campo.selectionStart == '0') {
            var startPos = campo.selectionStart;
            var endPos = campo.selectionEnd;
            return campo.value.substring(startPos, endPos);
        }
        else {
            return campo.value;
        }
    }

    function CaracterAntesCursor(idcampo) {
        var campo = _porId(idcampo);
        //IE support
        if (document.selection) {
            campo.focus();
            sel = document.selection.createRange();
            sel.moveStart("character", -1);

            sel2 = document.selection.createRange();

            //Si se había seleccionado desde el principio de texto
            if (sel.text == sel2.text) {
                return null;
            }
            return sel.text.substr(0, 1);
        }
        //MOZILLA/NETSCAPE support
        else if (campo.selectionStart || campo.selectionStart == '0') {
            var startPos = campo.selectionStart;

            if (startPos == 0) {
                return null;
            }

            return campo.value.substr(startPos - 1, 1);
        }

        return null;
    }

    function CaracterDespuesCursor(idcampo) {
        var campo = _porId(idcampo);
        //IE support
        if (document.selection) {
            campo.focus();
            sel = document.selection.createRange();
            sel.moveStart("character", sel.text.length);
            sel.moveEnd("character", 1);
            return sel.text.substr(0, 1);
        }
        //MOZILLA/NETSCAPE support
        else if (campo.selectionStart || campo.selectionStart == '0') {
            var endPos = campo.selectionEnd;

            if (endPos == campo.value.length - 1) {
                return null;
            }

            return campo.value.substr(endPos, 1);
        }

        return null;
    }

    function ValidarParentesis(s) {
        var i;
        var va = 0;
        for (i = 0; i < s.length; i++) {
            if (s.substring(i, i + 1) == '(') {
                va++;
            }
            else if (s.substring(i, i + 1) == ')') {
                va--;
            }

            if (va < 0) {
                return false;
            }
        }

        //si va no termina en cero la expresión está incorrectamente parentisada
        return va == 0;
    }

    function ValidarCampos(s) {
        var i;

        for (i = 0; i < s.length; i++) {
            if (s.substring(i, i + 1) == '{') {
                va++;
            }
            else if (s.substring(i, i + 1) == ')') {
                va--;
            }

            if (va < 0) {
                return false;
            }
        }

        //si va no termina en cero la expresión está incorrectamente parentisada
        return va == 0;
    }

    function Validar() {
        var s = _porId('CalculoFormula').value;

        if (rtrim(s, ' ') == '') {
            alert('La formula no puede estar vacía');
            return false;
        }

        if (!ValidarParentesis(s)) {
            alert('La operación está mal parentisada, por favor verifique');
            return false;
        }

        var c = '';
        var estado = 0;
        for (var i = 0; i < s.length; i++) {
            c = EsteCaracter(s, i);
            switch (estado) {
                case 0:
                    switch (true) {
                        case EsNumero(c):
                            estado = 2;
                            continue;
                        case c == '-':
                            estado = 3;
                            continue;
                        case c == '(':
                            estado = 0;
                            continue;
                        case c == '{':
                            estado = 1;
                            continue;
                    }
                    return Error(i, c, '0-9, -, (, {');
                    break;
                case 1:
                    switch (true) {
                        case EsLetra(c):
                            estado = 7;
                            continue;
                    }
                    return Error(i, c, 'a-z, A-Z, _');
                    break;
                case 2:
                    switch (true) {
                        case EsNumero(c):
                            estado = 2;
                            continue;
                        case c == '-' || EsOperador(c):
                            estado = 3;
                            continue;
                        case c == ')':
                            estado = 4;
                            continue;
                        case c == '.':
                            estado = 5;
                            continue;
                    }
                    return Error(i, c, '0-9, ), ., -, *, +, /, ^');
                    break;
                case 3:
                    switch (true) {
                        case EsNumero(c):
                            estado = 2;
                            continue;
                        case c == '(':
                            estado = 0;
                            continue;
                        case c == '{':
                            estado = 1;
                            continue;
                    }
                    return Error(i, c, '0-9, (, {');
                    break;
                case 4:
                    switch (true) {
                        case c == '-' || EsOperador(c):
                            estado = 3;
                            continue;
                        case c == ')':
                            estado = 4;
                            continue;
                    }
                    return Error(i, c, '), -, *, +, /, ^');
                    break;
                case 5:
                    switch (true) {
                        case EsNumero(c):
                            estado = 6;
                            continue;
                    }
                    return Error(i, c, '0-9');
                    break;
                case 6:
                    switch (true) {
                        case EsNumero(c):
                            estado = 6;
                            continue;
                        case c == '-' || EsOperador(c):
                            estado = 3;
                            continue;
                        case c == ')':
                            estado = 4;
                            continue;
                    }
                    return Error(i, c, '0-9, ), -, *, +, /, ^');
                    break;
                case 7:
                    switch (true) {
                        case EsLetra(c):
                            estado = 7;
                            continue;
                        case c == '}':
                            estado = 4;
                            continue;
                    }
                    return Error(i, c, 'a-z, A-Z, _, }');
                    break;
            }
            return;
        }

        if (estado != 2 && estado != 4 && estado != 6) {
            alert('La formula se encuentra incompleta');
            return false;
        }

        alert('¡Expresión correcta!');
        return true;
    }

    function Error(i, c, esperaba) {
        alert('Se encontró "' + c + '" cuando se esperaba uno de los siguientes: ' + esperaba + ' \n columna: ' + (i + 1) + '');
        return false;
    }

    function EsNumero(c) {
        if (_numeros.indexOf(c) != -1) {
            return true;
        }

        return false;
    }

    function EsLetra(c) {
        if (_cadenas.indexOf(c) != -1) {
            return true;
        }

        return false;
    }

    function EsOperador(c) {
        if (_operadores.indexOf(c) != -1) {
            return true;
        }

        return false;
    }

    function EsteCaracter(s, k) {
        if (s.length < k) {
            return null;
        }

        return s.substr(k, 1);
    }

</script>
