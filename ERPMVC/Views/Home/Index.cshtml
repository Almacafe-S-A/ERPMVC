@using Kendo.Mvc.UI
@using ERPMVC.DTO


<script src="~/admp/js/dashboard2.js"></script>
<script>

    $(document).ready(function () {
       // var dataObject = { CustomerId: $("#CustomerId").val()};
             $.ajax({
                url: '@Url.Action("GetQuantityUsuario", "Usuario")',          
                method: 'GET',
                datatype: "json",
                contentType: 'application/json',
                async: false,
               // data: dataObject,
                 success: function (result) {
                    // console.log(result);                    
                     $("#cantidadusuarios").text(result);
                   
                  
                },
                 error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus + ": " + XMLHttpRequest.responseText);
                  }
        });

        
              $.ajax({
                url: '@Url.Action("GetQuantitySalesOrders", "DashBoard")',          
                method: 'GET',
                datatype: "json",
                contentType: 'application/json',
                async: false,
               // data: dataObject,
                 success: function (result) {
                     //console.log('Cotizaciones'+result);                    
                     $("#totalcotizaciones").text(result);
                   
                  
                  },
                 error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus + ": " + XMLHttpRequest.responseText);
                  }
               });

            $.ajax({
                url: '@Url.Action("GetQuantityInvoices", "DashBoard")',          
                method: 'GET',
                datatype: "json",
                contentType: 'application/json',
                async: false,
               // data: dataObject,
                 success: function (result) {
                     console.log('Cotizaciones' +result);                    
                     $("#totalfacturas").text(result);
                   
                  
                  },
                 error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus + ": " + XMLHttpRequest.responseText);
                  }
               });

           $.ajax({
                url: '@Url.Action("GetQuantityCertificadoDeposito", "DashBoard")',          
                method: 'GET',
                datatype: "json",
                contentType: 'application/json',
                async: false,
               // data: dataObject,
                 success: function (result) {
                    // console.log('Cotizaciones' +result);                    
                     $("#totalcertificados").text(result);
                   
                  
                  },
                 error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus + ": " + XMLHttpRequest.responseText);
                  }
               });

    });

    function error_handler(e) {
        var errors = $.parseJSON(e.xhr.responseText);

        if (errors) {
            alert("Errors:\n" + errors.join("\n"));
        }
    }

    function onAverageSalesDataBound(e) {
        var data = this.dataSource.aggregates()
        // console.log(data);
        if (data.Facturacion) {
            $("#EmployeeAverageSalesLabel").text(kendo.toString(data.Facturacion.average, "c2"));
        } else {
            $("#EmployeeAverageSalesLabel").text(kendo.toString(0, "c2"));
        }
    }


    function paramtersfindchartFactMensual() {
        return parameters = {
            'FechaInicio': $("#FechaInicio2").val(),
            'FechaFin': $("#FechaFin2").val(),

        }
    }

</script>

@*<div class="row">
    <div class="col-md-4">
    </div>
    <div class="col-md-4">       
        <h2 class="darkblue">ALMACAFE</h2>
    </div>

    <div class="col-md-4">
    </div>

</div>*@

@await Html.PartialAsync("Dashboard")

<div class="row">
    <div class="col-lg-12 col-xlg-12">
        <div class="card">
            <div class="card-body">
                <div class="d-flex flex-wrap">
                    <div>
                        <h4 class="card-title">Vista analitica</h4>
                        <h6 class="card-subtitle">Analisis mensual</h6>
                    </div>
                    </div>

                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="card-base">
                                    <div class="card-icon">
                                        <a href="#" title="Widgets" id="widgetCardIcon" class="imagecard">
                                            <span class="fa fa-file-invoice"></span>
                                        </a>
                                        <div class="card-data widgetCardData">
                                            <h3 class="text-themecolor" style="color: #3c8dbc;">Facturación<br/> por mes</h3>
                                            @*<p class="card-block text-center">Rich, Adaptive, Mobile-First Widgets. Driven by deep User Centered Analysis and Research.</p>*@
                                            <a href="#" title="Style Builder" class="anchor btn btn-default" style="background: #3c8dbc;color:#ffffff; border: #bb7824;"> <i class="fa fa-paper-plane" aria-hidden="true"></i>  Crear Facturas </a>

                                            @await Html.PartialAsync("MDate2")
                                            <br />

                                            @(Html.Kendo().Chart<FacturacionMensual>()
                                                                                       .Name("EmployeeAverageSales")
                                                                                       .Theme("metro")
                                                                                       .HtmlAttributes(new { style = "height:100%; width:100%;" })
                                                                                       .AutoBind(true)
                                                                                       .Events(e => e.DataBound("onAverageSalesDataBound"))
                                                                                       .DataSource(ds => ds
                                                                                           .Aggregates(a => a.Add(s => s.Facturacion).Average())
                                                                                           .Read(read => read.Action("FacturacionMes", "DashBoard").Type(HttpVerbs.Post).Data("paramtersfindchartFactMensual"))
                                                                                       )
                                                                                       .Series(series =>
                                                                                       {
                                                                                           series.Line(model => model.Facturacion, categoryExpression: model => model.Date).Width(1.5).Markers(m => m.Visible(true))
                                                                                           .Aggregate(ChartSeriesAggregate.Avg)
                                                                                           .Tooltip(t => t.Template("#=kendo.toString(Facturacion, 'c2')#"));
                                                                                       })
                                                                                       .CategoryAxis(c => c
                                                                                           .Date()
                                                                                            .BaseUnit(ChartAxisBaseUnit.Months)
                                                                                           .Categories(x => x.Date)
                                                                                           .Visible(true).MajorGridLines(m => m.Visible(true)).MajorTicks(mT => mT.Visible(true))
                                                                                       )

                                                                                       .Legend(leg => leg.Visible(false))
                                                                                       .ValueAxis(val => val.Numeric().Visible(true).Labels(lab => lab.Visible(true)).MajorGridLines(m => m.Visible(true)).MajorTicks(mT => mT.Visible(true)))
                                            )
                                        </div>

                                    </div>
                                    <div class="space"></div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card-base text-center">
                                    <div class="card-icon">
                                        <a href="#" title="Widgets" id="widgetCardIcon" class="imagecard">
                                            <span class="glyphicon glyphicon-user"></span>
                                        </a>
                                        <div class="card-data widgetCardData text-center">
                                            <h3 class="text-themecolor" style="color:#3c8dbc;">Usuarios</h3>
                                            @*Cantidad de usuarios.*@
                                            <p class="card-block text-center">
                                                <h2 id="cantidadusuarios" class="box-title" style="color:#bb7824;"></h2>
                                            </p>
                                            @*<a href="#" title="Style Builder" class="anchor btn btn-default" style="background: #bb7824; border: #bb7824;"> <i class="fa fa-paper-plane" aria-hidden="true"></i>  Explore More </a>*@
                                        </div>
                                    </div>
                                    <div class="space"></div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card-base">
                                    <div class="card-icon">
                                        <a href="#" title="Widgets" id="widgetCardIcon" class="imagecard">
                                            <span class="fa fa-file-alt"></span>
                                        </a>
                                        <div class="card-data widgetCardData">
                                            <h3 class="text-themecolor" style="color: #3c8dbc;">Ordenes</h3>
                                            <p class="card-block text-center">OC</p>
                                            <a href="#" title="Style Builder" class="anchor btn btn-default" style="background: #3c8dbc; border: #bb7824;"> <i class="fa fa-paper-plane" aria-hidden="true"></i>  Ir a ordenes </a>
                                        </div>
                                    </div>
                                    <div class="space"></div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>


                <br /><br /><br /><br />