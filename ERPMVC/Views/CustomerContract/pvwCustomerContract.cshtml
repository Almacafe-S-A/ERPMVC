@model ERPMVC.Models.CustomerContract

@{ Layout = null;
    var messages = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." },
                                        {"required","Valor requerido" }
                                    };
    var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
    var editar = 1;
}



<script>

    function customFunction(input) {

        if (input.attr('name') === "BranchId" && input.val() === "0") {
            return false;
        }

        if (input.attr('name') === "CurrencyId" && input.val() === "0") {
            return false;
        }

        if (input.attr('name') === "Quantity" && input.val() == 0) {
            return false;
        }

        if (input.attr('name') === "Largo" && input.val() == 0) {
            return false;
        }

        if (input.attr('name') === "UsedArea" && input.val() == 0) {
            return false;
        }

        if (input.attr('name') === "Ancho" && input.val() == 0) {
            return false;
        }

        if (input.attr('name') === "Alto" && input.val() == 0) {
            return false;
        }



        return true;
    }


    function closeCustomerContract() {
        $('#myModalCustomerContract').find(':input').not(':submit').val('0');

        RefreshGridCustomerContract();
        $("#myModalCustomerContract").modal('hide');
    }

    function RefreshGridCustomerContract() {
        var grid = $("#gridCustomerContract").getKendoGrid();
        grid.dataSource.read();
    }
</script>


<div id="ModalAnular" style="padding-left:50%; padding-bottom:50%;" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Observaciones</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">

                <div class="col-md-12">
                    <div class="form-group">
                        <form id="frmObservacion" kendo-validator="true" kendo-messages="messages" kendo-rules="rules"
                              data-ajax="true"
                              data-ajax-method="post"
                              data-ajax-begin="AnularContrato"
                              class="validation-wizard wizard-circle">
                            <label asp-for="Observcion" class="control-label" style="width:100%"></label>
                            <input type="text" id="ObservacionAnular" required class="form-control required " style="min-width: 100%" />
                            <input type="text" id="AnularContrato" hidden />
                            <span asp-validation-for="Observcion" class="text-danger"></span>
                            <button id="btnobservacion" type="submit" class="form-control btn-miboton">Guardar</button>
                        </form>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>



<div id="myModalCustomerContract" class="modal fade"  role="dialog">
    <div class="modal-dialog modal-lg" role="document">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Información de contrato</h4>
                <button type="button" class="close" onclick="closeCustomerContract();">&times;</button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-body">

                                    <form id="frmCustomerContract" kendo-validator="true" kendo-messages="messages" kendo-rules="rules"
                                          data-ajax="true"
                                          data-ajax-method="post"
                                          method="post" class="validation-wizard wizard-circle">

                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="CustomerContractId" class="  control-label" style="width:100%"></label>
                                                    <input type="number" asp-for="CustomerContractId" readonly class="k-textbox" style="min-width:100%" name="CustomerContractId" value="@Model.CustomerContractId" />

                                                    <span asp-validation-for="CustomerContractId" class="text-danger"></span>
                                                </div>
                                            </div>

                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="FechaContrato" class=" control-label" style="width: 100%;"></label>
                                                    <kendo-datetimepicker name="FechaContrato"
                                                                          style="width: 100%;"
                                                                          format="dd/MM/yyyy hh:mm:ss"
                                                                          time-format="hh:mm:ss"
                                                                          data-val-required="La fecha es requerida"
                                                                          value="Model.FechaContrato" />
                                                    <span asp-validation-for="FechaContrato" class="text-danger"></span>
                                                </div>
                                            </div>

                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="CustomerContractId" class="  control-label" style="width:100%">Plazo</label>
                                                    <input type="number" asp-for="CustomerContractId" class="k-textbox" style="min-width:100%" name="CustomerContractId" value="@Model.CustomerContractId" />

                                                    <span asp-validation-for="CustomerContractId" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <script>
                                                function CustomerContract() {

                                                    hcustom = $("#CustomerId").val();
                                                    $("#CustomerContractProduct").data("kendoMultiSelect").dataSource.read();

                                                }
                                            </script>

                                            <div class="col-md-3">
                                                <div class="form-group">

                                                    <label asp-for="CustomerId" class="control-label" style="width:100%"></label>

                                                    <kendo-dropdownlist for="@Model.CustomerId"
                                                                        id="CustomerIdCC"
                                                                        filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                        option-label="Select CustomerId"
                                                                        enable="false"
                                                                        required
                                                                        datatextfield="CustomerName"
                                                                        datavaluefield="CustomerId"
                                                                        onchange="CustomerContract()"
                                                                        style="width: 100%;">
                                                        <datasource type="DataSourceTagHelperType.WebApi">
                                                            <transport>
                                                                <read url="@Url.Action("GetCustomer", "Common")" />
                                                            </transport>
                                                        </datasource>
                                                    </kendo-dropdownlist>
                                                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                                                </div>
                                            </div>

                                        </div>


                                        <div class="row">



                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="RTNCustomerManager" class="  control-label" style="width:100%"></label>
                                                    <input type="text" id="RTNCustomerManager" asp-for="RTNCustomerManager" class="k-textbox" style="min-width:100%" />
                                                    <span asp-validation-for="RTNCustomerManager" class="text-danger"></span>
                                                </div>
                                            </div>

                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="CustomerManager" class="  control-label" style="width:100%"></label>
                                                    <input type="text" id="CustomerManager" asp-for="CustomerManager" class="k-textbox" style="min-width:100%" />
                                                    <span asp-validation-for="CustomerManager" class="text-danger"></span>
                                                </div>
                                            </div>

                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="RTNMANAGER" class="  control-label" style="width:100%"></label>
                                                    <input type="text" id="RTNMANAGER" asp-for="RTNMANAGER" class="k-textbox" style="min-width:100%" />
                                                    <span asp-validation-for="RTNMANAGER" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="Manager" class="  control-label" style="width:100%"></label>
                                                    <input type="text" id="Manager" asp-for="Manager" class="k-textbox" style="min-width:100%" />
                                                    <span asp-validation-for="Manager" class="text-danger"></span>
                                                </div>
                                            </div>

                                        </div>

                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="Reception" class="  control-label" style="width:100%"></label>
                                                    <input type="text" id="Reception" asp-for="Reception" class="k-textbox" style="min-width:100%" />
                                                    <span asp-validation-for="Reception" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="UsedArea" class="  control-label" style="width:100%"></label>
                                                    <input type="number" id="UsedArea" asp-for="UsedArea" class="k-textbox" style="min-width:100%" />
                                                    <span asp-validation-for="UsedArea" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="WareHouses" class="  control-label" style="width:100%"></label>
                                                    <input type="text" id="WareHouses" asp-for="WareHouses" class="k-textbox" style="min-width:100%" />
                                                    <span asp-validation-for="WareHouses" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="StorageTime" class="  control-label" style="width:100%"></label>
                                                    <input type="text" id="StorageTime" asp-for="StorageTime" class="k-textbox" style="min-width:100%" />
                                                    <span asp-validation-for="StorageTime" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <script>

                                                    </script>
                                                    <label asp-for="ProductId" class="control-label" style="width:100%"></label>

                                                    <kendo-dropdownlist name="ProductId" filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                        for="ProductId"
                                                                        option-label="Seleccione el Producto"
                                                                        datatextfield="ProductName"
                                                                        datavaluefield="ProductId"
                                                                        required
                                                                        style="width: 100%;">
                                                        <datasource type="DataSourceTagHelperType.WebApi">
                                                            <transport>
                                                                <read url="@Url.Action("GetProduct", "Common")" />
                                                            </transport>
                                                        </datasource>
                                                    </kendo-dropdownlist>
                                                    <span asp-validation-for="ProductId" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label asp-for="CustomerConstitution" class="  control-label" style="width:100%"></label>
                                                    <textarea class="form-control" asp-for="CustomerConstitution" style="min-width:100%" rows="10"></textarea>
                                                    @*<input type="text" id="CorreoAS" asp-for="CustomerConstitution" class="form-control " style="min-width:100%" />*@
                                                    <span asp-validation-for="CustomerConstitution" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <h3 class="text-themecolor">Cargos</h3>

                                            @(Html.Kendo().Grid<ERPMVC.Models.CustomerContractLines>()
                                                                  .Name("gridCotizacionesDetail")
                                                                  .Columns(columns =>
                                                                  {
                                                                      columns.Bound(p => p.Id).Title("Id Line").Width(150).Visible(false);
                                                                      columns.Bound(p => p.CustomerContractId).Title("Cotización Id").Width(150).Visible(false);
                                                                      columns.Bound(p => p.SubProductId).Title("IdServicio").Width(150).Visible(false);
                                                                      columns.Bound(p => p.SubProductName).Title("Subservicio").Width(120);
                                                                      columns.Bound(p => p.Description).Title("Descripción").Width(120);
                                                                      columns.Bound(p => p.UnitOfMeasureName).Format("{0:n2}").Title("Unidad de medida").Width(100);
                                                                      columns.Bound(p => p.UnitOfMeasureId).Format("{0:n2}").Title("Unidad de medida").Width(180).Visible(false);
                                                                      columns.Bound(p => p.Price).Format("{0:n2}").Title("Precio").Width(80).HtmlAttributes(new { @style = "text-align:right" });
                                                                      columns.Bound(p => p.Quantity).Format("{0:n2}").Title("Cantidad").Width(80).HtmlAttributes(new { @style = "text-align:right" });
                                                                      columns.Bound(p => p.TipoCobroName).Title("Tipo de Cobro").Width(80);
                                                                      columns.Bound(p => p.TipoCobroId).Title("Tipo de Cobro Id").Width(80).Visible(false);
                                                                      columns.Bound(p => p.PeriodoCobro).Format("{0:d}").Title("Plazo").Width(80);




                                                                  })
                                                                      .Filterable(f => f.Operators(o => o.ForString(s => s
                                                               .Clear()
                                                               .Contains("Contiene")
                                                               .DoesNotContain("No contiene")
                                                               .EndsWith("Termina con")
                                                               .IsEqualTo("Es igual a")
                                                               .IsNotEqualTo("No es igual a")
                                                               .IsNull("Es nulo")
                                                               .StartsWith("Inicia con")


                                                                     )
                                                                     .ForNumber(n => n
                                                                       .Clear()
                                                                       .IsEqualTo("Es igual a")
                                                                       .IsGreaterThan("Es mayor que")
                                                                       .IsLessThan("Es menor que")
                                                                       .IsNull("Es nulo")
                                                                       .IsLessThanOrEqualTo("Es menor o igual que")
                                                                       .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                                     )
                                                                     .ForDate(d => d
                                                                     .Clear()
                                                                     .IsEqualTo("Es igual que")
                                                                     .IsGreaterThan("Es mayor que")
                                                                     .IsLessThan("Es menor que")
                                                                     .IsLessThanOrEqualTo("Es menor o igual que")
                                                                     .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                                     .IsNotEqualTo("No es igual que")
                                                                      )
                                                                   ))
                                                                  //.Events(e => e.DataBound("CalcularTotalDocumento"))
                                                                   .Editable(e => e.Mode(GridEditMode.PopUp))
                                                                    .Sortable()
                                                                    .AutoBind(true)
                                                                    //.Pageable()
                                                                    .Filterable()
                                                                    .Scrollable()
                                                                    // .ClientDetailTemplateId("template")
                                                                    .Pdf(pdf => pdf.FileName("Cotización_Detalle_Reporte" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                                                    + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
                                                                    .ProxyURL(Url.Action("Export", "Home")).AllPages())
                                                                      .Excel(excel => excel.FileName("Cotización_Detalle_Reporte_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                                                    + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
                                                                    .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
                                                                    //.Events(e=>e.Save("onsave"))
                                                                    .DataSource(dataSource =>

                                                                   dataSource
                                                                   //.Ajax()
                                                                   .WebApi()

                                                                    .ServerOperation(false)
                                                                    .Model(model =>
                                                                    {
                                                                        model.Id(p => p.Id);
                                                                        model.Field(p => p.CustomerContractId).Editable(false);

                                                                    })
                                                                    .Events(events =>
                                                                    {
                                                                        events.Error("error_handler");
                                                                        //events.upda("EditHandler");

                                                                    })
                                                            .Read(read => read.Action("GetCustomerContractLines", "CustomerContractLines").Data("GetCustomerContractId"))
                                                              )
        )

                                        
                                    <div class="row"></div>
                                        <h3 class="text-themecolor">Clausulas</h3>
                                        @(Html.Kendo().Grid<ERPMVC.Models.CustomerContractTerms>
                                ()
                                .Name("gridNumeracionCustomerContractTerms")
                                .Columns(columns =>
                                {
                                    if (true || User.HasClaim("Contabilidad.Centros de Costos.Editar", "true"))
                                    {
                                        columns.Command(command =>
                                        {
                                            //command.Custom("Ver detalles").Click("Detalles");
                                            //command.Custom("Editar").Text(" ").IconClass("fa fa-edit").Click("EditCustomerContractTerms");

                                            //command.Custom("Editar").Click("EditDimensions");
                                            //  command.Destroy();
                                        }).Title("Acciones").Width(80);
                                    }
                                    columns.Bound(p => p.Id).Title("Código").Width(80).Visible(false);
                                    columns.Bound(p => p.Position).Title("No").Width(80);
                                    columns.Bound(p => p.TermTitle).Title("Titulo").Width(200);
                                    columns.Bound(p => p.Term).Title("Clausula").Width(200);
                                    //columns.Bound(p => p.UsuarioCreacion).Width(250);
                                    //columns.Bound(p => p.UsuarioModificacion).Width(250);
                                    //columns.Bound(p => p.FechaCreacion).Format("{0:dd/MM/yyyy}").Width(450);
                                    //columns.Bound(p => p.FechaModificacion).Format("{0:dd/MM/yyyy}").Width(450);


                                })
                                    .Filterable(f => f.Operators(o => o.ForString(s => s
                                                           .Clear()
                                                           .Contains("Contiene")
                                                           .DoesNotContain("No contiene")
                                                           .EndsWith("Termina con")
                                                           .IsEqualTo("Es igual a")
                                                           .IsNotEqualTo("No es igual a")
                                                           .IsNull("Es nulo")
                                                           .StartsWith("Inicia con")


                                                     )
                                                     .ForNumber(n => n
                                                       .Clear()
                                                       .IsEqualTo("Es igual a")
                                                       .IsGreaterThan("Es mayor que")
                                                       .IsLessThan("Es menor que")
                                                       .IsNull("Es nulo")
                                                       .IsLessThanOrEqualTo("Es menor o igual que")
                                                       .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                     )
                                                     .ForDate(d => d
                                                     .Clear()
                                                     .IsEqualTo("Es igual que")
                                                     .IsGreaterThan("Es mayor que")
                                                     .IsLessThan("Es menor que")
                                                     .IsLessThanOrEqualTo("Es menor o igual que")
                                                     .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                     .IsNotEqualTo("No es igual que")
                                                      )
                                                   ))
                                .ToolBar(tools =>
                                {
                                    // tools.Create();
                                    if (true)
                                    {
                                        //tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus")
                                          //                                             .HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "AddCustomerContractTerms()" });
                                    }


                                })
                                .Editable(e => e.Mode(GridEditMode.PopUp).ConfirmDelete("¿Esta seguro que desea eliminar este registro?"))
                                .Sortable()
                                .Pageable()
                                .Filterable()
                                .Scrollable()
                                .Pdf(pdf => pdf.FileName("CustomerContractTermsReport" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
                                .ProxyURL(Url.Action("Export", "Home")).AllPages())
                                    .Excel(excel => excel.FileName("CustomerContractTermsReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
                                .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
                                .DataSource(dataSource =>
                                    dataSource
                                    .WebApi()

                                    .ServerOperation(true)
                                    .Model(model =>
                                    {
                                        model.Id(p => p.Id);
                                        model.Field(p => p.TermTitle).Editable(false);
                                        model.Field(p => p.Term).Editable(true);
                                        //model.Field(p => p.BranchId).Editable(true);
                                        //model.Field(p => p.IdEstado).Editable(true);
                                        // model.Field(p => p.).Editable(true);
                                    })
                                    .Events(events => events.Error("error_handler"))
                                    .Read(read => read.Action("GetCustomerContractLinesTerms", "CustomerContractLines").Data("GetCustomerContractId"))
                                    //.Create(create => create.Action("Insert", "CustomerContractTerms").Type(HttpVerbs.Post))
                                    //.Update(update => update.Action("Update", "CustomerContractTerms", new { Id = "{0}" }).Type(HttpVerbs.Put))
                                //.Destroy(destroy => destroy.Action("Delete", "Dimensions", new { Num = "{1}" }).Type(HttpVerbs.Delete))

                                )
)



                                    </form>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <button id="btnSaveCustomerContract" type="submit" class="form-control btn-miboton" style="min-width:80%" onclick="SaveCustomerContract(this);">Guardar</button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>


    function GetCustomerContractId() {
        

        id = $("#CustomerContractId").val();

        var dataObject = {
            CustomerContractId: id,


        };
        console.log(dataObject)


        return dataObject;
    }
    function SaveCustomerContract(e) {

        var notification = $("#notification").data("kendoNotification");
       // e.preventDefault();
        $("#btnSaveCustomerContract").hide();
        $("#btnSaveCustomerContract").prop("disabled", true);

        //var displayedData = $("#gridControlPalletsDetail").data().kendoGrid.dataSource.view();

        var dataObject = {
            'CustomerContractId': $("#CustomerContractId").val(),
            'ProductId': $("#ProductId").val(),
            'ProductName': $("#ProductId").data("kendoDropDownList").text(),
            'CustomerId': $("#CustomerIdCC").val(),
            'CustomerName': $("#CustomerIdCC").data("kendoDropDownList").text(),
            'CustomerManager': $("#CustomerManager").val(),
            'RTNCustomerManager': $("#RTNCustomerManager").val(),
            'CustomerConstitution': $("#CustomerConstitution").val(),
            'SalesOrderId': $("#SalesOrderId").val(),
            'Manager': $("#Manager").val(),
            'RTNMANAGER': $("#RTNMANAGER").val(),
            'StorageTime': $("#StorageTime").val(),
            'LatePayment': $("#LatePayment").val(),
            'UsedArea': $("#UsedArea").val(),
            'UnitOfMeasureId': $("#UnitOfMeasureIdContract").val(),
            'UnitOfMeasureName': $("#UnitOfMeasureIdContract").data("kendoDropDownList").text(),
            'Reception': $("#Reception").val(),
            'Correo1': $("#Correo1").val(),
            'Correo2': $("#Correo2").val(),
            'Correo3': $("#Correo3").val(),
            'BandaTransportadora': $("#BandaTransportadora").val(),
            'ExtraHours': $("#ExtraHours").val(),
            'FoodPayment': $("#FoodPayment").val(),
            'Transport': $("#Transport").val(),
            'ValueBascula': $("#ValueBascula").val(),
            'ValueCD': $("#ValueCD").val(),
            'ValueSecure': $("#ValueSecure").val(),
            'WareHouses': $("#WareHouses").val(),
            'Porcentaje1': $("#Porcentaje1").val(),
            'Porcentaje2': $("#Porcentaje2").val(),
            'Valor1': $("#Valor1").val(),
            'Valor2': $("#Valor2").val(),
            'FechaContrato': $("#FechaContrato").val(),
            'MontaCargas': $("#MontaCargas").val(),
            'MulasHidraulicas': $("#MulasHidraulicas").val(),
            'Papeleria': $("#Papeleria").val(),
            'DelegateSalary': $("#DelegateSalary").val(),
            'WarehouseRequirements': $("#WarehouseRequirements").val(),
            'Resolution': $("#Resolution").val(),
            'Mercancias': $("#Mercancias").val()
        };

        var validator = $("#frmCustomerContract").data("kendoValidator");

            if (validator.validate()) {

                $.ajax({
                    url: '@Url.Action("SaveCustomerContract", "CustomerContract")',
                    method: 'POST',
                    datatype: "json",
                    contentType: 'application/json',
                    async: false,
                    data: JSON.stringify( dataObject),
                    success: function (data) {

                        $.toast({
                            heading: 'Satisfactorio',
                            text: 'Datos guardados correctamente.',
                            position: 'top-right',
                            loaderBg: '#ff6849',
                            icon: 'success',
                            hideAfter: 30000,
                            stack: 6
                        });

                        //RefreshGridEstibas();
                       // $('#myModalSalesOrder').modal('hide');

                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#btnSaveCustomerContract").show();
                        $("#btnSaveCustomerContract").prop("disabled", false);
                        notification.show({
                            title: "Validacion",
                            message: textStatus + ": " + XMLHttpRequest.responseText
                        }, "error");

                    }
                });

            }
            else {

                notification.show({
                    title: "Validación",
                    message: "Datos incompletos en el formulario"
                }, "error");

                $("#btnSaveCustomerContract").show();
                $("#btnSaveCustomerContract").prop("disabled", false);

            }


    }
</script>