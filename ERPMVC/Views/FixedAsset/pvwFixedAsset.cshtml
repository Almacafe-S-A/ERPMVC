@using System.Security.Claims
@model ERPMVC.DTO.FixedAssetDTO

@{ Layout = null;
    var messages = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." },
// {"required","Valor requerido" }
};
    var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
    ClaimsPrincipal permisos = (ClaimsPrincipal)ViewData["permisos"];
}

<script>
    function customFunction(input) {

        if (input.attr('name') === "FixedAssetId" && input.val() === "0") {
            return false;
        }
    }
</script>


<div id="ModalFixedAsset" class="modal fade" role="dialog">
    <!-- Modal Content -->
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Activos Fijos</h4>
                <button type="button" name="btnprueba" data-dismiss="modal" class="close">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row" id="validation">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-body">
                                <form id="frmFixedAsset" class="validation-wizard wizard-circle"
                                      kendo-validator="true"
                                      data-ajax="true"
                                      data-ajax-method="post"
                                      data-ajax-begin="SaveFixedAsset">
                                    <div class="form-body">
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    <label asp-for="FixedAssetId" class="control-label" style="min-width:100%"></label>
                                                    <input type="text" asp-for="FixedAssetId" name="FixedAssetId" class="k-textbox"
                                                           readonly style="min-width:100%;" />
                                                    <span asp-validation-for="FixedAssetId" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    <label asp-for="FixedAssetName" class="control-label" style="min-width:100%">Nombre</label>
                                                    <input asp-for="FixedAssetName" name="FixedAssetName" type="text" class="k-textbox"
                                                           validationMessage="El Nombre es requerido" autocomplete="off" style="min-width:100%;" required />
                                                    <span asp-validation-for="FixedAssetName" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    <label asp-for="FixedAssetDescription" class="control-label" style="min-width:100%;">Descripción</label>
                                                    <input asp-for="FixedAssetDescription" type="text" name="FixedAssetDescription" class="k-textbox" autocomplete="off" style="min-width:100%;" validationMessage="La Descripción es requerida" required />
                                                    <span asp-validation-for="FixedAssetDescription" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    <label asp-for="AssetDate" class="control-label" style="min-width:100%;">Fecha de Adquisición</label>
                                                    <kendo-datepicker name="AssetDate"
                                                                      value="Model.AssetDate"
                                                                      format="dd/MM/yyyy"
                                                                      style="min-width:96%;"
                                                                      data-val-required="La fecha es requerida" />
                                                    <span asp-validation-for="AssetDate" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    <label asp-for="FixedAssetGroupId" class="control-label" style="width:100%;">Grupo de Activo</label>
                                                    <kendo-dropdownlist name="FixedAssetGroupId"
                                                                        for="@Model.FixedAssetGroupId"
                                                                        filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                        option-label="Seleccionar Grupo"
                                                                        datatextfield="FixedAssetGroupName"
                                                                        datavaluefield="FixedAssetGroupId"
                                                                        data-val-required="El Grupo es requerido"
                                                                        style="width:100%;">
                                                        <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                                            <transport>
                                                                <read url="@Url.Action("Get", "FixedAssetGroup")" />
                                                            </transport>
                                                        </datasource>
                                                    </kendo-dropdownlist>
                                                    <span asp-validation-for="FixedAssetGroupId" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-3">


                                                <div class="form-group">
                                                    <label asp-for="BranchId" class="control-label" style="width:100%;">Sucursal</label>
                                                    <kendo-dropdownlist name="BranchId"
                                                                        for="@Model.BranchId"
                                                                        filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                        option-label="Seleccionar Sucursal"
                                                                        datatextfield="BranchName"
                                                                        onchange="RefreshCenterCost();"
                                                                        datavaluefield="BranchId"
                                                                        data-val-required="La Sucursal es requerida"
                                                                        style="width:100%;">
                                                        <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                                            <transport>
                                                                <read url="@Url.Action("GetBranch", "Branch")" />
                                                            </transport>
                                                        </datasource>
                                                    </kendo-dropdownlist>
                                                    <span asp-validation-for="BranchId" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    <label asp-for="CenterCostId" class="control-label" style="width:100%;">Centro Costo</label>
                                                    <kendo-dropdownlist name="CenterCostId"
                                                                        for="@Model.CenterCostId"
                                                                        filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                        option-label="Seleccionar Centro"
                                                                        datatextfield="CostCenterName"
                                                                        datavaluefield="CostCenterId"
                                                                        data-val-required="El Centro es requerido"
                                                                        style="width:100%;">
                                                        <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                                            <transport>
                                                                <read url="@Url.Action("GetCostCenterByBranchId", "CostCenter")" data="GetBranchId" />
                                                            </transport>
                                                        </datasource>
                                                    </kendo-dropdownlist>
                                                    <span asp-validation-for="CenterCostId" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-3">

                                                <div class="form-group">
                                                    <label asp-for="IdEstado" class="control-label"></label>
                                                    
                                                    <kendo-dropdownlist for="IdEstado" datatextfield="NombreEstado"
                                                                        datavaluefield="IdEstado" style="min-width:100%" enable="false"
                                                                        option-label="Seleccione Estado">
                                                        <datasource page-size="999" type="DataSourceTagHelperType.WebApi" server-operation="true">
                                                            <transport>
                                                                <read url="@Url.Action("GetporGrupoEstado","Estados",new { GrupoId = 6})" />
                                                            </transport>
                                                        </datasource>

                                                    </kendo-dropdownlist>
                                                    <span asp-validation-for="IdEstado" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="ResidualValuePercent" class="control-label" min="0" style="min-width:100%">Valor residual porcentaje</label>        
													<kendo-numerictextbox name="ResidualValuePercent"
                                                                          for="ResidualValuePercent" format="#.## '%'"
                                                                          min="0"
                                                                          decimals="2"
                                                                          onchange="Calculos()" id="ResidualValuePercent" onKeyPress="return soloNumeros(event)"
                                                                          style="min-width:94%" maxlength="3"
                                                                          data-val-required="El Valor residual porcentaje es requerido" />
                                                </div>
                                                
                                            </div>

                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="FixedActiveLife" class="control-label" style="min-width:100%;">Vida Útil</label>
                                                    <kendo-numerictextbox name="FixedActiveLife"
                                                                          for="FixedActiveLife" format="###"
                                                                          onchange="Calculos()"
                                                                          style="min-width:94%" min="0" maxlength="3"
                                                                          data-val-required="La Vida útil es requerida" />
                                                    <span asp-validation-for="FixedActiveLife" class="text-danger"></span>
                                                </div>
                                                
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="Amount" class="control-label" style="min-width:100%">Valor Adquisición</label>
                                                    <kendo-numerictextbox name="Amount"
                                                                          onchange="Calculos()"
                                                                          for="Amount" style="min-width:94%" min="0" data-val-required="EL Valor Adquisición es requerido" />
                                                    <span asp-validation-for="Amount" class="text-danger"></span>
                                                </div>
                                                
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="Cost" class="control-label" style="min-width:100%">Costos Adicionales</label>
                                                    <kendo-numerictextbox name="Cost"
                                                                          onchange="Calculos()"
                                                                          for="Cost" style="min-width:94%" min="0"
                                                                          data-validate="false" />
                                                </div>
                                                
                                                @*<span asp-validation-for="Cost" class="text-danger"></span>*@
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="ActiveTotalCost" class="control-label" style="min-width:100%">Costo Total Activo</label>
                                                    <input asp-for="ActiveTotalCost" class="k-textbox" name="ActiveTotalCost" id="ActiveTotalCost" readonly style="min-width:100%" />
                                                </div>
                                               
                                            </div>

                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="ResidualValue" class="control-label" style="min-width:100%">Valor Residual</label>
                                                    <input asp-for="ResidualValue" class="k-textbox" name="ResidualValue" id="ResidualValue" readonly style="min-width:100%" />
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">

                                                    <label asp-for="ToDepreciate" class="control-label" style="min-width:100%">Total a Depreciar</label>
                                                    <input asp-for="ToDepreciate" class="k-textbox" name="ToDepreciate" readonly style="min-width:100%" />
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">

                                                    <label asp-for="TotalDepreciated" class="control-label" style="min-width:100%">Depreciación Mensual</label>
                                                    <input asp-for="TotalDepreciated" class="k-textbox" name="TotalDepreciated" readonly style="min-width:100%" />
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <label class="control-label" style="min-width:100%; color:transparent"></label>
                                                <button id="btnFixedAsset" class="form-control btn-miboton" type="submit" onclick="SaveFixedAsset(this);"> Guardar </button>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
							
                            <div id="divDepreciationAssetFixed">
                                @await Html.PartialAsync("Depreciation.cshtml", Model, new ViewDataDictionary(ViewData) { { "permisosDepreciation", permisos } })                                
                            </div>
                            <div class="row">
                                <div class="col-md-10"></div>
                                <div class="col-md-2">
                                    <label asp-for="AccumulatedDepreciation" class="control-label" min="0" style="min-width:100%">Depreciación Acumulada</label>
                                    <input asp-for="AccumulatedDepreciation" class="k-textbox" readonly name="AccumulatedDepreciation" id="AccumulatedDepreciation" style="width:100%" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-10"></div>
                                <div class="col-md-2">
                                    <label asp-for="NetValue" class="control-label" style="min-width:100%">Valor en Libros</label>
                                    <input asp-for="NetValue" class="k-textbox" readonly name="NetValue" id="NetValue" style="width:100%" onchange="Calculos()" />
                                </div>
                            </div>
                            
                            <br />
                            
                            <br />

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
	$(document).ready(function () {
		$("#warning").hide();
	})

	//function onChangeVidaUtil() {
 //       $("#Amount").data("kendoNumericTextBox").value(null);
 //       $("#Cost").data("kendoNumericTextBox").value();
 //   }



    //function onChangeValorResidualPorcentaje() {
    //    //$("#Amount").data("kendoNumericTextBox").value(null);
    //    $("#Cost").data("kendoNumericTextBox").value();

   // }
    function soloNumeros(e) {
        var key = window.Event ? e.which : e.keyCode
        return (key >= 48 && key <= 57)
    }



    function SaveFixedAsset(e) {
        debugger;
        var notification = $("#notification").data("kendoNotification");
        $("#btnFixedAsset").show();
        $("#btnFixedAsset").prop("disabled", true);

		var group = $("#FixedAssetGroupId").data("kendoDropDownList");
		var branch = $("#BranchId").data("kendoDropDownList");
		//var warehouse = $("#WarehouseId").data("kendoDropDownList");
		var costCenter = $("#CenterCostId").data("kendoDropDownList");
		var estado = $("#IdEstado").data("kendoDropDownList");
        var fechaConvert = $("#AssetDate").getKendoDatePicker().value().toJSON()

		if ($('#FixedActiveLife').val() < 0 || $('#Amount').val() < 0 || $('#Cost').val() < 0) {
			alert("No se permiten valores negativos");
			return;
		}

		var dataObject =
		{
			'FixedAssetId': $('#FixedAssetId').val() === "" ? "0" : $("#FixedAssetId").val(),
			'FixedAssetName': $('#FixedAssetName').val(),
			'FixedAssetDescription': $('#FixedAssetDescription').val(),
			'FixedAssetCode': $('#FixedAssetCode').val(),
            'AssetDate': fechaConvert,
			'FixedAssetGroupId': group.value(),
			'FixedAssetCode': $('#FixedAssetCode').val(),
			'BranchId': branch.value(),
			'BranchName': branch.text(),
			//'WarehouseId': warehouse.value(),
			//'WarehouseName': warehouse.text(),
			'CenterCostId': costCenter.value(),
			'CenterCostName': costCenter.text(),
			'FixedActiveLife': $('#FixedActiveLife').val(),
			'Amount': $('#Amount').val(),
                'Cost': $('#Cost').val() === "" ? "0" : $("#Cost").val(),
            'ActiveTotalCost': $('#ActiveTotalCost').val(),
            'ResidualValuePercent': $('#ResidualValuePercent').val(),
            'NetValue': $('#NetValue').val() === "" ? "0" : $("#NetValue").val(),
            'ResidualValue': $('#ResidualValue').val(),
            'AccumulatedDepreciation': $('#AccumulatedDepreciation').val() === "" ? "0" : $("#AccumulatedDepreciation").val(),
			'ToDepreciate': $('#ToDepreciate').val(),
			'TotalDepreciated': $('#TotalDepreciated').val(),
			'IdEstado': estado.value(),
            'Estado': estado.text(),

		};

		var validator = $("#frmFixedAsset").data("kendoValidator");
		var status = $(".status");

		if (validator.validate()) {
			$.ajax({
				url: '@Url.Action("SaveFixedAsset", "FixedAsset")',
				method: "POST",
				dataType: 'json',
				contentType: 'application/json',
				async: false,
				data: JSON.stringify(dataObject),
				success: function (data) {
					$("#btnFixedAsset").show();
					$("#warning").show();
					SaveHistorial(data)
					$.toast({
                        heading: 'Satisfactorio',
                        text: 'Datos guardados correctamente.',
                        position: 'top-right',
                        loaderBg: '#ff6849',
                        icon: 'success',
                        hideAfter: 3000,
                        stack: 6
					});

					//$("#FixedAssetGroupId").data("kendoDropDownList").value(-1);
					//$("#BranchId").data("kendoDropDownList").value(-1);
					//$("#WarehouseId").data("kendoDropDownList").value(-1);
					//$("#CenterCostId").data("kendoDropDownList").value(-1);
					//$("#IdEstado").data("kendoDropDownList").value(-1);
					$('#ModalFixedAsset').modal('hide');
				},
				error: function (XMLHttpRequest, textStatus, errorThrown) {
					notification.show({
						title: "Validación",
						message: textStatus + ": " + XMLHttpRequest.responseText
					}, "error");
				}
			});
        }
        else {
			notification.show({
				title: "Validación",
				message: "Ingrese todos los datos en el formulario!"
            }, "error");
            $("#btnFixedAsset").show();
            $("#btnFixedAsset").prop("disabled", false);
            return false;
        }
        $("#btnFixedAsset").show();
        $("#btnFixedAsset").prop("disabled", true);
        $('#ModalFixedAsset').modal('hide');
        RefrescarGrid();

	}

    function RefreshCenterCost() {
        $("#CenterCostId").data("kendoDropDownList").dataSource.read();
		//$("#WarehouseId").data("kendoDropDownList").dataSource.read();
	}

	function GetBranchId() {
		return { 'BranchId': $("#BranchId").val() }
	}

	function GetFixedAssetId() {
		return { 'FixedAssetId': $("#FixedAssetId").val() }
	}

	function Calculos() {
		const formatter = new Intl.NumberFormat('en-US', {
			style: 'decimal',
			minimumFractionDigits: 2
		});
		const _porcentaje = 0.01;
        var _costoTotalActivo = $("#ActiveTotalCost").val();
		var _valorADepreciar = 0;
		var _depreciacionAnual = 0;
        var _totalDepreciacionMensual = 0;
        var _valorResidualPorcentaje = $("#ResidualValuePercent").val();
        var _valorResidual = 0;
        var _valorLibros = 0;
        var _AccumulatedDepreciation = $("#AccumulatedDepreciation").val();
        var _monto = $("#Amount").val();
        var _costosadicionales = $("#Cost").val() === "" ? "0" : $("#Cost").val();
        var _vidaUtil = $("#FixedActiveLife").val();


        // Costo total Activo = Valor adquisicion + Costos adicionales
        _costoTotalActivo = parseFloat(_monto) + parseFloat(_costosadicionales);
        $("#ActiveTotalCost").val(formatter.format(round(_costoTotalActivo, 2)));

        // Valor residual = Valor Residual Porcentaje * CostoTotalActivo
        _valorResidual = ((_valorResidualPorcentaje/100) * _costoTotalActivo);
        $("#ResidualValue").val(formatter.format(round(_valorResidual, 2)));

		// Depreciacion
        _valorADepreciar = (_costoTotalActivo - _valorResidual);
		$("#ToDepreciate").val(formatter.format(round(_valorADepreciar, 2)));

		// Total Depreciacion Anual
		_totalDepreciacionMensual = (_valorADepreciar / _vidaUtil);

		// Depreciacion Mensual
		_depreciacionAnual = (_totalDepreciacionMensual / 12);
        $("#TotalDepreciated").val(formatter.format(round(_depreciacionAnual, 2)));

        // Valor en Libros
        _valorLibros = (_costoTotalActivo - _AccumulatedDepreciation);
        $("#NetValue").val(formatter.format(round(_valorLibros, 2)));
	}

    @*function SaveHistorial(_data) {
        debugger
		var _fechaInicial;
		var _fechaInicialConvert;
		var _fechaActual = new Date();
		var _id = 0;
		var _vidaUtil = 0;
		var _anioInicio = 0;
		var _mesInicio = 0;
		var _diaInicio = 0;
		var _anioActual = 0;
		var anioVencimiento = 0;
		var _sumaAnios = 0;
		var monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
			'July', 'August', 'September', 'October', 'November', 'December'];
        var dif = 0;
		var _sumaTotal = 0;
		var _valorAcumulado = 0;
		var _totalDepreciated = 0;
		var dataObject;

		if (_data.FixedAssetId !== 0) {
			_id = _data.FixedAssetId;
		} else {
			_id = $('#FixedAssetId').val();
		}

		//_fechaInicial = $("#AssetDate").getKendoDateTimePicker().value().toJSON()
		//_vidaUtil = parseInt($('#FixedActiveLife').val(), 10);
		//_totalDepreciated = parseFloat($('#TotalDepreciated').val());

        if (_data.FixedAssetId !== 0) {
            debugger;
			_fechaInicial = _data.AssetDate;
			_vidaUtil = _data.FixedActiveLife;
			_totalDepreciated = _data.TotalDepreciated;
        }
        else {
            _fechaInicial = $("#AssetDate").getKendoDatePicker().value().toJSON();
			_vidaUtil = parseInt($('#FixedActiveLife').val(), 10);
			_totalDepreciated = parseFloat($('#TotalDepreciated').val());
		}

		_fechaInicialConvert = new Date(_fechaInicial);
		_anioInicio = _fechaInicialConvert.getFullYear();
		_mesInicio = _fechaInicialConvert.getMonth();
        _diaInicio = _fechaInicialConvert.getDate();
		_anioActual = _fechaActual.getFullYear();
		anioVencimiento = _fechaInicialConvert.getFullYear() + _vidaUtil;
		_sumaAnios = (_anioInicio + _vidaUtil);

		if (_id !== "0") {
			DeleteDepreciateFixedAsset(_id);
		}

		if ((_anioActual < _sumaAnios) && (_mesInicio == 0)) {
			dif = (_anioActual - _anioInicio);
			for (var i = 0; i <= dif; i++) {
				_sumaTotal = (_totalDepreciated * 12);
				dataObject =
					{
						'FixedAssetId': _id,
						'Year': (_anioInicio + i),
						'January': _totalDepreciated,
						'February': _totalDepreciated,
						'March': _totalDepreciated,
						'April': _totalDepreciated,
						'May': _totalDepreciated,
						'June': _totalDepreciated,
						'July': _totalDepreciated,
						'August': _totalDepreciated,
						'September': _totalDepreciated,
						'October': _totalDepreciated,
						'November': _totalDepreciated,
						'December': _totalDepreciated,
						'TotalDepreciated': _sumaTotal,
					};
				$.ajax({
					url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
					method: "POST",
					dataType: 'json',
					contentType: 'application/json',
					async: false,
					data: JSON.stringify(dataObject),
                    success: function () {
                        $('#ModalFixedAsset').modal('hide');
					},
					error: function (XMLHttpRequest, textStatus, errorThrown) {
						notification.show({
							title: "Validación",
							message: textStatus + ": " + XMLHttpRequest.responseText
						}, "error");
					}
				});
			}

		} else {
			_valorAcumulado = _totalDepreciated * (12 - _mesInicio);
			if (_fechaInicialConvert.getDate() == 1) {
			/**Paso 1 --> Llenar los meses del primer año del registro */
				dataObject = {
					'FixedAssetId': _id,
					'Year': _anioInicio,
					'TotalDepreciated': _valorAcumulado,
				};
				for (var i = _mesInicio; i <= 11; i++) {
					_valorAcumulado = (_valorAcumulado + _totalDepreciated);
					Object.defineProperty(dataObject, monthNames[i], {
						value: _totalDepreciated,
						writable: true,
						enumerable: true,
						configurable: true
					});
				}
				$.ajax({
					url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
					method: "POST",
					dataType: 'json',
					contentType: 'application/json',
					async: false,
					data: JSON.stringify(dataObject),
                    success: function () {
                        $('#ModalFixedAsset').modal('hide');
					},
					error: function (XMLHttpRequest, textStatus, errorThrown) {
						notification.show({
							title: "Validación",
							message: textStatus + ": " + XMLHttpRequest.responseText
						}, "error");
					}
				});
				/**Paso 2 --> Llenar todos los años de vida útil comenzando un año despues */
				dif = (_anioActual - _anioInicio);
				for (var i = 1; i <= dif; i++) {
					_sumaTotal = (_totalDepreciated * 12);
					dataObject = {
						'FixedAssetId': _id,
						'Year': (_anioInicio + i),
						'January': _totalDepreciated,
						'February': _totalDepreciated,
						'March': _totalDepreciated,
						'April': _totalDepreciated,
						'May': _totalDepreciated,
						'June': _totalDepreciated,
						'July': _totalDepreciated,
						'August': _totalDepreciated,
						'September': _totalDepreciated,
						'October': _totalDepreciated,
						'November': _totalDepreciated,
						'December': _totalDepreciated,
						'TotalDepreciated': _sumaTotal,
					};
					$.ajax({
						url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
						method: "POST",
						dataType: 'json',
						contentType: 'application/json',
						async: false,
						data: JSON.stringify(dataObject),
                        success: function () {
                            $('#ModalFixedAsset').modal('hide');
						},
						error: function (XMLHttpRequest, textStatus, errorThrown) {
							notification.show({
								title: "Validación",
								message: textStatus + ": " + XMLHttpRequest.responseText
							}, "error");
						}
					});
				}
			/**Paso 3 --> Llenar los meses del año que termina */
				if (_anioActual == _sumaAnios) {
					_sumaTotal = (_totalDepreciated * _mesInicio);
					dataObject = {
						'FixedAssetId': _id,
						'Year': anioVencimiento,
						'TotalDepreciated': _sumaTotal,
					}
					for (var i = 0; i <= (_mesInicio - 1); i++) {
						Object.defineProperty(dataObject, monthNames[i], {
							value: _totalDepreciated,
							writable: true,
							enumerable: true,
							configurable: true
						});
					}
					$.ajax({
						url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
						method: "POST",
						dataType: 'json',
						contentType: 'application/json',
						async: false,
						data: JSON.stringify(dataObject),
                        success: function () {
                            $('#ModalFixedAsset').modal('hide');
						},
						error: function (XMLHttpRequest, textStatus, errorThrown) {
							notification.show({
								title: "Validación",
								message: textStatus + ": " + XMLHttpRequest.responseText
							}, "error");
						}
					});
				}
			} else {
			/**Paso 1 --> Llenar los meses del primer año del registro */
				_valorAcumulado = _totalDepreciated * (11 - _mesInicio);
				dataObject = {
					'FixedAssetId': _id,
					'Year': _anioInicio,
					'TotalDepreciated': _valorAcumulado,
				}
				for (var i = _mesInicio + 1; i <= 11; i++) {
					_valorAcumulado = (_valorAcumulado + _totalDepreciated);
					Object.defineProperty(dataObject, monthNames[i], {
						value: _totalDepreciated,
						writable: true,
						enumerable: true,
						configurable: true
					});
				}
				$.ajax({
					url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
					method: "POST",
					dataType: 'json',
					contentType: 'application/json',
					async: false,
					data: JSON.stringify(dataObject),
					success: function () {
                        $('#ModalFixedAsset').modal('hide');
					},
					error: function (XMLHttpRequest, textStatus, errorThrown) {
						notification.show({
							title: "Validación",
							message: textStatus + ": " + XMLHttpRequest.responseText
						}, "error");
					}
				});
				/**Paso 2 --> llenar todos los años de vida util comezando un año despues */
				dif = (_anioActual - _anioInicio);
				for (var i = 1; i <= dif; i++) {
					_sumaTotal = (_totalDepreciated * 12);
					dataObject = {
						'FixedAssetId': _id,
						'Year': (_anioInicio + i),
						'January': _totalDepreciated,
						'February': _totalDepreciated,
						'March': _totalDepreciated,
						'April': _totalDepreciated,
						'May': _totalDepreciated,
						'June': _totalDepreciated,
						'July': _totalDepreciated,
						'August': _totalDepreciated,
						'September': _totalDepreciated,
						'October': _totalDepreciated,
						'November': _totalDepreciated,
						'December': _totalDepreciated,
						'TotalDepreciated': _sumaTotal,
					};
					$.ajax({
						url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
						method: "POST",
						dataType: 'json',
						contentType: 'application/json',
						async: false,
						data: JSON.stringify(dataObject),
                        success: function () {
                            $('#ModalFixedAsset').modal('hide');
						},
						error: function (XMLHttpRequest, textStatus, errorThrown) {
							notification.show({
								title: "Validación",
								message: textStatus + ": " + XMLHttpRequest.responseText
							}, "error");
						}
					});
				}
			/**Paso 3 --> Llenar los meses del año que termina */
				if (_anioActual == _sumaAnios)
				{
					_sumaTotal = (_totalDepreciated * _mesInicio);
					dataObject = {
						'FixedAssetId': _id,
						'Year': _anioInicio,
						'TotalDepreciated': _sumaTotal,
					};
					for (var i = 0; i <= _mesInicio; i++) {
						Object.defineProperty(dataObject, monthNames[i], {
							value: _totalDepreciated,
							writable: true,
							enumerable: true,
							configurable: true
						});
					}
					$.ajax({
						url: '@Url.Action("SaveDepreciationFixedAsset", "DepreciationFixedAsset")',
						method: "POST",
						dataType: 'json',
						contentType: 'application/json',
						async: false,
						data: JSON.stringify(dataObject),
                        success: function () {
                            $('#ModalFixedAsset').modal('hide');
						},
						error: function (XMLHttpRequest, textStatus, errorThrown) {
							notification.show({
								title: "Validación",
								message: textStatus + ": " + XMLHttpRequest.responseText
							}, "error");
						}
					});
				}
			}
		}
	}*@

	function DeleteDepreciateFixedAsset(_id) {
		var dataObject =
		{
			'FixedAssetId': _id
		};
		$.ajax({
			url: '@Url.Action("DeleteAll", "DepreciationFixedAsset")',
			method: "POST",
			dataType: 'json',
			contentType: 'application/json',
			async: false,
			data: JSON.stringify(dataObject),
			success: function () {
			},
			error: function (XMLHttpRequest, textStatus, errorThrown) {
				notification.show({
					title: "Validación",
					message: textStatus + ": " + XMLHttpRequest.responseText
				}, "error");
			}
		});
	}

	function round(value, decimals) {
		return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);
	}
</script>
