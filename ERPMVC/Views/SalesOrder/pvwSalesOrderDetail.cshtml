@model ERPMVC.DTO.SalesOrderDTO



<script>


        function GetSalesOrderId() {
            return {
                SalesOrderId: @Model.SalesOrderId,
            /*ProductId: $("#ProductId").val(),*/
                SubProductId: $("#SubProductId").val(),
                SubProductName: $("#subproductname").val(),
                Quantity: $("#Quantity").val(),
                Price: $("#Price").val(),
                Amount: $("#AmountLine").val(),
                DiscountPercentage: $("#DiscountPercentage").val(),
                DiscountAmount: $("#DiscountAmount").val(),
                SubTotal: $("#SubTotalLine").val(),
                TaxPercentage: $("#TaxPercentage").val(),
                TaxCode: $("#TaxCode").val(),
                TaxAmount: $("#TaxAmount").val(),
                Total: $("#TotalLine").val(),
            }
        }

    function RefreshCotizacionesDetail() {
        var grid = $("#gridCotizacionesDetail").getKendoGrid();
        grid.dataSource.read();
    }


    function AddCotizacionDetalle() {
        var notification = $("#notification").data("kendoNotification");
        if ($("#ProductId").val() !== '') {

            llenarsubproduct();

            $('#myModalSalesOrderLine').modal('show');
        } else {
            var notification = $("#notification").data("kendoNotification");
            notification.show({
                title: "Validacion",
                message: "Debe seleccionar un producto!"
            }, "error");

        }

    }

    function llenarsubproduct() {
           var combobox = $('#SubProductId').getKendoComboBox();

            var dataObject = { 'ProductId': $("#ProductId").val() };
              $.ajax({
                    url: '@Url.Action("GetSubProductByProductId", "ProductRelation")',
                    method: 'GET',
                    datatype: "json",
                    contentType: 'application/json',
                    async: false,
                    data: dataObject,
                    success: function (data) {
                        combobox.setDataSource(data);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                      //  $("#btngenerarfactura").show();
                        notification.show({
                            title: "Validacion",
                            message: textStatus + ": " + XMLHttpRequest.responseText
                        }, "error");

                    }
                });
    }

    function EditCotizacionDetalle(e) {
     
        e.preventDefault();
        var notification = $("#notification").data("kendoNotification");
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        var subproducto = 0;
        var dataObject = { 'SalesOrderLineId': dataItem.SalesOrderLineId };
              $.ajax({
                    url: '@Url.Action("pvwSalesOrderDetailMant", "SalesOrderLine")',
                    method: 'POST',
                    datatype: "json",
                    contentType: 'application/json',
                    async: false,
                    data: JSON.stringify(dataObject),
                    success: function (data) {
                      $("#SalesOrderLineMant").html('');
                        $("#SalesOrderLineMant").html(data);
                        var txt = $(data);
                        var found = $("#SubProductId", txt);
                        subproducto = $(found).val();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                      //  $("#btngenerarfactura").show();
                        notification.show({
                            title: "Validacion",
                            message: textStatus + ": " + XMLHttpRequest.responseText
                        }, "error");

                    }
              });


     
        $("#frmSalesOrderLine :input").prop("disabled", true);
        llenarsubproduct();
        var combobox = $('#SubProductId').getKendoComboBox();
        combobox.value(subproducto);
        combobox.trigger('change');      
        $('#myModalSalesOrderLine').modal('show');
       
    }
</script>



<div class="box">
    <div class="box-body">

        @(Html.Kendo().Grid<ERPMVC.Models.SalesOrderLine>()
                                          .Name("gridCotizacionesDetail")
                                          .Columns(columns =>
                                          {
                                              columns.Command(command =>
                                              {
                                                  command.Custom("Editar").Click("EditCotizacionDetalle");
                                                  // command.Custom("Imprimir").Click("ImprimirCotizacion");
                                                  //  command.Edit(); command.Destroy();
                                              }).Width(250);

                                              columns.Bound(p => p.SalesOrderLineId).Title("Id Line").Width(150);
                                              columns.Bound(p => p.SalesOrderId).Title("Order Id").Width(150);
                                              columns.Bound(p => p.SubProductId).Title("Producto");
                                              columns.Bound(p => p.SubProductName).Title("Producto").Width(150);
                                              columns.Bound(p => p.Quantity).Title("Cantidad").Width(150);
                                              columns.Bound(p => p.Price).Title("Precio").Width(150);
                                              //  columns.Bound(p => p.TaxPercentage).Title("Porcentaje impuestos").Width(150);
                                              columns.Bound(p => p.SubTotal).Title("Sub Total").Width(150);
                                              columns.Bound(p => p.DiscountAmount).Title("Descuentos").Width(150);
                                              columns.Bound(p => p.TaxCode).Title("Tipo Impuesto").Width(150);
                                             // columns.Bound(p => p.tax).Title("Tipo Impuesto").Width(150);
                                              columns.Bound(p => p.TaxAmount).Title("Impuestos").Width(150);
                                              columns.Bound(p => p.Total).Title("Total").Width(150);

                                          })
                                          .ToolBar(tools =>
                                          {
                                              if (Model.editar == 1)
                                              {
                                                  tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus")
                                                  .HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "AddCotizacionDetalle();" });
                                              }

                                              tools.Excel().HtmlAttributes(new { @class = "toolbar-field" });
                                              tools.Pdf().HtmlAttributes(new { @class = "toolbar-field" });


                                          })
                                           .Editable(e => e.Mode(GridEditMode.PopUp))
                                            .Sortable()
                                            .AutoBind(true)
                                            .Pageable()
                                            .Filterable()
                                            .Scrollable()
                                            // .ClientDetailTemplateId("template")
                                            .Pdf(pdf => pdf.FileName("CotizacionDetalleReport" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                            + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
                                            .ProxyURL(Url.Action("Export", "Home")).AllPages())
                                              .Excel(excel => excel.FileName("CotizacionDetalleReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                                            + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
                                            .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
                                            //.Events(e=>e.Save("onsave"))
                                            .DataSource(dataSource =>

                                           dataSource
                                           //.Ajax()
                                           .WebApi()

                                            .ServerOperation(true)
                                            .Model(model =>
                                            {
                                                model.Id(p => p.SalesOrderLineId);
                                                model.Field(p => p.SalesOrderLineId).Editable(false);
                                                model.Field(p => p.SalesOrderId).Editable(false);

                                            })
                                            .Events(events =>
                                            {
                                                events.Error("error_handler");
                                                //events.upda("EditHandler");

                                            })
                                            .Read(read => read.Action("GetSalesOrderLine", "SalesOrderLine").Data("GetSalesOrderId"))
                                            .Create(create => create.Action("Insert", "SalesOrderLine"))
                                      //.Update(update => update.Action("Update", "SalesOrderLine", new { SalesOrderLineId = "{0}" }))
                                      //.Destroy(destroy => destroy.Action("Delete", "SalesOrderLine", new { SalesOrderLineId = "{0}" }))
                                      )
        )

    </div>
</div>


<script>

</script>