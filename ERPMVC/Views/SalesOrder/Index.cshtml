<script>
    function AddCotizacion() {
       $('#myModal').modal('show');
    }
</script>

@(Html.Kendo().Grid<ERPMVC.Models.SalesOrder>()
                  .Name("gridCotizaciones")
                  .Columns(columns =>
                  {
                      columns.Bound(p => p.SalesOrderId).Title("Fecha Cotizacion").Width(150);  
                      columns.Bound(p => p.OrderDate).Title("Fecha Cotizacion").Width(150);
                      columns.Bound(p => p.CustomerId).Title("Customer").Width(150);                      
                      columns.Bound(p => p.CustomerRefNumber).Title("Codigo referencia").Width(150);  
                      columns.Bound(p => p.Discount).Title("Descuentos").Width(150);
                      columns.Bound(p => p.BranchId).Title("Branch Id").Width(150);                     
                      columns.Bound(p => p.Freight).Title("Flete").Width(150);
                      columns.Bound(p => p.SubTotal).Title("Sub Total").Width(150);
                      columns.Bound(p => p.Tax).Title("Total Impuesto").Width(150);
                      columns.Bound(p => p.Total).Title("Total").Width(150);
                  })
                  .ToolBar(tools =>
                  {
                       //tools.Create();
                     tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus")
                  .HtmlAttributes(new { @class="k-i-plus-sm", onclick = "AddCotizacion();" });

                      tools.Excel().HtmlAttributes(new { @class = "toolbar-field" });
                      tools.Pdf().HtmlAttributes(new { @class = "toolbar-field" });


                  })
                   .Editable(e => e.Mode(GridEditMode.PopUp))
                    .Sortable()
                    .AutoBind(true)
                    .Pageable()
                    .Filterable()
                    .Scrollable()
                   // .ClientDetailTemplateId("template")
                    .Pdf(pdf => pdf.FileName("CotizacionReport" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                    + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
                    .ProxyURL(Url.Action("Export", "Home")).AllPages())
                      .Excel(excel => excel.FileName("CotizacionReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
                    + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
                    .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
                    //.Events(e=>e.Save("onsave"))
                    .DataSource(dataSource =>

                   dataSource
                   //.Ajax()
                   .WebApi()
                    .ServerOperation(true)
                    .Model(model =>
                    {
                        model.Id(p => p.SalesOrderId);
                        model.Field(p => p.SalesOrderId).Editable(true);
                        model.Field(p => p.SalesOrderId).Editable(true);


                    })
                    .Events(events => {
                        events.Error("error_handler");
                        //events.upda("EditHandler");

                    })
                    .Read(read => read.Action("GetSalesOrder", "SalesOrder"))
                    .Create(create => create.Action("Insert", "SalesOrder"))
                    .Update(update => update.Action("Update", "SalesOrder", new { id = "{0}" }))
                    .Destroy(destroy => destroy.Action("Delete", "SalesOrder", new { id = "{0}" }))
              )
    )



@await Html.PartialAsync("pvwSalesOrder", new ERPMVC.Models.SalesOrder { SalesOrderId=0 , OrderDate=DateTime.Now   })