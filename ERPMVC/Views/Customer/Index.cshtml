@using Kendo.Mvc.UI

@{
    ViewData["Title"] = "Home Page";
}

<script>



    function Detalles(e) {          
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = "@Url.Action("Details", "Customer")?CustomerId=" + dataItem.CustomerId;    
    }
</script>


@(Html.Kendo().Grid<ERPMVC.Models.Customer>()
              .Name("grid")
              .Columns(columns =>
              {
                  columns.Bound(p => p.CustomerId).Width(100);
                  columns.Bound(p => p.CustomerName).Width(150);
                  columns.Bound(p => p.CustomerTypeId).Width(100);
                  columns.Bound(p => p.Identidad).Width(100);
                  columns.Bound(p => p.ContactPerson).Width(100);
                  columns.Bound(p => p.RTN).Width(100);
                  columns.Command(command => {
                       command.Custom("Ver detalles").Click("Detalles");
                       command.Edit(); command.Destroy(); }).Width(250);

              })
              .ToolBar(tools =>
              {
                  tools.Create();
                  tools.Excel().HtmlAttributes(new { @class = "toolbar-field" });
                  tools.Pdf().HtmlAttributes(new { @class = "toolbar-field" });
                 

              })
              .Editable(e=>e.Mode(GridEditMode.InLine))
              .Sortable()
              .Pageable()
              .Filterable()
              .Scrollable()
              .Pdf(pdf => pdf.FileName("ClienteReport" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
               + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
               .ProxyURL(Url.Action("Export", "Home")).AllPages())
                 .Excel(excel => excel.FileName("ClienteReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
               + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
               .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
              .DataSource(dataSource =>
                  dataSource
                    .WebApi()
                    .ServerOperation(true)
                    .Model(model =>
                    {
                        model.Id(p => p.CustomerId);
                        model.Field(p => p.CustomerId).Editable(false);
                    })
                    .Events(events => events.Error("error_handler"))
                    .Read(read => read.Action("Get", "Customer"))
                    .Create(create => create.Action("Post", "Customer"))
                    .Update(update => update.Action("Put", "Customer", new { id = "{0}" }))
                    .Destroy(destroy => destroy.Action("Delete", "Customer", new { id = "{0}" }))
              )
)

@*<div>
    @(Html.Kendo().PanelBar()
                    .Name("IntroPanelBar")
                    .Items(items =>
                    {
                        items.Add()
                            .Text("Grafica de ventas")
                            .Selected(true)
                            .Expanded(true)
                            .Content(@<text>
                                <p style="padding:1em 2em">
                                    Learn how to build ASP.NET apps that can run anywhere.
                                    <a target="_blank" href="http://go.microsoft.com/fwlink/?LinkID=525028&clcid=0x409">Learn More</a>
                                </p>
                            </text>);
                                items.Add()
                                    .Text("Conceptos ERP")
                                    .Content(@<text>
                                        <p style="padding:1em 2em">
                                            There are powerful new features in Visual Studio for building modern web apps.
                                            <a target="_blank" href="http://go.microsoft.com/fwlink/?LinkID=525030&clcid=0x409">Learn More</a>
                                        </p>
                                    </text>);
                                                                items.Add()
                                                        .Text("Contactenos")
                                                        .Content(@<text>
                                                            <p style="padding:1em 2em">
                                                                Bring in libraries from NuGet, Bower, and npm, and automate tasks using Grunt or Gulp.
                                                                <a target="_blank" href="http://go.microsoft.com/fwlink/?LinkID=525029&clcid=0x409">Learn More</a>
                                                            </p>
                                                        </text>);
                                                                                })
    )


</div>*@
