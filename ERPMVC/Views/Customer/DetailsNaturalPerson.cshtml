@using ERPMVC.Models.Clientes
@model ERPMVC.Models.Customer
@{
    var messages = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." },
                               { "required","Valor requerido" }};

    var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
}

@{
    ViewData["Title"] = "Clientes";
}


<script>
    function RefreshGridEstibas() {
        debugger
        var grid = $("#tabDetalleCliente").getKendoGrid();
        grid.dataSource.read();
    }


    function customFunction(input) {

        if (input.attr('name') === "BranchId" && input.val() === "0") {
            return false;
        }

    }


    function GetCustomerId() {
        return { CustomerId: $("#CustomerId").val() }
    }

    function BackIndex() {
        window.location.href = '@Url.Action("Index","Customer")'
    }
</script>

<div id="divPEPSFind">
    @await Html.PartialAsync("~/Views/PEPS/PEPSFind.cshtml")
</div>

<div id="divBlackListFind">
    @await Html.PartialAsync("~/Views/BlackListCustomers/BlackListFind.cshtml")
</div>

<div id="divONULISTFind">
    @await Html.PartialAsync("~/Views/ONU/ONULISTFind.cshtml")
</div>

<div id="divOFACFind">
    @await Html.PartialAsync("~/Views/OFAC/Index.cshtml")
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <button type="button" class="close" onclick="BackIndex()">&times;</button>
                    <h1 class="my-0 font-weight-normal" style="color:white">Cliente</h1>
                </div>
                <div class="card-body">
                    <br />

                    <form id="frmCustomer" kendo-validator="true"
                          data-ajax="true"
                          data-ajax-method="post" 
                          onload="cargaInicialCargosPublicos()">

                        <div class="row">
                            <div class="col-md-4">
                                <label asp-for="CustomerTypeId" class="control-label" style="width: 100%;"></label>
                                <kendo-dropdownlist name="CustomerTypeId"
                                                    for="@Model.CustomerTypeId"
                                                    filter="Kendo.Mvc.UI.FilterType.Contains"
                                                    option-label="Seleccionar el tipo de cliente"
                                                    deshabilitar="Cliente"
                                                    datatextfield="CustomerTypeName"
                                                    datavaluefield="CustomerTypeId"
                                                    data-val-required="El tipo de cliente es requerido"
                                                    auto-bind="true"
                                                    enable=false
                                                    style="width: 100%;">
                                    <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                        <transport>
                                            <read url="@Url.Action("GetActivos", "CustomerType")" />
                                        </transport>
                                    </datasource>
                                </kendo-dropdownlist>
                                <span asp-validation-for="CustomerTypeId" class="text-danger"></span>
                            </div>

                            <div class="col-md-4 ">
                                <div class="form-group">
                                    <label asp-for="CustomerId" class="control-label" style="width: 100%;"></label>
                                    <input type="text" id="CustomerId" disabled required class="k-text" style="min-width:100%;" asp-for="CustomerId" />
                                </div>
                            </div>
                             <div class=" col-md-4">
                                <div class="form-group">
                                    <label asp-for="RTN" class="control-label" style="width: 100%;"></label>
                                    <input type="text" id="RTN" required onKeyPress="return SoloNumeros(event)" class="k-text" style="min-width:100%;" asp-for="RTN" />
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label", style = "min-width:100%" })*@
                                    <label asp-for="CustomerName" class="control-label" style="width: 100%;">Nombre de cliente</label>
                                    <input type="text" id="CustomerName" deshabilitar="Cliente" data-val-required="El cliente es requerido" required class="k-text" style="min-width:100%;" asp-for="CustomerName" />

                                </div>
                            </div>

                             <div class=" col-md-4">
                                <div class="form-group">
                                    <label asp-for="ProfesionOficio" class="control-label" style="width: 100%;">Profesión u Oficio</label>
                                    <input type="text" id="ProfesionOficio" deshabilitar="Cliente" data-val-required="Profesión u Oficio es requerido" class="k-text" style="min-width:100%;" asp-for="ProfesionOficio" />

                                </div>
                            </div>

                            <div class=" col-md-4">
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label", style = "width:100%" })
                                        @(Html.Kendo().TextBoxFor(model => model.Phone)
                                                          //  .HtmlAttributes(new { style = "min-width:100%" })
                                                            .Enable(true)
                                        )*@
                                    <label asp-for="Phone" class="control-label" style="width: 100%;"></label>
                                    <input type="text" id="Phone" deshabilitar="Cliente" data-val-required="El télefono es requerido" onKeyPress="return SoloNumeros(event)" maxlength="12" class="k-text" style="min-width:100%;" asp-for="Phone" />
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <label asp-for="Email" class="control-label" style="width: 100%;"></label>
                                <input type="email" id="Email" deshabilitar="Cliente" data-email-msg="Formato del Correo no valido"  class="k-text" style="min-width:100%;" asp-for="Email" />
                            </div>

                            <div class=" col-md-4">
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label", style = "min-width:100%" })
                                        @(Html.Kendo().TextBoxFor(model => model.ZipCode)
                                                                                    // .HtmlAttributes(new { style = "min-width:100%" })
                                                                                    .Enable(true)
                                        )*@
                                    <label asp-for="LugarNacimiento" class="control-label" style="width: 100%;">Lugar de Nacimiento</label>
                                    <input type="text" id="LugarNacimiento" deshabilitar="Cliente" data-val-required="Lugar de Nacimiento es requerido" class="form-control" style="min-width:100%;" asp-for="LugarNacimiento" />
                                </div>
                            </div>

                             <div class=" col-md-4">
                                <div class="form-group">
                                    <div>
                                        <label asp-for="FechaNacimiento" class="control-label" style="width: 100%;">Fecha de Nacimiento</label>
                                        <kendo-datepicker name="FechaNacimiento"
                                                              style="width: 100%;"
                                                              format="dd/MM/yyyy"
                                                              required data-required-msg="Fecha de Nacimiento es requerido"
                                                              value="Model.FechaNacimiento"
                                                              for="FechaNacimiento"
                                                              id="FechaNacimiento">
                                        </kendo-datepicker>
                                        <span asp-validation-for="FechaNacimiento" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class=" col-md-4">
                                <div class="form-group">
                                    <label asp-for="Edad" class="control-label" style="width: 100%;">Edad</label>
                                    <kendo-numerictextbox name="Edad"
                                                          min="0"
                                                          max="99"
                                                          format="n0"
                                                          data-val-required="Edad es requerida"
                                                          step="1"
                                                          style="width: 100%;"
                                                          for="Edad"/>
                                    <span asp-validation-for="Edad" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="Nacionalidad" class="control-label" style="width: 100%;">Nacionalidad</label>
                                    <input type="text" id="Nacionalidad" deshabilitar="Cliente" data-val-required="La Nacionalidad de contacto es requerida" class="form-control" style="min-width:100%;" asp-for="Nacionalidad" />
                                </div>
                            </div>

                            <div class=" col-md-4">
                                <div class="form-group">
                                    <label asp-for="EstadoCivil" class="control-label" style="width: 100%;">Estado Civil</label>
                                    @Html.DropDownList(
                                        "EstadoCivil",
                                        Html.GetEnumSelectList<EstadoCivilEnum>(),
                                        "Seleccione Estado Civil",
                                        new {@class = "form-control", @id = "EstadoCivil"}    
                                    )
                                    <span asp-validation-for="EstadoCivil" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                             <div class=" col-md-12">
                                <div class="form-group">
                                    <label asp-for="Address" class="control-label" style="width: 100%;"></label>
                                    <input type="text" id="Address"  deshabilitar="Cliente" data-val-required="La dirección es requerida" rows="5" class="form-control" style="min-width:100%;height:50px;" asp-for="Address" />
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class=" col-md-8">
                                <div class="form-group">
                                    <label asp-for="GiroActividadNegocio" class="control-label" style="width: 100%;">Giro o Actividad del Negocio</label>
                                    <input type="text" id="GiroActividadNegocio"  deshabilitar="Cliente"  class="form-control" style="min-width:100%;" asp-for="GiroActividadNegocio" />
                                </div>
                            </div>

                            <div class=" col-md-4">
                                <div class="form-group">
                                    <label asp-for="MontoIngresosAnuales" class="control-label" style="width: 100%;">Ingresos Mensuales</label>
                                    @*<input type="number" id="MontoIngresosAnuales" deshabilitar="Cliente" required class="form-control" style="min-width:100%;" asp-for="MontoIngresosAnuales" />*@
                                    <kendo-numerictextbox name="MontoIngresosAnuales"
                                                          format="n2"
                                                          min="0"
                                                          data-val-required="El ingreso mensual es requerido"
                                                          max="99999999"
                                                          step="1"
                                                          style="width: 100%;"
                                                          value="Model.MontoIngresosAnuales"/>
                                    <span asp-validation-for="MontoIngresosAnuales" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <label asp-for="CargosPublicos" class="control-label" style="width: 100%;">Cargos Publicos</label>
                                <kendo-switch checked="Model.CargosPublicos" 
                                                name="CargosPublicos"  
                                                for="CargosPublicos"                                             
                                                on-change="onChangeCargosPublicos"
                                                id="CargosPublicos">
                                    <messages checked="Si" unchecked="No" />
                                </kendo-switch>
                            </div>
                        </div>

                        <br/>

                        <script>
                            $( document ).ready(function() {
                                onChangeCargosPublicos();
                            });
                            function onChangeCargosPublicos(e) {
                                debugger;
                                if($("#CargosPublicos").is(':checked')){
                                    $("#row-cargos-publicos").show();
                                }else{
                                    $("#row-cargos-publicos").hide();
                                }
                            }
                        </script>

                        <div id="row-cargos-publicos" class="row" >
                            <br/>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label asp-for="Familiares" class="control-label" style="width: 100%;">Familiares</label>
                                    <input type="text" id="Familiares" class="form-control" style="min-width:100%;" asp-for="Familiares" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label asp-for="Conyugue" class="control-label" style="width: 100%;">Conyugue</label>
                                    <input type="text" id="Conyugue" class="form-control" style="min-width:100%;" asp-for="Conyugue" />
                                </div>
                            </div>
                            <br/>
                        </div>

                        <div class="row">
                            <div class="col-md-8">
                                <div class="form-group">
                                    <label asp-for="PerteneceEmpresa" class="control-label" style="width: 100%;">Beneficiario Final del Articulo Almacenado</label>
                                    <input type="text" id="PerteneceEmpresa" deshabilitar="Cliente" data-val-required="Beneficiario Final del Articulo Almacenado es requerido" class="form-control" style="min-width:100%;" asp-for="PerteneceEmpresa" />
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="IdEstado" class="control-label"></label>
                                    <kendo-dropdownlist name="IdEstadoCliente" style="width:100%;"
                                                        deshabilitar="Cliente"
                                                        for="IdEstado"
                                                        id="IdEstadoCliente"
                                                        filter="Kendo.Mvc.UI.FilterType.Contains"
                                                        datatextfield="NombreEstado"
                                                        datavaluefield="IdEstado">
                                        <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                            <transport>
                                                <read url="@Url.Action("GetGrupoEstadoUno", "Estados")" />
                                            </transport>
                                        </datasource>
                                    </kendo-dropdownlist>
                                </div>
                            </div>
                        </div>

                         <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="NombreEmpresaPN" class="control-label" style="width: 100%;">Nombre Empresa</label>
                                    <input type="text" id="NombreEmpresaPN" deshabilitar="Cliente"  class="form-control" style="min-width:100%;" asp-for="NombreEmpresaPN" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="TelefonoEmpresaPN" class="control-label" style="width: 100%;">Télefono Empresa</label>
                                    <input type="text" id="TelefonoEmpresaPN" deshabilitar="Cliente" class="form-control" style="min-width:100%;" asp-for="TelefonoEmpresaPN" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="DireccionEmpresaPN" class="control-label" style="width: 100%;">Direccion Empresa</label>
                                    <input type="text" id="DireccionEmpresaPN" deshabilitar="Cliente"  class="form-control" style="min-width:100%;" asp-for="DireccionEmpresaPN" />
                                </div>
                            </div>
                        </div>



                        <div class="row">
                            <div class=" col-md-4">
                                <div class="form-group">
                                    <label asp-for="Proveedor1" class="control-label" style="width: 100%;"></label>
                                    <input type="text" id="Proveedor1" deshabilitar="Cliente"  class="form-control" style="min-width:100%;" asp-for="Proveedor1" />
                                </div>
                            </div>

                            <div class=" col-md-4">
                                <div class="form-group">
                                    <label asp-for="Proveedor2" class="control-label" style="width: 100%;"></label>
                                    <input type="text" id="Proveedor2" deshabilitar="Cliente"  class="form-control" style="min-width:100%;" asp-for="Proveedor2" />
                                </div>
                            </div>

                        </div>

                        <div class="row">
                            <div class="col-md-4">

                                <label asp-for="ClienteRecoger" class="control-label" style="width: 100%;"></label>

                                @(Html.Kendo().SwitchFor(m => m.ClienteRecoger)
                                                                                                                                                                                                                         .Name("ClienteRecoger")
                                        //.Events(ev => ev.Change("onChange"))
                                )

                            </div>
                            <div class=" col-md-4">
                                <div class="form-group">
                                    <label asp-for="EnviarlaMensajero" class="control-label" style="width: 100%;"></label>
                                    @(Html.Kendo().SwitchFor(m => m.EnviarlaMensajero)
                                                                                                                                                                                                                                      .Name("EnviarlaMensajero")
                                            // .Events(ev => ev.Change("onChange"))
                                    )
                                </div>
                            </div>

                            <div class=" col-md-4">
                                <div class="form-group">
                                    <label asp-for="ConfirmacionCorreo" class="control-label" style="width: 100%;"></label>
                                    @(Html.Kendo().SwitchFor(m => m.ConfirmacionCorreo)
                                                                                                                                                                                                                                             .Name("ConfirmacionCorreo")
                                            // .Events(ev => ev.Change("onChange"))
                                    )
                                </div>
                            </div>

                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="PerteneceEmpresa" class="control-label" style="width: 100%;"></label>
                                    <input type="text" id="PerteneceEmpresa" deshabilitar="Cliente"  class="form-control" style="min-width:100%;" asp-for="PerteneceEmpresa" />
                                </div>
                            </div>

                            <div class=" col-md-8">
                                <div class="form-group">
                                    <label asp-for="DireccionEnvio" class="control-label" style="width: 100%;"></label>
                                    <textarea id="DireccionEnvio" deshabilitar="Cliente"  class="form-control" style="min-width:100%;" asp-for="DireccionEnvio"></textarea>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <label asp-for="ValorSeveridadRiesgo">Valor Severidad</label>
                                <kendo-numerictextbox for="ValorSeveridadRiesgo" spinners="false" readonly style="min-width:100%;" />
                            </div>
                            <div class="col-md-4">
                                <label asp-for="NivelSeveridad">Nivel de Riesgo</label>
                                <input class="k-textbox" type="text" name="NivelSeveridad" asp-for="NivelSeveridad" style="min-width:100%; background:@Model.ColorHexadecimal;" readonly />
                            </div>

                        </div>
                         <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="UnitOfMeasurePreference" class="control-label">Unidad de Medida</label>
                                    @*<kendo-dropdownlist name="UnitOfMeasurePreference" for="UnitOfMeasurePreference"
                                                        filter="Kendo.Mvc.UI.FilterType.Contains"
                                                        option-label="Seleccione la unidad de medida"
                                                        datatextfield="UnitOfMeasureName"
                                                        datavaluefield="UnitOfMeasureId"
                                                        style="width: 100%;">
                                        <datasource type="DataSourceTagHelperType.WebApi" page-size="30000">
                                            <transport>
                                                <read url="@Url.Action("GetUnitOfMeasureJsonActivos", "UnitOfMeasure")"  />
                                            </transport>
                                        </datasource>
                                    </kendo-dropdownlist>*@
                                    @(Html.Kendo().DropDownList().Name("UnitOfMeasurePreference").OptionLabel("Seleccione la Unidad de Medida")
                                        .DataValueField("Id")
                                        .DataTextField("UOM")
                                        .BindTo(new List<Object>() {
                                          new  {
                                              UOM = "LBE",
                                              Id = 1
                                          },
                                          new  {
                                              UOM = "KG E",
                                              Id = 2
                                          },
                                          new  {
                                              UOM = "QQ E",
                                              Id = 3
                                          },
                                          new  {
                                              UOM = "TM E",
                                              Id = 4
                                          },
                                          new  {
                                              UOM = "LBS I",
                                              Id = 5
                                          },
                                          new  {
                                              UOM = "KG I",
                                              Id = 6
                                          }
                                          ,
                                          new  {
                                              UOM = "QQ I",
                                              Id = 7
                                          },
                                          new  {
                                              UOM = "TM I",
                                              Id = 8
                                          }
                                      }).Value(Model.UnitOfMeasurePreference.ToString()))
                                    <span asp-validation-for="UnitOfMeasurePreference" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <label asp-for="ProductTypeId" class="control-label" style="width: 100%;">Tipo de Producto</label>
                                <kendo-dropdownlist name="ProductTypeId"
                                                    for="@Model.ProductTypeId"
                                                    filter="Kendo.Mvc.UI.FilterType.Contains"
                                                    option-label="Seleccionar el tipo de producto de cliente"
                                                    datatextfield="ProductTypeName"
                                                    datavaluefield="ProductTypeId"
                                                    data-val-required="El tipo de Producto es requerido"
                                                    auto-bind="true"
                                                    style="width: 100%;">
                                    <datasource type="DataSourceTagHelperType.WebApi" server-operation="true">
                                        <transport>
                                            <read url="@Url.Action("GetActivos", "ProductType")" />
                                        </transport>
                                    </datasource>
                                </kendo-dropdownlist>
                                <span asp-validation-for="ProductTypeId" class="text-danger"></span>
                            </div>

                            
                        </div>

                        

                        <hr />

                        <div class="row">
                            <div class="col-md-12">
                                <button id="btnGuardarCliente" deshabilitar="Cliente" onclick="SaveCustomer();" class="form-control  btn-miboton">Guardar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    ///validar solo acepte numeros///
    function SoloNumeros(e) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = "1234567890";
        especiales = "8-37-39-46";

        tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }

        if (letras.indexOf(tecla) == -1 && !tecla_especial) {
            return false;
        }
    }

      function SaveCustomer() {

          //if (RefreshOFAC) {
          //    var opcion = confirm("Este cliente esta en listas OFAC, desea guardar?");
          //    if (opcion == false) {
          //        return
          //    }
          //}
          //var notification = $("#notification").data("kendoNotification");

          $("#btnGuardarCliente").hide();
          $("#btnGuardarCliente").prop("disabled", true); 

          var dataObject = {
              'CustomerId': $("#CustomerId").val(),
              'CustomerName': $("#CustomerName").val(),
              'RTN': $("#RTN").val(),
              'CustomerTypeId': $("#CustomerTypeId").val() == null ? 0 : $("#CustomerTypeId").val(),
              'Phone': $("#Phone").val(),
              'Email': $("#Email").val(),
              'Address': $("#Address").val(),
              'IdEstado': $("#IdEstadoCliente").val(),
              'Estado': $("#IdEstadoCliente").data("kendoDropDownList").text(),
              'MontoIngresosAnuales': $("#MontoIngresosAnuales").val(),
              'PerteneceEmpresa': $("#PerteneceEmpresa").val(),
              'LugarNacimiento': $("#LugarNacimiento").val(),
              'FechaNacimiento':  $("#FechaNacimiento").getKendoDatePicker().value().toJSON(),
              'Edad': $("#Edad").val(),
              'EstadoCivil': $("#EstadoCivil").val(),
              'ProfesionOficio': $("#ProfesionOficio").val(),
              'Nacionalidad': $("#Nacionalidad").val(),
              'GiroActividadNegocio': $("#GiroActividadNegocio").val(),
              'CargosPublicos': $("#CargosPublicos").is(':checked'),
              'Familiares': $("#Familiares").val(),
              'Conyugue': $("#Conyugue").val(),
              'Proveedor1': $("#Proveedor1").val(),
              'Proveedor2': $("#Proveedor2").val(),
              'ClienteRecoger': $("#ClienteRecoger").is(':checked'),
              'EnviarlaMensajero': $("#EnviarlaMensajero").is(':checked'),
              'ConfirmacionCorreo': $("#ConfirmacionCorreo").is(':checked'),
              'DireccionEnvio': $("#DireccionEnvio").val(),
              'UnitOfMeasurePreference': $("#UnitOfMeasurePreference").val(),
              'ProductTypeId': $("#ProductTypeId").val(),
              'ProductTypeName': $("#ProductTypeId").data("kendoDropDownList").text(),
              'NombreEmpresaPN' : $("#NombreEmpresaPN").val(),
              'TelefonoEmpresaPN' : $("#TelefonoEmpresaPN").val(),
              'DireccionEmpresaPN' : $("#DireccionEmpresaPN").val(),


          };

          console.log(dataObject);
          var validator = $("#frmCustomer").data("kendoValidator");
          //if(displayedData)
          if (validator.validate()) {
            //debugger
              $.ajax({
                  url: '@Url.Action("SaveCustomer", "Customer")',
                  method: 'POST',
                  datatype: "json",
                  contentType: 'application/json',
                  async: false,
                  data: JSON.stringify(dataObject),
                  success: function (data) {
                      $("#CustomerId").val(data.CustomerId);

                      //$.toast({
                      //    heading: 'Satisfactorio',
                      //    text: ' Datos guardados correctamente.',
                      //    position: 'top-right',
                      //    loaderBg: '#ff6849',
                      //    icon: 'success',
                      //    showHideTransition: 'slide',
                      //    hideAfter: 3000,
                      //    stack: 6
                      //});
                      MostrarMensaje(" Datos guardados correctamente.", "success", "Satisfactorio", 7000);

                      $("#btnGuardarCliente").show();
                      $("#btnGuardarCliente").prop("disabled", false);

                  },
                  error: function (XMLHttpRequest, textStatus, errorThrown) {
                      console.log(textStatus + ": " + XMLHttpRequest.responseText);
                      $("#btnGuardarCliente").show();
                      $("#btnGuardarCliente").prop("disabled", false);
                      //  $("#btngenerarfactura").show();
                      //notification.show({
                      //    title: "Validación",
                      //    message: textStatus + ": " + XMLHttpRequest.responseText
                      //}, "error");
                       MostrarMensaje(textStatus + ": " + XMLHttpRequest.responseText, "Error", "Error", 30000);
                  }
              });
          }
          else {
              $("#btnGuardarCliente").show();
              $("#btnGuardarCliente").prop("disabled", false);
              //notification.show({
              //    title: "Validación",
              //    message: "Debe agregar los campos obligatorios!"
              //}, "error");
              MostrarMensaje("Debe agregar los campos obligatorios!", "Error", "Validación", 7000);
          }



      }
</script>






<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    @(Html.Kendo().TabStrip()
                                                                                               .Name("tabDetalleCliente")
                                                                                               .HtmlAttributes(new { style = "width:100%;" })
                                                           .Items(tabstrip =>
                                                           {

                                                               tabstrip.Add().Text("Socios")
                                                               .HtmlAttributes(new { @id = "tabSocios" })
                                                               .LoadContentFrom("Index", "CustomerPartners");
                                                               tabstrip.Add().Text("Firmas Autorizadas")
                                                               .HtmlAttributes(new { @id = "tabFirmasAutorizadas" })
                                                               .LoadContentFrom("Index", "CustomerAuthorizedSignature", new { CustomerId = Model.CustomerId });

                                                               tabstrip.Add().Text("Cotización")
                                                               .HtmlAttributes(new { @id = "tabCotizacion" })
                                                               //.ImageUrl(Url.Content("~/shared/icons/sports/baseball.png"))
                                                               .LoadContentFrom(@Url.Action("SalesOrderCustomer", "Customer"));

                                                               tabstrip.Add().Text("Contratos")
                                                               //.ImageUrl(Url.Content("~/shared/icons/sports/baseball.png"))
                                                               .LoadContentFrom(@Url.Action("Index", "CustomerContract"));

                                                               tabstrip.Add().Text("Teléfonos")
                                                              //.ImageUrl(Url.Content("~/shared/icons/sports/baseball.png"))
                                                              .LoadContentFrom(@Url.Action("Index", "CustomerPhones"));

                                                               tabstrip.Add().Text("Productos")
                                                               //Productos que se van a almacenar , hay un listado de productos que no se pueden almacenar           //
                                                               //.ImageUrl(Url.Content("~/shared/icons/sports/baseball.png"))
                                                               .LoadContentFrom(@Url.Action("Index", "CustomerProduct"));

                                                               tabstrip.Add().Text("Documentos")
                                                                //.ImageUrl(Url.Content("~/shared/icons/sports/baseball.png"))
                                                                .LoadContentFrom("CustomerDocument", "CustomerDocument");

                                                               tabstrip.Add().Text("Certificado de deposito")
                                                               //.ImageUrl(Url.Content("~/shared/icons/sports/baseball.png"))
                                                               .LoadContentFrom("CertificadoDepositoCustomer", "Customer");

                                                               tabstrip.Add().Text("F. PROFORMA")
                                                               //.ImageUrl(Url.Content("~/shared/icons/sports/baseball.png"))
                                                               .LoadContentFrom(@Url.Action("ProformaInvoiceCustomer", "Customer"));

                                                               tabstrip.Add().Text("Bodega habilitada")
                                                               //.ImageUrl(Url.Content("~/shared/icons/sports/baseball.png"))
                                                               .LoadContentFrom(@Url.Action("BranchCustomer", "Branch"));

                                                               //tabstrip.Add().Text("Volumen de Mercaderias")
                                                               ////Generar alertas cuando este al limite de bodega habilitada
                                                               ////.ImageUrl(Url.Content("~/shared/icons/sports/baseball.png"))
                                                               //.LoadContentFrom(@Url.Action("", "Customer"));


                                                               tabstrip.Add().Text("Facturas")
                                                                //.ImageUrl(Url.Content("~/shared/icons/sports/baseball.png"))
                                                                //.LoadContentFrom(@Url.Action("", "Invoice", new { CustomerId = Model.CustomerId }));
                                                                .LoadContentFrom("InvoiceCustomer", "Invoice");


                                                               //tabstrip.Add().Text("Avisos de cobros")
                                                               ////.ImageUrl(Url.Content("~/shared/icons/sports/baseball.png"))
                                                               //.LoadContentFrom(@Url.Action("", "Customer"));

                                                           })
                                                                                               .SelectedIndex(0)
                    )
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $("#tabDetalleCliente").kendoTabStrip({
        collapsible: true
    });

    //$("#tabDetalleCliente").width($("#tabDetalleCliente").innerWidth());

    console.log($("#tabDetalleCliente").innerWidth());


</script>
<script>
    //Buscar en las listas

        function DataONUListilicitas(nombre) {


        //debugger;
            var mfirstname = $("#SalesOrderName").val();
            var mlastName = $("#SalesOrderName").val();
            var thirtname = $("#SalesOrderName").val();


        return {
            FIRST_NAME: mfirstname,
        SECOND_NAME: mlastName,
        THIRD_NAME: thirtname,
    };

    }


    function DataPEPSlist(nombre) {

        //debugger;
        var mfirstname = $("#SalesOrderName").val();


        return {
            Funcionario: mfirstname,
        };

    }


    function DataBlackListilicitas(nombre) {
        var mfirstname = $("#SalesOrderName").val();



        return {
            CustomerName: mfirstname,

        };

    }

    function DataOFAClist(nombre) {
        //debugger;
        var mfirstname = $("#SalesOrderName").val();
        var mlastName = $("#SalesOrderName").val();


        return {
            firstName: mfirstname,
            lastName: mlastName
        };

    }


    function PeronIlicitas(nombre) {
        //debugger;
        if ($("#CountryId").val() != 0) {

            var generar_alertas = false;

            $.ajax({
                url: '@Url.Action("GetBlackListByParams", "BlackListCustomers")',
                method: 'GET',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: DataBlackListilicitas(nombre),
                success: function (GetBlackListByParams) {

                    var gridListaNegra = $("#gridListaNegra").getKendoGrid();
                    var datasource = gridListaNegra.dataSource;

                    var raw = datasource._data;
                    for (i = datasource._data.length - 1; i >= 0; i--) {
                        var item = raw[i];
                        datasource.remove(item);
                    }

                    for (var i = 0; i < GetBlackListByParams.Data.length; i++) {
                        datasource.insert(GetBlackListByParams.Data[i]);
                    }

                    var gridListalengthNegra = $("#gridListaNegra").data().kendoGrid.dataSource.data();

                    if (gridListalengthNegra.length > 0) {
                        $("#myModalListaNegra").modal('show');

                        generar_alertas = true;
                    }
                    else {
                        $("#myModalListaNegra").modal('hide');

                        if (AlertaBusca.val() == '1') {
                            //$.toast({
                            //    heading: 'En la Busqueda',
                            //    text: ' No se encuentran resultados en la Lista Negra.',
                            //    position: 'top-right',
                            //    loaderBg: '#ff6849',
                            //    icon: 'success',
                            //    showHideTransition: 'slide',
                            //    hideAfter: 6000,
                            //    stack: 6
                            //});
                            MostrarMensaje(" No se encuentran resultados en la Lista Negra.", "Error", "Error", 7000);
                        }


                    }

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                    //$.toast({
                    //    heading: 'Validación',
                    //    text: textStatus + ": " + XMLHttpRequest.responseText,
                    //    position: 'top-right',
                    //    loaderBg: '#ff6849',
                    //    icon: 'error',
                    //    hideAfter: 30000,
                    //    stack: 6
                    //});
                     MostrarMensaje(textStatus + ": " + XMLHttpRequest.responseText, "Error", "Error", 30000);
                }
            });


            $.ajax({
                url: '@Url.Action("GetPersonByName", "OFAC")',
                method: 'GET',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: DataOFAClist(nombre),
                success: function (data) {

                    var grid = $("#gridListaOFAC").getKendoGrid();
                    var datasource = grid.dataSource;
                    var raw = datasource._data;
                    for (i = datasource._data.length - 1; i >= 0; i--) {
                        var item = raw[i];
                        datasource.remove(item);
                    }

                    for (var i = 0; i < data.Data.length; i++) {
                        datasource.insert(data.Data[i]);
                        generar_alertas = true;
                    }

                    var gridListaOFAClen = $("#gridListaOFAC").data().kendoGrid.dataSource.data();

                    if (gridListaOFAClen.length > 0) {
                        $("#myModalOFAC").modal('show');
                    }
                    else {
                        $("#myModalOFAC").modal('hide');


                        if (AlertaBusca.val() == '1') {
                            //$.toast({
                            //    heading: 'En la Busqueda',
                            //    text: ' No se encuentran resultados en OFAC.',
                            //    position: 'top-right',
                            //    loaderBg: '#ff6849',
                            //    icon: 'success',
                            //    showHideTransition: 'slide',
                            //    hideAfter: 6000,
                            //    stack: 6
                            //});
                            MostrarMensaje("No se encuentran resultados en OFAC.", "success", "En la búsqueda", 7000);
                        }
                    }


                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                    //$.toast({
                    //    heading: 'Validación',
                    //    text: textStatus + ": " + XMLHttpRequest.responseText,
                    //    position: 'top-right',
                    //    loaderBg: '#ff6849',
                    //    icon: 'error',
                    //    hideAfter: 30000,
                    //    stack: 6
                    //});
                     MostrarMensaje(textStatus + ": " + XMLHttpRequest.responseText, "Error", "Error", 30000);
                }
            });


            $.ajax({
                url: '@Url.Action("GetByParams", "PEPS")',
                method: 'GET',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: DataPEPSlist(nombre),
                success: function (data) {


                    var gridListaPEPS = $("#gridListaPEPS").getKendoGrid();
                    var datasource = gridListaPEPS.dataSource;

                    var raw = datasource._data;
                    for (i = datasource._data.length - 1; i >= 0; i--) {
                        var item = raw[i];
                        datasource.remove(item);
                    }

                    for (var i = 0; i < data.Data.length; i++) {
                        datasource.insert(data.Data[i]);
                    }

                    var gridListalengthpeps = $("#gridListaPEPS").data().kendoGrid.dataSource.data();


                    if (gridListalengthpeps.length > 0) {
                        $("#myModalPEPS").modal('show');
                        generar_alertas = true;
                    }
                    else {
                        $("#myModalPEPS").modal('hide');
                        if (AlertaBusca.val() == '1') {
                            //$.toast({
                            //    heading: 'En la Busqueda',
                            //    text: ' No se encuentran resultados en PEPS.',
                            //    position: 'top-right',
                            //    loaderBg: '#ff6849',
                            //    icon: 'success',
                            //    showHideTransition: 'slide',
                            //    hideAfter: 6000,
                            //    stack: 6
                            //});
                            MostrarMensaje("No se encuentran resultados en PEPS.", "success", "En la búsqueda", 7000);

                        }

                    }

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                    //$.toast({
                    //    heading: 'Validación',
                    //    text: textStatus + ": " + XMLHttpRequest.responseText,
                    //    position: 'top-right',
                    //    loaderBg: '#ff6849',
                    //    icon: 'error',
                    //    hideAfter: 30000,
                    //    stack: 6
                    //});
                     MostrarMensaje(textStatus + ": " + XMLHttpRequest.responseText, "Error", "Error", 30000);
                }
            });

            $.ajax({
                url: '@Url.Action("GetONUPersonByName", "ONU")',
                method: 'GET',
                datatype: "json",
                contentType: 'application/json',
                async: false,
                data: DataONUListilicitas(nombre),
                success: function (data) {

                    var gridListaONU = $("#gridListaONU").getKendoGrid();
                    var datasource = gridListaONU.dataSource;

                    var raw = datasource._data;
                    for (i = datasource._data.length - 1; i >= 0; i--) {
                        var item = raw[i];
                        datasource.remove(item);
                    }

                    for (var i = 0; i < data.Data.length; i++) {
                        datasource.insert(data.Data[i]);
                    }


                    var gridListalengthONU = $("#gridListaONU").data().kendoGrid.dataSource.data();

                    if (gridListalengthONU.length > 0) {
                        $("#myModalListaONU").modal('show');
                        generar_alertas = true;
                    }
                    else {
                        $("#myModalListaONU").modal('hide');

                        if (AlertaBusca.val() == '1') {
                            //$.toast({
                            //    heading: 'En la Busqueda',
                            //    text: ' No se encuentran resultados en ONU.',
                            //    position: 'top-right',
                            //    loaderBg: '#ff6849',
                            //    icon: 'success',
                            //    showHideTransition: 'slide',
                            //    hideAfter: 6000,
                            //    stack: 6
                            //});
                            MostrarMensaje("No se encuentran resultados en ONU.", "success", "En la búsqueda", 7000);
                        }


                    }

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                    //$.toast({
                    //    heading: 'Validación',
                    //    text: textStatus + ": " + XMLHttpRequest.responseText,
                    //    position: 'top-right',
                    //    loaderBg: '#ff6849',
                    //    icon: 'error',
                    //    hideAfter: 30000,
                    //    stack: 6
                    //});
                     MostrarMensaje(textStatus + ": " + XMLHttpRequest.responseText, "Error", "Error", 30000);
                }
            });

            //debugger;
            dataCustomer = {
                'CustomerId': $("#CustomerId").val(),
            }
            var _NivelRiesgoCliente = "";
            $.ajax({
                    url: '@Url.Action("GetMatrizRiesgoCustomersByCustomerId", "MatrizRiesgoCustomers")',
                    method: 'POST',
                    datatype: "json",
                    contentType: "application/json",
                    async: false,
                    data: JSON.stringify(dataCustomer),
                success: function (data) {
                    //debugger;
                        if (data != undefined) {
                            _NivelRiesgoCliente = data.RiesgoResidualNivel;
                        }
                        else {
                            _NivelRiesgoCliente = "";
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                        //$.toast({
                        //    heading: 'Validación',
                        //    text: textStatus + ": " + XMLHttpRequest.responseText,
                        //    position: 'top-right',
                        //    loaderBg: '#ff6849',
                        //    icon: 'error',
                        //    hideAfter: 30000,
                        //    stack: 6
                        //});
                         MostrarMensaje(textStatus + ": " + XMLHttpRequest.responseText, "Error", "Error", 30000);
                    }
                });

            if (generar_alertas == true && AlertaBusca.val() == '1') {

                var dataAlerta = {

                    'DocumentId': 1,
                    'DocumentName': 'CLIENTE',
                    'NivelRiesgoCliente': _NivelRiesgoCliente,
                    'Code': 'PERSON002',
                    'PersonName': nombre,
                    'CloseDate': '0001-01-01',

                };

                $.ajax({
                    url: '@Url.Action("GenerarAlerta", "Alert")',
                    method: 'POST',
                    datatype: "json",
                    contentType: "application/json",
                    async: false,
                    data: JSON.stringify(dataAlerta),
                    success: function (data) {

                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                        //$.toast({
                        //    heading: 'Validación',
                        //    text: textStatus + ": " + XMLHttpRequest.responseText,
                        //    position: 'top-right',
                        //    loaderBg: '#ff6849',
                        //    icon: 'error',
                        //    hideAfter: 30000,
                        //    stack: 6
                        //});
                         MostrarMensaje(textStatus + ": " + XMLHttpRequest.responseText, "Error", "Error", 30000);
                    }
                });



            }
            var generar_alertasPaisGAFI = false;
            var Pais = $("#CountryId").data("kendoDropDownList").text();
            dataCountry = {
                'Name' : Pais,
            }

            $.ajax({
                    url: '@Url.Action("PaisesGAFIByName", "Country")',
                    method: 'POST',
                    datatype: "json",
                    contentType: "application/json",
                    async: false,
                    data: JSON.stringify(dataCountry),
                    success: function (data) {
                        if (data != undefined) {
                            generar_alertasPaisGAFI = true;
                        }
                        else {
                            generar_alertasPaisGAFI = false;
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                        //$.toast({
                        //    heading: 'Validación',
                        //    text: textStatus + ": " + XMLHttpRequest.responseText,
                        //    position: 'top-right',
                        //    loaderBg: '#ff6849',
                        //    icon: 'error',
                        //    hideAfter: 30000,
                        //    stack: 6
                        //});
                         MostrarMensaje(textStatus + ": " + XMLHttpRequest.responseText, "Error", "Error", 30000);
                    }
            });

            if (generar_alertasPaisGAFI == true) {
                var SalesOrderName = $("#SalesOrderName").val();
                var dataAlertaPaisGAFI = {

                    'DocumentId': 1,
                    'DocumentName': 'CLIENTE',
                    'AlertName': 'País GAFI',
                    'Description': "El país seleccionado para el cliente: " + SalesOrderName + ", esta dentro del listado de paises GAFI",
                    'CloseDate': '0001-01-01',

                };

                $.ajax({
                    url: '@Url.Action("GenerarAlerta", "Alert")',
                    method: 'POST',
                    datatype: "json",
                    contentType: "application/json",
                    async: false,
                    data: JSON.stringify(dataAlertaPaisGAFI),
                    success: function (data) {

                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                        //$.toast({
                        //    heading: 'Validación',
                        //    text: textStatus + ": " + XMLHttpRequest.responseText,
                        //    position: 'top-right',
                        //    loaderBg: '#ff6849',
                        //    icon: 'error',
                        //    hideAfter: 30000,
                        //    stack: 6
                        //});
                         MostrarMensaje(textStatus + ": " + XMLHttpRequest.responseText, "Error", "Error", 30000);
                    }
                });
            }
        }
    }



    $(document).ready(function() {
        var auto = $("#CargosPublicos").data("kendoSwitch");
        var valorCargosPublicos = auto.check();

        if(valorCargosPublicos){
            $("#row-cargos-publicos").show();
        }else{
            $("#row-cargos-publicos").hide();
        }
    });



</script>
