@model ERPMVC.Models.Liquidacion
@{ Layout = null;
    var messages = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." },
           {"required","Valor requerido" }
        };

    var editable = (Model.EstadoId == 5 || Model.Id == 0 || Model.EstadoId == 7);
}


<div id="Modal" class="modal fade" role="dialog">
    <!-- Modal content-->
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Liquidacion de Precios</h4>
                <button type="button" name="btnprueba" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row" id="validation">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-body">
                                <form id="frm" kendo-validator="true" kendo-messages="messages"
                                      data-ajax="true"
                                      data-ajax-method="post"
                                      data-ajax-begin="Save"
                                      class="validation-wizard wizard-circle">
                                    <div class="form-body">
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label asp-for="Id" class=" control-label" style="width:100%"></label>
                                                    <input type="text" asp-for="Id" name="Id" class="k-textbox" readonly style="min-width:100%" />
                                                    <span asp-validation-for="Id" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label>Fecha Registro</label>
                                                    <kendo-datetimepicker for="FechaLiquidacion" value="@Model.FechaLiquidacion" readonly style="min-width:100%" />
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label class="control-label" style="min-width:100%">Cliente</label>
                                                    <kendo-dropdownlist style="min-width:100%" for="CustomerId"
                                                                        datatextfield="CustomerName"
                                                                        datavaluefield="CustomerId"
                                                                        filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                        value="@Model.CustomerId"
                                                                        on-change="RefrescarRecibos"
                                                                        enable="Model.Id==0"
                                                                        option-label="Seleccione Cliente">
                                                        <datasource page-size="999" type="DataSourceTagHelperType.WebApi" server-operation="true">
                                                            <transport>
                                                                <read url="@Url.Action("Get","Customer")" />
                                                            </transport>
                                                        </datasource>

                                                    </kendo-dropdownlist>
                                                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label class="control-label" style="min-width:100%">Servicio</label>
                                                    <kendo-dropdownlist class="control-label" style="min-width:100%" value="@Model.ProductId"
                                                                        for="ProductId"
                                                                        filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                        datatextfield="ProductName"
                                                                        datavaluefield="ProductId"
                                                                        on-change="RefrescarRecibos"
                                                                        enable="Model.Id==0"
                                                                        option-label="Seleccione Servicio">
                                                        <datasource page-size="999" type="DataSourceTagHelperType.WebApi" server-operation="true">
                                                            <transport>
                                                                <read url="@Url.Action("Get","Product")" />
                                                            </transport>
                                                        </datasource>

                                                    </kendo-dropdownlist>
                                                    <span asp-validation-for="ProductId" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <script>
                                                function GetCustomerService() {
                                                    var customer = $("#CustomerId").val();
                                                    var servicio = $("#ProductId").val();
                                                    var dataobject = {
                                                        'servicioid': servicio,
                                                        'clienteid': customer,
                                                    }
                                                    //console.log(dataobject);
                                                    return dataobject
                                                }
                                                function GetRecibos() {
                                                    var recibosselect = $("#Recibos").data("kendoMultiSelect");
                                                    var recibos = recibosselect == undefined ? [] : recibosselect.value();     
                                                    var dataobject = {
                                                        'recibos': recibos,
                                                        'Id': $('#Id').val()
                                                    };

                                                    console.log(dataobject);
                                                    return dataobject;

                                                }
                                            </script>
                                            
                                            
                                        </div>
                                        <div class="row">
                                            <div class="col-md-9">
                                                <div class="form-group">
                                                    <label class="control-label" style="min-width:100%">Recibos de Mercaderias</label>
                                                    @if (Model.Id == 0)
                                                    {
                                                        <kendo-multiselect name="Recibos" style="min-width:100%" no-data-template="No se encontraron recibospara el cliente y el servicio seleccionado" value="@Model.Recibos"
                                                                           required data-required-msg="Seleccione un Recibo" on-change="RefrescarGridDetalle"
                                                                           datatextfield="Comments" datavaluefield="GoodsReceivedId" option-label="Seleccione los recibos">
                                                            <datasource page-size="999" type="DataSourceTagHelperType.WebApi" server-operation="true">
                                                                <transport>
                                                                    <read url="@Url.Action("GoodsReceivedCustomerService","GoodsReceived")" data="GetCustomerService" />
                                                                </transport>
                                                            </datasource>

                                                        </kendo-multiselect>
                                                    }
                                                    else
                                                    {
                                                        <input type="text" style="min-width:100%" asp-for="Recibos" value="@Model.Recibos" readonly class="k-textbox" />
                                                    }

                                                    <span asp-validation-for="Recibos"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <label class="control-label">Estado</label>
                                                <kendo-dropdownlist for="EstadoId" datatextfield="NombreEstado"
                                                                    datavaluefield="IdEstado" style="min-width:100%" enable="false"
                                                                    option-label="Seleccione Estado">
                                                    <datasource page-size="999" type="DataSourceTagHelperType.WebApi" server-operation="true">
                                                        <transport>
                                                            <read url="@Url.Action("GetporGrupoEstado","Estados",new { GrupoId = 3})" />
                                                        </transport>
                                                    </datasource>

                                                </kendo-dropdownlist>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label class="control-label" style="min-width:100%">Tasa de Cambio    </label>
                                                    <kendo-numerictextbox style="min-width:100%" for="TasaCambio" min="0" spinners="false" format="c4" max="100" data-val-required="La Tasa de Cambio es Requerida" decimals="4" />
                                                    <span asp-validation-for="TasaCambio"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <label class="control-label" style="min-width:100%">% Derechos Importacion</label>
                                                <kendo-numerictextbox for="DerechosImportacion" spinners="false" min="0" style="min-width:100%" />
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label class="control-label" style="min-width:100%">Selectivo Consumo  </label>
                                                    <kendo-numerictextbox style="min-width:100%" for="SelectivoConsumo" min="0" spinners="false" format="n2" max="100" data-val-required="La Tasa de Cambio es Requerida" decimals="2" />
                                                    <span asp-validation-for="SelectivoConsumo"></span>
                                                </div>
                                            </div>


                                            <div class="col-md-3">
                                                <label class="control-label" style="min-width:100%">Impuesto sobre Ventas </label>
                                                <kendo-numerictextbox for="ImpuestoSobreVentas" spinners="false" min="0" max="100" style="min-width:100%" format="n2" />
                                            </div>


                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <label class="control-label" style="min-width:100%">Flete</label>
                                                <kendo-numerictextbox for="Flete" spinners="false" min="0" style="min-width:100%"  />
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label class="control-label" style="min-width:100%">Seguro </label>
                                                    <kendo-numerictextbox style="min-width:100%" for="Seguro" min="0" spinners="false" format="n4" max="1000000000" data-val-required="La Tasa de Cambio es Requerida" decimals="4" />
                                                    <span asp-validation-for="Seguro"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <label class="control-label" style="min-width:100%">Otros </label>
                                                <kendo-numerictextbox for="Otros" spinners="false" min="0" style="min-width:100%" format="n2" />
                                            </div>
                                            <div class="col-md-3">
                                                <label class="control-label" style="min-width:100%">Total</label>
                                                <kendo-numerictextbox for="Total" spinners="false" readonly min="0" style="min-width:100%" />
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <label class="control-label" style="min-width:100%">Total Otros Impuestos </label>
                                                <kendo-numerictextbox for="TotalOtrosImpuestos" spinners="false" min="0" style="min-width:100%" format="n6" decimals="6" />
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label>Factura No</label>
                                                    <input type="text" name="name" asp-for="NoFactura" class="k-textbox" style="min-width:100%" maxlength="100"/>

                                                </div>

                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label>Póliza No</label>
                                                    <input type="text" name="name" asp-for="NoPoliza" class="k-textbox" style="min-width:100%"  maxlength="100"/>

                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                @(Html.Kendo().Grid<ERPMVC.Models.LiquidacionLine>
()
.Name("gridDetalle")
.Columns(columns =>
{


    /* columns.Command(command =>
    {
    command.Edit().UpdateText(" ").CancelText(" ").Text(" ");
    // command.Custom("Eliminar").Text(" ").IconClass("fa fa-trash-alt").Click("Delete");
    //command.Custom("Editar").Text(" ").IconClass("fa fa-edit").Click("EditControlPalletDetalle");
    }).Title("Acciones").Width(120);*/
    if (editable)
    {
        columns.Command(command => { command.Destroy().Text(" ").IconClass("fa fa-trash-alt"); }).Width(120);
    }
    columns.Bound(p => p.Id).Title("Id").Width(150).Visible(false);
    //columns.Bound(p => p.GoodsReceivedLine.GoodsReceivedId).Title("Recibo No").Width(120).ClientFooterTemplate("Totales");
    columns.Bound(p => p.SubProductName).Title("Producto").Width(200);
    columns.Bound(p => p.UOM).Title("Unidad de Medida").Width(200);
    columns.Bound(p => p.CantidadRecibida).Title("Cant Recibida").Width(150).ClientFooterTemplate("#=totalColumnas(13,0)#");
    columns.Bound(p => p.Cantidad).Title("Cantidad Documento").Width(150).ClientFooterTemplate("#=totalColumnas(11,0)#");
    columns.Bound(p => p.TotalFOB).Title("Total FOB $").Width(150).ClientFooterTemplate("#=totalColumnas(1,2)#").Format("{0:N2}");
    columns.Bound(p => p.TotalCIB).Title("Total CIF $").Width(150).ClientFooterTemplate("#=totalColumnas(2,2)#").Format("{0:N2}");
    columns.Bound(p => p.TotalCIFLPS).Title("Total CIF LPS").Width(150).ClientFooterTemplate("#=totalColumnas(3,1)#").Format("{0:C2}");
    columns.Bound(p => p.ValorDerechosImportacion).Title("Derechos Importación").Width(200).ClientFooterTemplate("#=totalColumnas(4,1)#").Format("{0:C2}");
    columns.Bound(p => p.TotalCIFDerechosImp).Width(100).Title("Total CIF + Derechos").Width(200).ClientFooterTemplate("#=totalColumnas(5,1)#").Format("{0:C2}");
    columns.Bound(p => p.ValorSelectivoConsumo).Title("Selectivo Consumo").Width(200).ClientFooterTemplate("#=totalColumnas(6,1)#").Format("{0:C2}");
    columns.Bound(p => p.OtrosImpuestos).Title("Otros Imptos").Width(200).ClientFooterTemplate("#=totalColumnas(7,1)#").Format("{0:C2}");
    columns.Bound(p => p.TotalImpuestoVentas).Title("Total ISV").Width(150).ClientFooterTemplate("#=totalColumnas(8,1)#").Format("{0:C2}");
    columns.Bound(p => p.TotalDerechosmasImpuestos).Title("Total Derechos + Imptos").Width(200).ClientFooterTemplate("#=totalColumnas(12,1)#").Format("{0:C2}");
    columns.Bound(p => p.TotalDerechos).Title("Total Final").Width(250).ClientFooterTemplate("#=totalColumnas(15,1)#").Format("{0:C2}");
    columns.Bound(p => p.PrecioUnitarioCIF).Title("Precio Unitario CIF").Width(250).ClientFooterTemplate("#=totalColumnas(14,1)#").Format("{0:C2}");
    columns.Bound(p => p.ValorUnitarioDerechos).Title("Valor Unitario Derechos").Width(250).ClientFooterTemplate("#=totalColumnas(16,1)#").Format("{0:C2}");
    columns.Bound(p => p.ValorTotalCIF).Title("Valor Total CIF").Width(250).ClientFooterTemplate("#=totalColumnas(18,1)#").Format("{0:C2}");
    columns.Bound(p => p.ValorTotalDerechos).Title("Valor Total Derechos").Width(250).ClientFooterTemplate("#=totalColumnas(17,1)#").Format("{0:C2}");
    columns.Bound(p => p.TotalFinal).Width(150).Title("Valor Total Final").ClientFooterTemplate("#=totalColumnas(10,1)#").Format("{0:C2}");
})
.Editable(e => e.Mode(GridEditMode.InCell))
.Resizable(resize => resize.Columns(true))
.ToolBar(toolbar => {

    if (editable)
    {
        toolbar.Custom().Text("Validar ").IconClass("fa fa-check").HtmlAttributes(new { onclick = "Calcular()" });
        toolbar.Create().Text("Agregar");
    }
})
    .Sortable()
    .AutoBind(true)
    .Filterable()
    .Scrollable()
    .DataSource(dataSource =>
    dataSource
    .WebApi()
    .Batch(true)
    .PageSize(100)
    .ServerOperation(false)
    .Model(model =>
    {
        model.Id(i => i.Id);
        model.Field(p => p.Cantidad).Editable(true);
        model.Field(p => p.CantidadRecibida).Editable(false);
        model.Field(p => p.TotalCIB).Editable(false);
        model.Field(p => p.TotalFOB).Editable(true);
        model.Field(p => p.SubProductName).Editable(true);
        model.Field(p => p.TotalCIFDerechosImp).Editable(false);
        model.Field(p => p.TotalCIFLPS).Editable(false);
        model.Field(p => p.TotalDerechosmasImpuestos).Editable(false);
        model.Field(p => p.TotalFinal).Editable(false);
        model.Field(p => p.TotalImpuestoVentas).Editable(false);
        model.Field(p => p.ValorDerechosImportacion).Editable(false);
        model.Field(p => p.ValorSelectivoConsumo).Editable(false);
        model.Field(p => p.OtrosImpuestos).Editable(false);
        model.Field(p => p.ValorTotalDerechos).Editable(false);
        model.Field(p => p.ValorUnitarioDerechos).Editable(false);
        model.Field(p => p.PrecioUnitarioCIF).Editable(false); 
        model.Field(p => p.TotalDerechos).Editable(false);
        model.Field(p => p.ValorTotalCIF).Editable(false);

    })
    .Events(events =>
    {
        events.Error("error_handler");
        //events.upda("EditHandler");
        //events.Change("onCellChange");

    })
    .Read(read => read.Action("LiquidacionesPendientes", "LiquidacionDetalle").Data("GetRecibos"))
    .Update(update => update.Action("Update", "LiquidacionDetalle"))
    .Create(update => update.Action("Update", "LiquidacionDetalle")))

    )
    
</div>


                                        </div>
                                        @if (editable)
                                        {
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <button id="btnGuardar" class="form-control btn-miboton" type="submit"> Guardar </button>
                                                </div>
                                            </div>
                                        }



                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    function Calcular() {
        debugger;
        var displayedData = $("#gridDetalle").data().kendoGrid.dataSource.view();

         var dataObject = {
                'Id': $("#Id").val() === "" ? "0" : $("#Id").val(),
                'FechaLiquidacion': $("#FechaLiquidacion").getKendoDateTimePicker().value().toJSON(),
                'CustomerId': $("#CustomerId").val(),
                'CustomerName': $("#CustomerId").data('kendoDropDownList').text(),
                'ProductId': $("#ProductId").val(),
                'ProductName': $("#ProductId").data('kendoDropDownList').text(),
                'Recibos': ' ',
                'TasaCambio': $("#TasaCambio").val(),
                'SelectivoConsumo': $("#SelectivoConsumo").val(),
                'Seguro': $("#Seguro").val(),
                'ImpuestoSobreVentas': $("#ImpuestoSobreVentas").val(),
                'Otros': $("#Otros").val(),
                'Flete': $('#Flete').val(),
                'EstadoId': $('#EstadoId').val(),
                'DerechosImportacion': $("#DerechosImportacion").val(),
                'TotalOtrosImpuestos': $("#TotalOtrosImpuestos").val(),
                'NoPoliza': $("#NoPoliza").val(),
                'NoFactura': $("#NoFactura").val(),
                'detalleliquidacion': displayedData,

            };

        var ISV = $("#ImpuestoSobreVentas").val();
        var SelectivoConsumo = $("#SelectivoConsumo").val();
        var DerechosImportacion = $("#DerechosImportacion").val();
        var TasaCambio = $("#TasaCambio").val();
        if (ISV == 0 ||  DerechosImportacion == 0 || TasaCambio == 0) {
            $.toast({
                heading: 'Error',
                text: "Faltan Valores Requeridos",
                position: 'top-right',
                loaderBg: '#ff6849',
                icon: 'error',
                hideAfter: 30000,
                stack: 6
            });
            return;
        }

            console.log(JSON.stringify(dataObject));

            var validator = $("#frm").data("kendoValidator");
                 var status = $(".status");


                if (validator.validate()) {

                    $.ajax({
                        url: '@Url.Action("ValidarDetalle", "LiquidacionDetalle")',
                        method: 'POST',
                        datatype: "json",
                        contentType: 'application/json',
                        async: false,
                        data: JSON.stringify(dataObject),
                        success: function (data) {
                            var griddetalle = $("#gridDetalle").data().kendoGrid.dataSource;
                            griddetalle.data(data.detalleliquidacion);
                            var total = $("#Total").data("kendoNumericTextBox");
                            total.value(data.Total);
                            console.log(data);
                            $.toast({
                                heading: 'Satisfactorio',
                                text: '',
                                position: 'top-right',
                                loaderBg: '#ff6849',
                                icon: 'success',
                                hideAfter: 30000,
                                stack: 6
                            });
                        },
                        error: function (result) {
                            console.log(result);
                            $.toast({
                                heading: 'Error',
                                text: result.responseText,
                                position: 'top-right',
                                loaderBg: '#ff6849',
                                icon: 'error',
                                hideAfter: 30000,
                                stack: 6
                            });

                        }
                    });

                }
                else {
                    status.text("Oops! There is invalid data in the form.")
                        .removeClass("valid")
                        .addClass("invalid");
                }
    }
    function RefrescarGrid() {
        var grid = $("#gridLiquidaciones").getKendoGrid();
        grid.dataSource.read();
    }

    function RefrescarGridDetalle() {
        var grid = $("#gridDetalle").getKendoGrid();
        grid.dataSource.read();
    }

    function RefrescarRecibos() {
        var multiselect = $("#Recibos").data("kendoMultiSelect");
        multiselect.dataSource.read();
        var griddetalle = $("#gridDetalle").data().kendoGrid.dataSource;
        //griddetalle.data([]); 

       

    }
    function totalColumnas(tiporesultado, moneda) {
        var data = $("#gridDetalle").getKendoGrid().dataSource.data();
        var total = 0;

        switch (tiporesultado) {
            case 1: ///////Calcular el Total FOB
                data.forEach(r => total += r.TotalFOB);
                break;
            case 2: /// Calcular el total CIB
                data.forEach(r => total += r.TotalCIB);
                break;
            case 3: ////Calcular el total CIF LPS
                data.forEach(r => total += r.TotalCIFLPS);
                break;
            case 4://///Calcular el total de Valor de derechos importacion
                data.forEach(r => total += r.ValorDerechosImportacion);
                break;
            case 5:
                data.forEach(r => total += r.TotalCIFDerechosImp);
                break;
            case 6:
                data.forEach(r => total += r.ValorSelectivoConsumo);
                break;
            case 7:
                data.forEach(r => total += r.OtrosImpuestos);
                break;
            case 8:
                data.forEach(r => total += r.TotalCIFDerechosImp);
                break;
            case 9:
                data.forEach(r => total += r.TotalImpuestoVentas);
                break;
            case 10:
                data.forEach(r => total += r.TotalFinal);
                break;
            case 11:
                data.forEach(r => total += r.Cantidad);
                break;
            case 12:
                data.forEach(r => total += r.TotalDerechosmasImpuestos);
                break;
            case 13:
                data.forEach(r => total += r.CantidadRecibida);
                break;
            case 14:
                data.forEach(r => total += r.ValorUnitarioDerechos);
                break;
            case 15: 
                data.forEach(r => total += r.TotalDerechos);
                break;
            case 16:
                data.forEach(r => total += r.ValorUnitarioDerechos);
                break;
            case 17:
                data.forEach(r => total += r.ValorTotalDerechos);
                break;
            case 18:
                data.forEach(r => total += r.ValorTotalCIF);
                break;
            

            default:
                break;
        }
        var formatter = new Intl.NumberFormat('es-HN', {
            style: 'currency',
            currency: 'LPS',
            minimumFractionDigits: 2
        });
        if (moneda == 1) {
            return formatter.format(total);
        }
        if (moneda == 2) {
            formatter = new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'USD',
                minimumFractionDigits: 2
            });
            return formatter.format(total);
        }
        return total;
    }
    var formulas = {
        "In Stock": function (model) {
            return model.StockValue - model.Percentage;
        },
        TotalFOB: function (model) {
            return (10 ) * 5;
        },
        "Out Stock": function (model) {
            return (model.StockValue - model.Percentage) * model.SalePrice;
        },
        Credit: function (model) {
            return model.Percentage * model.SalePrice;
        }
    };

    function Save(e) {
        debugger;
        var total = $("#Total").val();
        var cambiospendientesgrid = $("#gridDetalle").data('kendoGrid').dataSource.hasChanges();
        /*
        if (cambiospendientesgrid) {
            $.toast({
                heading: 'Error',
                text: "Debe validar los datos del formulario",
                position: 'top-right',
                loaderBg: '#ff6849',
                icon: 'error',
                hideAfter: 30000,
                stack: 6
            });
            return;
        }*/
        ///validar si el grid tiene datos no validados 
        if (total == 0 ) {
            $.toast({
                heading: 'Error',
                text: "Debe validar los datos del formulario",
                position: 'top-right',
                loaderBg: '#ff6849',
                icon: 'error',
                hideAfter: 30000,
                stack: 6
            });
            return;
        }

        $("#btnGuardar").prop("disabled", true);

        var displayedData = $("#gridDetalle").data().kendoGrid.dataSource.view();

        var recibos = '';
        var id = @Model.Id;
        if (id == 0) {
            var multiselect = $("#Recibos").data('kendoMultiSelect').value();
            for (i = 0; i < multiselect.length; i++) {
                recibos += multiselect[i] + ',';
            }
        } else {
            recibos = $('#Recibos').val();
        }
        

            var dataObject = {
                'Id': $("#Id").val() === "" ? "0" : $("#Id").val(),
                'FechaLiquidacion': $("#FechaLiquidacion").getKendoDateTimePicker().value().toJSON(),
                'CustomerId': $("#CustomerId").val(),
                'CustomerName': $("#CustomerId").data('kendoDropDownList').text(),
                'ProductId': $("#ProductId").val(),
                'ProductName': $("#ProductId").data('kendoDropDownList').text(),
                'Recibos': recibos,
                'TasaCambio': $("#TasaCambio").val(),
                'SelectivoConsumo': $("#SelectivoConsumo").val(),
                'Seguro': $("#Seguro").val(),
                'ImpuestoSobreVentas': $("#ImpuestoSobreVentas").val(),
                'Otros': $("#Otros").val(),
                'Flete': $('#Flete').val(),
                'DerechosImportacion' : $("#DerechosImportacion").val(),
                'EstadoId': $('#EstadoId').val(),
                'TotalOtrosImpuestos': $("#TotalOtrosImpuestos").val(),
                'NoPoliza': $("#NoPoliza").val(),
                'NoFactura': $("#NoFactura").val(),
                'detalleliquidacion': displayedData,

            };

            console.log(JSON.stringify(dataObject));

            var validator = $("#frm").data("kendoValidator");
                 var status = $(".status");


                if (validator.validate()) {

                    $.ajax({
                        url: '@Url.Action("SaveLiquidacion", "Liquidacion")',
                        method: 'POST',
                        datatype: "json",
                        contentType: 'application/json',
                        async: false,
                        data: JSON.stringify(dataObject),
                        success: function (data) {
                            $.toast({
                                heading: 'Satisfactorio',
                                text: 'Datos guardados correctamente.',
                                position: 'top-right',
                                loaderBg: '#ff6849',
                                icon: 'success',
                                hideAfter: 30000,
                                stack: 6
                            });
                           RefrescarGrid();
                            $('#Modal').modal('hide');
                        },
                        error: function (result) {
                            console.log(result);
                            $.toast({
                                heading: 'Error',
                                text: result.responseText,
                                position: 'top-right',
                                loaderBg: '#ff6849',
                                icon: 'error',
                                hideAfter: 30000,
                                stack: 6
                            });

                        }
                    });

                }
                else {
                    status.text("Oops! There is invalid data in the form.")
                        .removeClass("valid")
                        .addClass("invalid");
                }


            $("#btnGuardar").show();
            $("#btnGuardar").prop("disabled", false);
    }
</script>
