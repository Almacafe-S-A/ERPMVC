@model ERPMVC.DTO.InsurancesCertificateLineDTO


@{ Layout = null;
    var messages = new Dictionary<string, string>() { { "custom", "Ingrese un valor correcto." },
        { "required","Valor requerido" }
};
    var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
}

<script>

     function clearsession() {
         var dataObject = ["listadocertificado"];
        $.ajax({
            url: '@Url.Action("ClearSession","Common")',
            method: 'POST',
            datatype: "json",
            contentType: 'application/json',
            async: false,
            data: JSON.stringify(dataObject),
            success: function (result) {
                //  $('#myModalSalesOrder').modal('show');
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert(textStatus + ": " + XMLHttpRequest.responseText);
            }
        });
    }
    function customFunction(input) {

        if (input.attr('name') === "InsurancesCertificateLineId" && input.val() === "0") {
            return false;
        }
        if (input.attr('name') === "InsurancesCertificateId" && input.val() === "0") {
            return true;
        }

        //dropdownlist3.selected

        // Dropchange();

    }

    function CertificateClose() {
        $('#myModalCertificate').modal('hide');
    }

    //$('#btnprueba').val("");btnInsurancesCertificateLine
</script>

<div id="myModalCertificate" class="modal fade" role="dialog">
    <!-- Modal content-->
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="CertificateClose();">&times;</button>

                <h4 class="modal-title">Certificado a Asegurar</h4>
            </div>
            <div class="modal-body">

                <div class="row" id="validation">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-body">
                                <form id="frmCertificadoDepositoSeguro" kendo-validator="true" kendo-messages="messages"
                                      data-ajax="true"
                                      data-ajax-method="post"
                                      data-ajax-begin="BuscarCertificadoDeposito"
                                      class="validation-wizard wizard-circle">

                                    <h3 class="card-title">Asegurar Certificado</h3>
                                    <hr>
                                    <div class="row">
                                        <div class="col-md-4" hidden>
                                            <div class="form-group">
                                                <label asp-for="InsurancesCertificateLineId" class=" control-label" style="width:100%"></label>
                                                <input type="text" asp-for="InsurancesCertificateLineId" id="CertificateLineId" name="InsurancesCertificateLineId" disabled="disabled" class="form-control" style="min-width:100%" />
                                            </div>
                                        </div>
                                        <div class="col-md-4" hidden>
                                            <div class="form-group">
                                                <label asp-for="InsurancesCertificateId" class="control-label" style="width:100%"></label>
                                                <input type="number" asp-for="InsurancesCertificateId" style="min-width:100%" class="form-control" disabled />

                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <script>

                                                    function FillWareHouse(e) {
                                                        var dataItem = e.dataItem;
                                                        $("#warehouseid").val(dataItem.BranchId);
                                                        $("#WarehouseId").data("kendoDropDownList").dataSource.read();
                                                    }


                                                </script>
                                                <input type="hidden" id="warehousesetid" />
                                                <label asp-for="BranchId" class="control-label"></label>
                                                <kendo-dropdownlist name="BranchId" id="sucursal" for="BranchId" filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                    option-label="Seleccione Sucursal"
                                                                    datatextfield="BranchName"
                                                                    datavaluefield="BranchId"
                                                                    enable="true"
                                                                    required
                                                                    auto-bind="true"
                                                                    style="width: 100%;">
                                                    <datasource type="DataSourceTagHelperType.WebApi">
                                                        <transport>
                                                            <read url="@Url.Action("GetBranch", "Branch")" />
                                                        </transport>
                                                    </datasource>
                                                </kendo-dropdownlist>
                                                <span asp-validation-for="BranchId" class="text-danger"></span>


                                            </div>

                                        </div>

                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <script>
                                                    function GetBranchId() {

                                                        return { 'BranchId': 1 }
                                                    }
                                                </script>



                                                <label asp-for="WarehouseId" class="control-label"></label>
                                                <kendo-dropdownlist name="WarehouseId" id="bodega" for="WarehouseId" filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                    option-label="Seleccione Bodega"
                                                                    cascade-from="sucursal"
                                                                    value="@Model.WarehouseId"
                                                                    required
                                                                    auto-bind="true"
                                                                    datatextfield="WarehouseName"
                                                                    datavaluefield="WarehouseId"
                                                                    style="width: 100%;">
                                                    <datasource type="DataSourceTagHelperType.WebApi" server-filtering="true">
                                                        <transport>
                                                            <read url="@Url.Action("Get", "Warehouse")" data="GetBranchId" />
                                                        </transport>
                                                    </datasource>
                                                </kendo-dropdownlist>
                                                <span asp-validation-for="WarehouseId" class="text-danger"></span>

                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label asp-for="CustomerId" class="control-label"></label>

                                                <kendo-dropdownlist name="CustomerId" for="@Model.CustomerId" filter="Kendo.Mvc.UI.FilterType.Contains"
                                                                    option-label="Seleccione el cliente"
                                                                    datatextfield="CustomerName"
                                                                    datavaluefield="CustomerId"
                                                                    class="form-control-line"
                                                                    style="width: 100%;">
                                                    <datasource type="DataSourceTagHelperType.WebApi" server-operation="true" page-size="9999999">
                                                        <transport>
                                                            <read url="@Url.Action("GetCustomer", "Common")" />
                                                        </transport>
                                                    </datasource>
                                                </kendo-dropdownlist>
                                            </div>
                                        </div>


                                    </div>


                                    <div class="row">

                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label asp-for="CreatedDate" class=" control-label" style="width:100%">Fecha de incio</label>
                                                <kendo-datetimepicker name="CreatedDate"
                                                                      style="width: 100%;"
                                                                      format="dd/MM/yyyy hh:mm:ss"
                                                                      time-format="hh:mm:ss"
                                                                      readonly
                                                                      data-val-required="La fecha es requerida"
                                                                      value="Model.CreatedDate" />
                                                <span asp-validation-for="CreatedDate" class="text-danger"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label asp-for="FechaFirma" class=" control-label" style="width:100%">Fecha de vencimiento</label>
                                                <kendo-datetimepicker name="FechaFirma" id="FechaFinal"
                                                                      style="width: 100%;"
                                                                      format="dd/MM/yyyy hh:mm:ss"
                                                                      time-format="hh:mm:ss"
                                                                       readonly
                                                                      data-val-required="La fecha es requerida"
                                                                      value="Model.FechaFirma" />
                                                <span asp-validation-for="FechaFirma" class="text-danger"></span>
                                            </div>

                                        </div>

                                    </div>



                                    <div class="row">
                                        <div class="col-md-12">
                                            <button id="btnBuscarCertificadoDeposito" class="form-control btn-miboton" type="submit">Buscar certificado de seguro</button>
                                        </div>
                                    </div>


                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="row" id="validation">
                        <div class="col-lg-12">
                            <div class="card">
                                <div class="card-body">
                                    @(Html.Kendo().Grid<ERPMVC.DTO.InsurancesCertificateLineDTO>()
                                                                                                       .Name("gridCertificado")
                                                                                                       .Columns(columns =>
                                                                                                       {
                                                                                                           columns.Command(command =>
                                                                                                           {

                                                                                                               command.Custom("Guardar").Text(" ").IconClass("fas fa-save").Click("SaveInsurancesCertificateLineCertificate");


                                                                                                           }).Width(200);


                                                                                                           columns.Bound(p => p.InsurancesCertificateLineId).Title("Id Linea").Width(100).Visible(true);
                                                                                                           columns.Bound(p => p.InsurancesCertificateId).Title("Id Certificado").Width(200).Visible(false);
                                                                                                           columns.Bound(p => p.CounterInsurancesCertificate).Title("Contador").Width(200);
                                                                                                           columns.Bound(p => p.CustomerName).Title("Cliente").Width(300);
                                                                                                           columns.Bound(p => p.TotalofProductLine).Format("{0:n2}").Title("Valor Asegurado").Width(200);
                                                                                                           columns.Bound(p => p.GrupoEconomicoId).Title("Grupo economico").Width(200);
                                                                                                           columns.Bound(p => p.BranchId).Title("Id Sucursal").Visible(false);
                                                                                                           columns.Bound(p => p.WarehouseId).Title("Id Bodega").Visible(false);
                                                                                                           columns.Bound(p => p.FechaFirma).Title("Fecha Firma").Visible(false);

                                                                                                       })
                                                                                                           .Filterable(f => f.Operators(o => o.ForString(s => s
                                                                                                    .Clear()
                                                                                                    .Contains("Contiene")
                                                                                                    .DoesNotContain("No contiene")
                                                                                                    .EndsWith("Termina con")
                                                                                                    .IsEqualTo("Es igual a")
                                                                                                    .IsNotEqualTo("No es igual a")
                                                                                                    .IsNull("Es nulo")
                                                                                                    .StartsWith("Inicia con")


                                                                                              )
                                                                                              .ForNumber(n => n
                                                                                                .Clear()
                                                                                                .IsEqualTo("Es igual a")
                                                                                                .IsGreaterThan("Es mayor que")
                                                                                                .IsLessThan("Es menor que")
                                                                                                .IsNull("Es nulo")
                                                                                                .IsLessThanOrEqualTo("Es menor o igual que")
                                                                                                .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                                                              )
                                                                                              .ForDate(d => d
                                                                                              .Clear()
                                                                                              .IsEqualTo("Es igual que")
                                                                                              .IsGreaterThan("Es mayor que")
                                                                                              .IsLessThan("Es menor que")
                                                                                              .IsLessThanOrEqualTo("Es menor o igual que")
                                                                                              .IsGreaterThanOrEqualTo("Es mayor o igual que")
                                                                                              .IsNotEqualTo("No es igual que")
                                                                                               )
                                                                                            ))
                                                                                                       .ToolBar(tools =>
                                                                                                       {


                                                                                                       })
                                                                                                        .Editable(e => e.Mode(GridEditMode.PopUp))
                                                                                                         .Sortable()
                                                                                                         .AutoBind(true)
                                                                                                         .Pageable()
                                                                                                         .Filterable()
                                                                                                         .Scrollable()
                                                                                                         // .ClientDetailTemplateId("template")
                                                                                                         //.Events(e=>e.Save("onsave"))
                                                                                                         .DataSource(dataSource =>

                                                                                                        dataSource
                                                                                                        //.Ajax()
                                                                                                        .WebApi()

                                                                                                         .ServerOperation(true)
                                                                                                         .Model(model =>
                                                                                                         {
                                                                                                             model.Id(p => p.InsurancesCertificateLineId);
                                                                                                             model.Field(p => p.InsurancesCertificateLineId).Editable(false);
                                                                                                             model.Field(p => p.InsurancesCertificateId).Editable(false);
                                                                                                                             //  model.Field(p => p.IdCD).Editable(false);

                                                                                                                         })
                                                                                                         .Events(events =>
                                                                                                         {
                                                                                                             events.Error("error_handler");
                                                                                                                             //events.upda("EditHandler");

                                                                                                                         })
                                                                                                         .Read(read => read.Action("GetInsurancesCertificateLineById", "InsurancesCertificateLine").Data("GetCertificadoSeguros"))

)
                                    )



                                </div>


                            </div>
                        </div>
                    </div>

                </div>

            </div>

        </div>
    </div>
</div>

<script>
     
    function GetCertificadoSeguros() {
        debugger;
        return {
            InsurancesCertificateId: "",
            InsurancesCertificateLineId: "",
            CustomerId: "",
            BranchId: "",
            WarehouseId: "",
            CounterInsurancesCertificate: "",


        }
    }

    function RefrescarGridCertificado() {
        debugger;
        //var grid = $("#gridCertificado").data("kendoGrid").dataSource.data([]);
        var grid = $("#gridCertificado").data("kendoGrid");
        var dataSource = grid.dataSource;
        dataSource.data([]);//clear out old data
        dataSource.data();//add new data
        grid.setDataSource();//set the new data as the grids new datasource
        dataSource.sync();
      
    }

    @*function ImprimirCertificado(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        window.location.href = '@Url.Action("SFCertificate", "InsurancesCertificate")/' + dataItem.InsurancesCertificateLineId;


    };*@

    function ImprimirCertificado(e, id) {
       // debugger;
        var dataItem;
        if (e != null) {
            e.preventDefault();
            dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        }
        else {
            dataItem = { InsurancesCertificateLineId: $("#CertificateLineId").val() };
        }
        var url = '@Url.Action("SFCertificate", "InsurancesCertificate")/' + dataItem.InsurancesCertificateLineId;
           var win = window.open(url, '_blank');
           win.focus();
    }

    function BuscarCertificadoDeposito(e) {
                    var notification = $("#notification").data("kendoNotification");
                   // e.preventDefault();

                debugger;
        var dataObject = {
                        'InsurancesCertificateLineId': $("#InsurancesCertificateLineId").val(),
                        'InsurancesCertificateId': $("#InsurancesCertificateId").val(),
                        'BranchId': $("#sucursal").val(),
                        'WarehouseId': $("#bodega").val(),
                        'WarehouseName': $("#bodega").data("kendoDropDownList").text(),
                        'CustomerId': $("#CustomerId").val(),
                        'CustomerName': $("#CustomerId").data("kendoDropDownList").text(),
                        'FechaFirma': $("#FechaFinal").getKendoDateTimePicker().value().toJSON(),
                        //'CounterInsurancesCertificate': $("#CounterInsurancesCertificate").val(),
                        //'TotalofProductLine': $("#TotalofProductLine").val(),
                        //'GrupoEconomicoId': $("#GrupoEconomicoId").val(),
                        //'CreatedDate': $("#CreatedDate").getKendoDateTimePicker().value().toJSON(),
                        //'ModifiedDate': $("#ModifiedDate").getKendoDateTimePicker().value().toJSON(),
                    
                    };

                   console.log(JSON.stringify(dataObject));
                   // form.validate();
        var validator = $("#frmCertificadoDepositoSeguro").data("kendoValidator");
                    var status = $(".status");
                    if (validator.validate()) {

                            $.ajax({
                                url: '@Url.Action("BuscarCertificadoDeposito", "InsurancesCertificate")',
                                method: 'POST',
                                datatype: "json",
                                contentType: 'application/json',
                                async: false,
                                data: JSON.stringify(dataObject),
                                success: function (data) {
                                    var grid = $("#gridCertificado").getKendoGrid();
                                    var datasource = grid.dataSource;
                                    var raw = datasource._data;
                                    for (i = datasource._data.length - 1; i >= 0; i--) {
                                        var item = raw[i];
                                        datasource.remove(item);
                                    }

                                    for (var i = 0; i < data.Data.length; i++) {
                                    
                                       
                                        datasource.insert(data.Data[i]);
                                    }

                                    var gridCertificadoDeposito = $("#gridCertificado").data().kendoGrid.dataSource.data();
                                    //console.log('Listado Certificado: ' + gridCertificadoDeposito.length);
                                    if (gridCertificadoDeposito.length > 0) {
                                        //$("#myModalCertificate").modal('show');
                                    }
                                    else {
                                        //$("#myModalCertificate").modal('hide');
                                    }

                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {

                                    notification.show({
                                        title: "Validación",
                                        message: textStatus + ": " + XMLHttpRequest.responseText
                                    }, "error");

                                }
                            });

                        }
                    else {
                        $("#btnBuscarCertificadoDeposito").show();
                        $("#btnBuscarCertificadoDeposito").prop("disabled", false);
                            status.text("Oops! Hay datos invalidos en el formulario.")
                                .removeClass("valid")
                                .addClass("invalid");
                        }


        
    }


      function SaveInsurancesCertificateLineCertificate(e) {

                    var notification = $("#notification").data("kendoNotification");
                   // e.preventDefault();
          var grid = $("#gridCertificado").data("kendoGrid");
          var dataItem = grid.dataItem("tbody tr:eq(0)")
                    
          var dataObject = {
              'InsurancesCertificateId': $("#InsurancesCertificateId").val(),
              'BranchId': dataItem.BranchId,
              'WarehouseId': dataItem.WarehouseId,
              'WarehouseName': dataItem.WarehouseName,
              'CustomerId': dataItem.CustomerId, 
              'CounterInsurancesCertificate': dataItem.CounterInsurancesCertificate,
              'TotalofProductLine': dataItem.TotalofProductLine,
              'GrupoEconomicoId': dataItem.GrupoEconomicoId,
              'FechaFirma': dataItem.FechaFirma,
          };

          

          debugger;
          var validator = $("#frmCertificadoDepositoSeguro").data("kendoValidator");
          var status = $(".status");
                    if (validator.validate()) {

                            $.ajax({
                                url: '@Url.Action("SaveInsurancesCertificateLine", "InsurancesCertificateLine")',
                                method: 'POST',
                                datatype: "json",
                                contentType: 'application/json',
                                async: false,
                                data: JSON.stringify(dataObject),
                                success: function (data) { 
                                    $("#CertificateLineId").val(data.InsurancesCertificateLineId);
                                    ImprimirCertificado(null, data.InsurancesCertificateLineId);                                   
                                    $.toast({
                                        heading: 'Satisfactorio',
                                        text: '<br/><br/> Datos guardados correctamente.',
                                        position: 'top-right',
                                        loaderBg: '#ff6849',
                                        icon: 'success',
                                        hideAfter: 30000,
                                        stack: 6
                                    });

                                    RefrescarGridCertificado();
                                    clearsession();


                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {

                                    notification.show({
                                        title: "Validación",
                                        message: textStatus + ": " + XMLHttpRequest.responseText
                                    }, "error");

                                }
                            });

                    }
          
                    else {
                        $("#btnInsurancesCertificate").show();
                        $("#btnInsurancesCertificate").prop("disabled", false);
                            status.text("Oops! Hay datos invalidos en el formulario.")
                                .removeClass("valid")
                                .addClass("invalid");
                        }




       // }
       // $("#btnInsurancesCertificate").show();
       // $("#btnInsurancesCertificate").prop("disabled", false);
      }
  
 </script>
