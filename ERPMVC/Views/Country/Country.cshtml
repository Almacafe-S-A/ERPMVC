@using Kendo.Mvc.UI

@{
    ViewData["Title"] = "País";
    bool permisoAgregar, permisoEditar, permisoEliminar, permisoExportar;
    permisoAgregar = (bool)ViewData["permisoAgregar"];
    permisoEditar = (bool)ViewData["permisoEditar"];
    permisoEliminar = (bool)ViewData["permisoEliminar"];
}

<script>

    function onsave(e) {
        //   console.log(new Date(e.model.FechaRecepcion).toISOString());
        // e.model.set('FechaRecepcion', new Date(e.model.FechaRecepcion).toISOString());
    }

    function caidata(data) {
        data.FechaRecepcion = data.FechaRecepcion.toISOString('yyyy-MM-dd');
        data.FechaLimiteEmision = data.FechaLimiteEmision.toISOString('yyyy-MM-dd');
    }

    function AddCountry() {

        $('#ModalCountry').find(':input').not(':submit').val('');
        $('#ModalCountry').modal('show');
        $("#CountryId").val('0');
        $("#IdEstado").data("kendoDropDownList").value(0);
        var validator = $("#frmCountry").data("kendoValidator");
        validator.hideMessages();

    }


    function EditCountry(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var dataObject = {
            Id: dataItem.Id,
            editar: 0
        };

        $.ajax({
            url: '@Url.Action("pvwAddCountry", "Country")',
            method: 'POST',
            datatype: "json",
            contentType: 'application/json',
            async: false,
            data: JSON.stringify(dataObject),
            success: function (result) {
                $("#numCountry").html('');
                $("#numCountry").html(result);


                //$("#btnCAI").hide();
                $('#ModalCountry').modal('show');
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert(textStatus + ": " + XMLHttpRequest.responseText);
            }
        });
    }

    function RefrescarGrid() {
        var grid = $("#gridCountry").getKendoGrid();
        grid.dataSource.read();
    }

    function EsGafi() {
        return { GAFI: false }
    }



</script>

<h3 class="text-themecolor">País</h3>

@(Html.Kendo().Grid<ERPMVC.Models.Country>
    ()

    .Name("gridCountry")

    .Columns(columns =>
    {
        if (permisoEditar == true || permisoEliminar == true)
        {
            columns.Command(command =>
            {
                //command.Custom("Ver detalles").Click("Detalles");
                if (permisoEditar)
                {
                    command.Custom("Editar").Click("EditCountry").Text(" ").IconClass("fa fa-edit");
                }
                if (permisoEliminar)
                {
                    command.Destroy().Text("Eliminar").Text(" ").IconClass("fa fa-trash-alt");
                }

            }).Width(150).Title("Acciones");
        }
        columns.Bound(p => p.Id).Width(125);
        columns.Bound(p => p.SortName).Width(170).Title("Nombre Clasificación");
        columns.Bound(p => p.Name).Width(170);
        columns.Bound(p => p.PhoneCode).Width(170);
        columns.Bound(p => p.Estado).Width(170);


    })


    .ToolBar(tools =>
    {

        //tools.Create();
        if (permisoAgregar)
        {
            tools.Custom().Text("Agregar").IconClass("k-icon k-i-plus")
                   .HtmlAttributes(new { @class = "k-i-plus-sm", onclick = "AddCountry()" });
        }
            tools.Excel().Text("Exportar a excel").HtmlAttributes(new { @class = "toolbar-field" });
            tools.Pdf().Text("Exportar a pdf").HtmlAttributes(new { @class = "toolbar-field" });
        




    })
    .Editable(e => e.Mode(GridEditMode.PopUp))
    .Sortable()
    .Pageable()
    .Filterable()
    .Scrollable()
    .Pdf(pdf => pdf.FileName("CountryReport" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
    + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".pdf")
    .ProxyURL(Url.Action("Export", "Home")).AllPages())
    .Excel(excel => excel.FileName("CountryReport_" + DateTime.Now.Year + "_" + DateTime.Now.Month + "_"
    + DateTime.Now.Day + "_" + DateTime.Now.Hour + "_" + DateTime.Now.Minute + "_" + DateTime.Now.Second + ".xlsx").Filterable(true)
    .ProxyURL(Url.Action("Export", "Home")).AllPages(true))
    .DataSource(dataSource =>
    dataSource
    .WebApi()

    .ServerOperation(true)
    .Model(model =>
    {
        model.Id(p => p.Id);
        model.Field(p => p.Id).Editable(false);


    })
    .Events(events => events.Error("error_handler"))
    .Read(read => read.Action("Get", "Country").Data("EsGafi"))
    .Create(create => create.Action("Insert", "Country").Type(HttpVerbs.Post))
    .Update(update => update.Action("Update", "Country").Type(HttpVerbs.Post))
    .Destroy(destroy => destroy.Action("Delete", "Country").Type(HttpVerbs.Post))

    )
    .Events(e =>
    {
        e.Save("onsave");

    })
    )

    <div id="numCountry">
        @await Html.PartialAsync("pvwAddCountry", new ERPMVC.DTO.CountryDTO { Id = 0 })
    </div>

    <script>
        function setToolbarTooltip(btn_cl, btn_tooltip) {
            $("#gridCountry").kendoTooltip({
                filter: btn_cl,
                content: btn_tooltip
            });
        }

        function setRowButtonTooltip(btn_cl, btn_tooltip) {
            $("#gridCountry").kendoTooltip({
                filter: btn_cl,
                content: btn_tooltip
            });
        }

        setToolbarTooltip(".k-grid-Agregar", "Agregar nuevo registro");
        setRowButtonTooltip(".k-grid-delete", "Eliminar registro");
        setRowButtonTooltip(".k-grid-Editar", "Editar registro");
    </script>